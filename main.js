// Generated by Haxe 4.2.0
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
class DateTools {
	static __format_get(d,e) {
		switch(e) {
		case "%":
			return "%";
		case "A":
			return DateTools.DAY_NAMES[d.getDay()];
		case "B":
			return DateTools.MONTH_NAMES[d.getMonth()];
		case "C":
			return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
		case "D":
			return DateTools.__format(d,"%m/%d/%y");
		case "F":
			return DateTools.__format(d,"%Y-%m-%d");
		case "I":case "l":
			let hour = d.getHours() % 12;
			return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
		case "M":
			return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
		case "R":
			return DateTools.__format(d,"%H:%M");
		case "S":
			return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
		case "T":
			return DateTools.__format(d,"%H:%M:%S");
		case "Y":
			return Std.string(d.getFullYear());
		case "a":
			return DateTools.DAY_SHORT_NAMES[d.getDay()];
		case "b":case "h":
			return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
		case "d":
			return StringTools.lpad(Std.string(d.getDate()),"0",2);
		case "e":
			return Std.string(d.getDate());
		case "H":case "k":
			return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
		case "m":
			return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
		case "n":
			return "\n";
		case "p":
			if(d.getHours() > 11) {
				return "PM";
			} else {
				return "AM";
			}
			break;
		case "r":
			return DateTools.__format(d,"%I:%M:%S %p");
		case "s":
			return Std.string(d.getTime() / 1000 | 0);
		case "t":
			return "\t";
		case "u":
			let t = d.getDay();
			if(t == 0) {
				return "7";
			} else if(t == null) {
				return "null";
			} else {
				return "" + t;
			}
			break;
		case "w":
			return Std.string(d.getDay());
		case "y":
			return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
		default:
			throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
		}
	}
	static __format(d,f) {
		let r_b = "";
		let p = 0;
		while(true) {
			let np = f.indexOf("%",p);
			if(np < 0) {
				break;
			}
			let len = np - p;
			r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
			r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
			p = np + 2;
		}
		let len = f.length - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		return r_b;
	}
	static format(d,f) {
		return DateTools.__format(d,f);
	}
}
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
class EReg {
	constructor(r,opt) {
		this.r = new RegExp(r,opt.split("u").join(""));
	}
	match(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	matched(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	matchedPos() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	matchSub(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			let b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			let b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	split(s) {
		return s.replace(this.r,"#__delim__#").split("#__delim__#");
	}
	map(s,f) {
		let offset = 0;
		let buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			let p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
}
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
Object.assign(EReg.prototype, {
	__class__: EReg
	,r: null
});
class HxOverrides {
	static dateStr(date) {
		let m = date.getMonth() + 1;
		let d = date.getDate();
		let h = date.getHours();
		let mi = date.getMinutes();
		let s = date.getSeconds();
		return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
	}
	static strDate(s) {
		switch(s.length) {
		case 8:
			let k = s.split(":");
			let d = new Date();
			d["setTime"](0);
			d["setUTCHours"](k[0]);
			d["setUTCMinutes"](k[1]);
			d["setUTCSeconds"](k[2]);
			return d;
		case 10:
			let k1 = s.split("-");
			return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
		case 19:
			let k2 = s.split(" ");
			let y = k2[0].split("-");
			let t = k2[1].split(":");
			return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
		default:
			throw haxe_Exception.thrown("Invalid date format : " + s);
		}
	}
	static cca(s,index) {
		let x = s.charCodeAt(index);
		if(x != x) {
			return undefined;
		}
		return x;
	}
	static substr(s,pos,len) {
		if(len == null) {
			len = s.length;
		} else if(len < 0) {
			if(pos == 0) {
				len = s.length + len;
			} else {
				return "";
			}
		}
		return s.substr(pos,len);
	}
	static remove(a,obj) {
		let i = a.indexOf(obj);
		if(i == -1) {
			return false;
		}
		a.splice(i,1);
		return true;
	}
	static now() {
		return Date.now();
	}
}
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
class IntIterator {
	constructor(min,max) {
		this.min = min;
		this.max = max;
	}
	hasNext() {
		return this.min < this.max;
	}
	next() {
		return this.min++;
	}
}
$hxClasses["IntIterator"] = IntIterator;
IntIterator.__name__ = "IntIterator";
Object.assign(IntIterator.prototype, {
	__class__: IntIterator
	,min: null
	,max: null
});
class coconut_diffing_Widget {
	constructor(rendered,mounted,updated,unmounting) {
		if(coconut_diffing_Widget._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(rendered,mounted,updated,unmounting);
	}
	_hx_constructor(rendered,mounted,updated,unmounting) {
		this._coco_vStructure = rendered;
		this._coco_viewMounted = mounted;
		this._coco_viewUpdated = updated;
		this._coco_viewUnmounting = unmounting;
	}
}
$hxClasses["coconut.diffing.Widget"] = coconut_diffing_Widget;
coconut_diffing_Widget.__name__ = "coconut.diffing.Widget";
Object.assign(coconut_diffing_Widget.prototype, {
	__class__: coconut_diffing_Widget
	,_coco_implicits: null
	,_coco_lifeCycle: null
	,_coco_viewMounted: null
	,_coco_viewUpdated: null
	,_coco_viewUnmounting: null
	,_coco_vStructure: null
});
class coconut_haxeui_View extends coconut_diffing_Widget {
	constructor(render,shouldUpdate,track,beforeRerender,rendered) {
		if(coconut_diffing_Widget._hx_skip_constructor) {
			super();
			return;
		}
		coconut_diffing_Widget._hx_skip_constructor = true;
		super();
		coconut_diffing_Widget._hx_skip_constructor = false;
		this._hx_constructor(render,shouldUpdate,track,beforeRerender,rendered);
	}
	_hx_constructor(render,shouldUpdate,track,beforeRerender,rendered) {
		this.__au = [];
		this.__bc = [];
		this.__bu = [];
		let _gthis = this;
		let mounted;
		if(rendered != null) {
			let _g = rendered;
			let a1 = true;
			mounted = function() {
				_g(a1);
			};
		} else {
			mounted = null;
		}
		let updated;
		if(rendered != null) {
			let _g = rendered;
			let a1 = false;
			updated = function() {
				_g(a1);
			};
		} else {
			updated = null;
		}
		let firstTime = true;
		let last = null;
		let hasBeforeRerender = beforeRerender != null;
		let hasUpdated = updated != null;
		let _coco_revision = tink_state_State._new(0);
		let lastRev = tink_state_State.get_value(_coco_revision);
		super._hx_constructor(new tink_state_internal_AutoObservable(tink_state_internal__$AutoObservable_Computation.sync(function() {
			let curRev = tink_state_State.get_value(_coco_revision);
			if(track != null) {
				track();
			}
			if(firstTime) {
				firstTime = false;
			} else {
				if(curRev == lastRev && shouldUpdate != null && !shouldUpdate()) {
					return last;
				}
				let hasCallbacks = _gthis.__bc.length > 0;
				if(hasBeforeRerender || hasCallbacks) {
					let before = tink_state_internal_AutoObservable.cur;
					tink_state_internal_AutoObservable.cur = null;
					if(hasBeforeRerender) {
						beforeRerender();
					}
					if(hasCallbacks) {
						let _g = 0;
						let _g1 = _gthis.__bc.splice(0,_gthis.__bc.length);
						while(_g < _g1.length) tink_core_Callback.invoke(_g1[_g++],false);
					}
					tink_state_internal_AutoObservable.cur = before;
				}
			}
			lastRev = curRev;
			last = render();
			return last;
		}),null,null),mounted,function() {
			let hasCallbacks = _gthis.__au.length > 0;
			if(hasUpdated || hasCallbacks) {
				let before = tink_state_internal_AutoObservable.cur;
				tink_state_internal_AutoObservable.cur = null;
				if(hasUpdated) {
					updated();
				}
				if(hasCallbacks) {
					let _g = 0;
					let _g1 = _gthis.__au.splice(0,_gthis.__au.length);
					while(_g < _g1.length) tink_core_Callback.invoke(_g1[_g++],null);
				}
				tink_state_internal_AutoObservable.cur = before;
			}
		},function() {
			last = null;
			firstTime = true;
			_gthis.__beforeUnmount();
		});
		this._coco_revision = _coco_revision;
	}
	__beforeUnmount() {
		let _g = 0;
		let _g1 = this.__bu.splice(0,this.__bu.length);
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(c != null) {
				c.cancel();
			}
		}
		let _g2 = 0;
		let _g3 = this.__bc.splice(0,this.__bu.length);
		while(_g2 < _g3.length) tink_core_Callback.invoke(_g3[_g2++],true);
	}
}
$hxClasses["coconut.haxeui.View"] = coconut_haxeui_View;
coconut_haxeui_View.__name__ = "coconut.haxeui.View";
coconut_haxeui_View.__super__ = coconut_diffing_Widget;
Object.assign(coconut_haxeui_View.prototype, {
	__class__: coconut_haxeui_View
	,_coco_revision: null
	,__bu: null
	,__bc: null
	,__au: null
});
class MyView extends coconut_haxeui_View {
	constructor(__coco_data_,implicits) {
		coconut_diffing_Widget._hx_skip_constructor = true;
		super();
		coconut_diffing_Widget._hx_skip_constructor = false;
		this._hx_constructor(__coco_data_,implicits);
	}
	_hx_constructor(__coco_data_,implicits) {
		this._coco_implicits = implicits;
		this.__coco_text = new coconut_ui_internal_Slot(this,null,new tink_state__$Observable_ConstObservable("ciao",null));
		this.__coco_count = tink_state_State._new(0,null);
		this.__initAttributes(__coco_data_);
		super._hx_constructor($bind(this,this.render),null,null,null,null);
	}
	render() {
		let hxxMeta = { };
		let hxxMeta1 = { };
		let attr = { text : tink_state_Observable.get_value(this.__coco_text) + "-" + tink_state_State.get_value(this.__coco_count)};
		let _this = this;
		let tmp = function(event) {
			let lhs = tink_state_State.get_value(_this.__coco_count);
			_this.__coco_count.set(lhs + 1);
		};
		return coconut_diffing_FactoryTools.vnode(haxe_ui_containers_HBox.COCONUT_NODE_TYPE,{ onClick : tmp},hxxMeta.key,hxxMeta.ref,[coconut_diffing_FactoryTools.vnode(haxe_ui_components_Label.COCONUT_NODE_TYPE,attr,hxxMeta1.key,hxxMeta1.ref,null)]);
	}
	__initAttributes(attributes) {
		this.__coco_text.setData(attributes.text);
	}
	static fromHxx(hxxMeta,attributes) {
		let _g = MyView.__factory;
		return new coconut_diffing_internal_VWidget(_g == null ? MyView.__factory = new coconut_diffing_internal_WidgetFactory(function(__coco_data_,implicits) {
			return new MyView(__coco_data_,implicits);
		},function(v,attr) {
			v.__initAttributes(attr);
		}) : _g,attributes,hxxMeta.key,hxxMeta.ref);
	}
}
$hxClasses["MyView"] = MyView;
MyView.__name__ = "MyView";
MyView.__super__ = coconut_haxeui_View;
Object.assign(MyView.prototype, {
	__class__: MyView
	,__coco_text: null
	,__coco_count: null
});
function Main_main() {
	let root = new haxe_ui_core_Component();
	haxe_ui_core_Screen.get_instance().addComponent(root);
	root.set_width(500);
	root.set_height(500);
	coconut_haxeui_Renderer.mountInto(root,MyView.fromHxx({ },{ text : new tink_state__$Observable_ConstObservable("hello",null)}));
	haxe_ui_Toolkit.init();
	haxe_ui_Toolkit.init();
}
Math.__name__ = "Math";
class Reflect {
	static field(o,field) {
		try {
			return o[field];
		} catch( _g ) {
			return null;
		}
	}
	static getProperty(o,field) {
		let tmp;
		if(o == null) {
			return null;
		} else {
			let tmp1;
			if(o.__properties__) {
				tmp = o.__properties__["get_" + field];
				tmp1 = tmp;
			} else {
				tmp1 = false;
			}
			if(tmp1) {
				return o[tmp]();
			} else {
				return o[field];
			}
		}
	}
	static setProperty(o,field,value) {
		let tmp;
		let tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["set_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			o[tmp](value);
		} else {
			o[field] = value;
		}
	}
	static fields(o) {
		let a = [];
		if(o != null) {
			let hasOwnProperty = Object.prototype.hasOwnProperty;
			for( var f in o ) {
			if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
				a.push(f);
			}
			}
		}
		return a;
	}
	static isFunction(f) {
		if(typeof(f) == "function") {
			return !(f.__name__ || f.__ename__);
		} else {
			return false;
		}
	}
	static compare(a,b) {
		if(a == b) {
			return 0;
		} else if(a > b) {
			return 1;
		} else {
			return -1;
		}
	}
	static isObject(v) {
		if(v == null) {
			return false;
		}
		let t = typeof(v);
		if(!(t == "string" || t == "object" && v.__enum__ == null)) {
			if(t == "function") {
				return (v.__name__ || v.__ename__) != null;
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static isEnumValue(v) {
		if(v != null) {
			return v.__enum__ != null;
		} else {
			return false;
		}
	}
	static makeVarArgs(f) {
		return function() {
			let a = Array.prototype.slice;
			let a1 = arguments;
			let a2 = a.call(a1);
			return f(a2);
		};
	}
}
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
class Std {
	static string(s) {
		return js_Boot.__string_rec(s,"");
	}
	static parseInt(x) {
		if(x != null) {
			let _g = 0;
			let _g1 = x.length;
			while(_g < _g1) {
				let i = _g++;
				let c = x.charCodeAt(i);
				if(c <= 8 || c >= 14 && c != 32 && c != 45) {
					let nc = x.charCodeAt(i + 1);
					let v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
					if(isNaN(v)) {
						return null;
					} else {
						return v;
					}
				}
			}
		}
		return null;
	}
}
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
class StringTools {
	static isSpace(s,pos) {
		let c = HxOverrides.cca(s,pos);
		if(!(c > 8 && c < 14)) {
			return c == 32;
		} else {
			return true;
		}
	}
	static ltrim(s) {
		let l = s.length;
		let r = 0;
		while(r < l && StringTools.isSpace(s,r)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,r,l - r);
		} else {
			return s;
		}
	}
	static rtrim(s) {
		let l = s.length;
		let r = 0;
		while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
		if(r > 0) {
			return HxOverrides.substr(s,0,l - r);
		} else {
			return s;
		}
	}
	static trim(s) {
		return StringTools.ltrim(StringTools.rtrim(s));
	}
	static lpad(s,c,l) {
		if(c.length <= 0) {
			return s;
		}
		let buf_b = "";
		l -= s.length;
		while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
		buf_b += s == null ? "null" : "" + s;
		return buf_b;
	}
	static replace(s,sub,by) {
		return s.split(sub).join(by);
	}
	static hex(n,digits) {
		let s = "";
		while(true) {
			s = "0123456789ABCDEF".charAt(n & 15) + s;
			n >>>= 4;
			if(!(n > 0)) {
				break;
			}
		}
		if(digits != null) {
			while(s.length < digits) s = "0" + s;
		}
		return s;
	}
}
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
var ValueType = $hxEnums["ValueType"] = { __ename__:true,__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
class Type {
	static createInstance(cl,args) {
		return new (Function.prototype.bind.apply(cl,[null].concat(args)));
	}
	static getInstanceFields(c) {
		let result = [];
		while(c != null) {
			let _g = 0;
			let _g1 = Object.getOwnPropertyNames(c.prototype);
			while(_g < _g1.length) {
				let name = _g1[_g];
				++_g;
				switch(name) {
				case "__class__":case "__properties__":case "constructor":
					break;
				default:
					if(result.indexOf(name) == -1) {
						result.push(name);
					}
				}
			}
			c = c.__super__;
		}
		return result;
	}
	static typeof(v) {
		switch(typeof(v)) {
		case "boolean":
			return ValueType.TBool;
		case "function":
			if(v.__name__ || v.__ename__) {
				return ValueType.TObject;
			}
			return ValueType.TFunction;
		case "number":
			if(Math.ceil(v) == v % 2147483648.0) {
				return ValueType.TInt;
			}
			return ValueType.TFloat;
		case "object":
			if(v == null) {
				return ValueType.TNull;
			}
			let e = v.__enum__;
			if(e != null) {
				return ValueType.TEnum($hxEnums[e]);
			}
			let c = js_Boot.getClass(v);
			if(c != null) {
				return ValueType.TClass(c);
			}
			return ValueType.TObject;
		case "string":
			return ValueType.TClass(String);
		case "undefined":
			return ValueType.TNull;
		default:
			return ValueType.TUnknown;
		}
	}
	static enumEq(a,b) {
		if(a == b) {
			return true;
		}
		try {
			let e = a.__enum__;
			if(e == null || e != b.__enum__) {
				return false;
			}
			if(a._hx_index != b._hx_index) {
				return false;
			}
			let enm = $hxEnums[e];
			let params = enm.__constructs__[a._hx_index].__params__;
			let _g = 0;
			while(_g < params.length) {
				let f = params[_g];
				++_g;
				if(!Type.enumEq(a[f],b[f])) {
					return false;
				}
			}
		} catch( _g ) {
			return false;
		}
		return true;
	}
	static enumParameters(e) {
		let enm = $hxEnums[e.__enum__];
		let params = enm.__constructs__[e._hx_index].__params__;
		if(params != null) {
			let _g = [];
			let _g1 = 0;
			while(_g1 < params.length) {
				let p = params[_g1];
				++_g1;
				_g.push(e[p]);
			}
			return _g;
		} else {
			return [];
		}
	}
}
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
class coconut_diffing_Applicator {
}
$hxClasses["coconut.diffing.Applicator"] = coconut_diffing_Applicator;
coconut_diffing_Applicator.__name__ = "coconut.diffing.Applicator";
coconut_diffing_Applicator.__isInterface__ = true;
Object.assign(coconut_diffing_Applicator.prototype, {
	__class__: coconut_diffing_Applicator
	,children: null
	,siblings: null
	,createMarker: null
	,releaseMarker: null
});
class coconut_diffing_Cursor {
}
$hxClasses["coconut.diffing.Cursor"] = coconut_diffing_Cursor;
coconut_diffing_Cursor.__name__ = "coconut.diffing.Cursor";
coconut_diffing_Cursor.__isInterface__ = true;
Object.assign(coconut_diffing_Cursor.prototype, {
	__class__: coconut_diffing_Cursor
	,applicator: null
	,insert: null
	,'delete': null
});
class coconut_diffing_Factory {
}
$hxClasses["coconut.diffing.Factory"] = coconut_diffing_Factory;
coconut_diffing_Factory.__name__ = "coconut.diffing.Factory";
coconut_diffing_Factory.__isInterface__ = true;
Object.assign(coconut_diffing_Factory.prototype, {
	__class__: coconut_diffing_Factory
	,type: null
	,create: null
	,update: null
});
class coconut_diffing_FactoryTools {
	static vnode(f,data,key,ref,children) {
		return new coconut_diffing_internal_VNative(f,data,key,ref,children);
	}
}
$hxClasses["coconut.diffing.FactoryTools"] = coconut_diffing_FactoryTools;
coconut_diffing_FactoryTools.__name__ = "coconut.diffing.FactoryTools";
class coconut_diffing_Properties {
	constructor(construct,apply) {
		this.type = coconut_diffing_TypeId.idCounter++;
		this.construct = construct;
		this.apply = apply;
	}
	create(data) {
		let ret = this.construct();
		this.update(ret,data,null);
		return ret;
	}
	update(target,next,prev) {
		coconut_diffing_Properties.set(target,next,prev,this.apply);
	}
	static set(target,nu,old,apply) {
		if(nu == null) {
			if(old != null) {
				let _g = 0;
				let _g1 = Reflect.fields(old);
				while(_g < _g1.length) apply(target,_g1[_g++],null,null);
			}
		} else if(old == null) {
			let _g_keys = Reflect.fields(nu);
			let _g_index = 0;
			while(_g_index < _g_keys.length) {
				let key = _g_keys[_g_index++];
				let _g = { value : nu[key], key : key};
				apply(target,_g.key,_g.value,null);
			}
		} else {
			let _g_keys = Reflect.fields(nu);
			let _g_index = 0;
			while(_g_index < _g_keys.length) {
				let key = _g_keys[_g_index++];
				let _g = { value : nu[key], key : key};
				let k = _g.key;
				let v = _g.value;
				let old1 = old[k];
				if(v != old1) {
					apply(target,k,v,old1);
				}
			}
			let _g = 0;
			let _g1 = Reflect.fields(old);
			while(_g < _g1.length) {
				let k = _g1[_g];
				++_g;
				if(!Object.prototype.hasOwnProperty.call(nu,k)) {
					apply(target,k,null,null);
				}
			}
		}
	}
}
$hxClasses["coconut.diffing.Properties"] = coconut_diffing_Properties;
coconut_diffing_Properties.__name__ = "coconut.diffing.Properties";
coconut_diffing_Properties.__interfaces__ = [coconut_diffing_Factory];
Object.assign(coconut_diffing_Properties.prototype, {
	__class__: coconut_diffing_Properties
	,type: null
	,construct: null
	,apply: null
});
class coconut_diffing_internal_Child {
}
$hxClasses["coconut.diffing.internal.Child"] = coconut_diffing_internal_Child;
coconut_diffing_internal_Child.__name__ = "coconut.diffing.internal.Child";
coconut_diffing_internal_Child.__isInterface__ = true;
Object.assign(coconut_diffing_internal_Child.prototype, {
	__class__: coconut_diffing_internal_Child
	,performUpdate: null
});
class coconut_diffing_internal_Parent {
	constructor(context,parent) {
		this.pendingUpdates = [];
		this.context = context;
		this.parent = parent;
	}
	scheduleUpdate(child) {
		if(this.pendingUpdates.push(child) == 1) {
			this.invalidateParent();
		}
	}
	performUpdate(later) {
		if(this.pendingUpdates.length > 0) {
			let _g = 0;
			let _g1 = this.pendingUpdates.splice(0,this.pendingUpdates.length);
			while(_g < _g1.length) _g1[_g++].performUpdate(later);
		}
	}
	invalidateParent() {
		let _gthis = this;
		let _g = this.parent;
		if(_g == null) {
			tink_state_Observable.scheduler.schedule(tink_state__$Scheduler_JustOnce.call(function() {
				coconut_diffing_internal_Parent.withLater($bind(_gthis,_gthis.performUpdate));
			}));
		} else {
			_g.scheduleUpdate(this);
		}
	}
	static withLater(f) {
		let tasks = [];
		let ret = f(function(task) {
			if(task != null) {
				tasks.push(task);
			}
		});
		let _g = 0;
		while(_g < tasks.length) tasks[_g++]();
		return ret;
	}
}
$hxClasses["coconut.diffing.internal.Parent"] = coconut_diffing_internal_Parent;
coconut_diffing_internal_Parent.__name__ = "coconut.diffing.internal.Parent";
coconut_diffing_internal_Parent.__interfaces__ = [coconut_diffing_internal_Child];
Object.assign(coconut_diffing_internal_Parent.prototype, {
	__class__: coconut_diffing_internal_Parent
	,pendingUpdates: null
	,parent: null
	,context: null
});
class haxe_IMap {
}
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
Object.assign(haxe_IMap.prototype, {
	__class__: haxe_IMap
	,get: null
	,set: null
	,keys: null
});
class haxe_ds_ObjectMap {
	constructor() {
		this.h = { __keys__ : { }};
	}
	set(key,value) {
		let id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	get(key) {
		return this.h[key.__id__];
	}
	remove(key) {
		let id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	keys() {
		let a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	iterator() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			let i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
}
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_ObjectMap.prototype, {
	__class__: haxe_ds_ObjectMap
	,h: null
});
class coconut_diffing_Root extends coconut_diffing_internal_Parent {
	constructor(parent,applicator,content) {
		super(new coconut_ui_internal_ImplicitContext());
		let _gthis = this;
		this.rendered = coconut_diffing_internal_Parent.withLater(function(later) {
			return new coconut_diffing_internal_RCell(_gthis,content,applicator.children(parent),later);
		});
	}
	render(v) {
		let _gthis = this;
		coconut_diffing_internal_Parent.withLater(function(later) {
			return _gthis.rendered.update(v,null,later);
		});
	}
	static fromNative(parent,applicator) {
		let _g = coconut_diffing_Root.byParent.h[parent.__id__];
		let tmp;
		if(_g == null) {
			let v = new coconut_diffing_Root(parent,applicator);
			coconut_diffing_Root.byParent.set(parent,v);
			tmp = v;
		} else {
			tmp = _g;
		}
		return tmp;
	}
}
$hxClasses["coconut.diffing.Root"] = coconut_diffing_Root;
coconut_diffing_Root.__name__ = "coconut.diffing.Root";
coconut_diffing_Root.__super__ = coconut_diffing_internal_Parent;
Object.assign(coconut_diffing_Root.prototype, {
	__class__: coconut_diffing_Root
	,rendered: null
});
class coconut_diffing_TypeId {
}
class coconut_diffing_internal_Cast {
	static exactly(v,c) {
		return v;
	}
}
$hxClasses["coconut.diffing.internal.Cast"] = coconut_diffing_internal_Cast;
coconut_diffing_internal_Cast.__name__ = "coconut.diffing.internal.Cast";
class coconut_diffing_internal_RCell {
	constructor(parent,virtual,cursor,later) {
		this.empty = new coconut_diffing_internal_VEmpty();
		this.parent = parent;
		if(virtual == null) {
			virtual = this.empty;
		}
		this.virtual = virtual;
		this.rendered = virtual.render(parent,cursor,later);
		this.applicator = cursor.applicator;
	}
	update(virtual,cursor,later) {
		let cursor1 = cursor == null ? this.rendered.reiterate(this.applicator) : cursor;
		let unchanged = virtual == this.virtual;
		if(unchanged) {
			this.rendered.justInsert(cursor1,later);
		} else {
			if(virtual == null) {
				virtual = this.empty;
			}
			let last = this.virtual;
			this.virtual = virtual;
			if(last.type == virtual.type) {
				this.rendered.update(virtual,cursor1,later);
			} else {
				let old = this.rendered;
				this.rendered = virtual.render(this.parent,cursor1,later);
				cursor1.delete(old.destroy(this.applicator));
			}
		}
		return !unchanged;
	}
	destroy(applicator) {
		return this.rendered.destroy(applicator);
	}
}
$hxClasses["coconut.diffing.internal.RCell"] = coconut_diffing_internal_RCell;
coconut_diffing_internal_RCell.__name__ = "coconut.diffing.internal.RCell";
Object.assign(coconut_diffing_internal_RCell.prototype, {
	__class__: coconut_diffing_internal_RCell
	,empty: null
	,parent: null
	,applicator: null
	,virtual: null
	,rendered: null
});
class coconut_diffing_internal_RChildren {
	constructor(parent,children,cursor,later) {
		this.order = [];
		this.counts = new haxe_ds_IntMap();
		this.byType = new haxe_ds_IntMap();
		this.parent = parent;
		let _g = 0;
		while(_g < (children == null ? 0 : children.length)) {
			let c = children == null ? null : children[_g];
			++_g;
			if(c != null) {
				let r = c.render(parent,cursor,later);
				let _g = c.key;
				let _g1 = this.byType.h[r.type];
				if(_g == null) {
					if(_g1 == null) {
						this.byType.h[r.type] = [r];
					} else {
						_g1.push(r);
					}
				} else {
					this.setKey(_g,r);
				}
				this.order.push(r);
			}
		}
	}
	setKey(k,v) {
		let _g = this.byKey;
		(_g == null ? this.byKey = new Map() : _g).set(k,v);
		return v;
	}
	update(children,cursor,later) {
		let k = this.byType.keys();
		while(k.hasNext()) {
			let k1 = k.next();
			this.counts.h[k1] = 0;
		}
		let oldKeyed = this.byKey;
		this.byKey = null;
		let deleteCount = 0;
		let applicator = cursor.applicator;
		let index = 0;
		let _g = 0;
		while(_g < (children == null ? 0 : children.length)) {
			let v = children == null ? null : children[_g];
			++_g;
			if(v != null) {
				let tmp = this.order;
				let tmp1 = index++;
				let _g = v.key;
				let _g1 = this.byType.h[v.type];
				let tmp2;
				if(_g == null) {
					if(_g1 == null) {
						this.byType.h[v.type] = [];
						this.counts.h[v.type] = 0;
						let tmp = this.byType.h[v.type];
						let tmp1 = v.type;
						let tmp3 = this.counts.h[tmp1];
						this.counts.h[tmp1] = tmp3 + 1;
						tmp2 = tmp[tmp3] = v.render(this.parent,cursor,later);
					} else {
						let _g = _g1[this.counts.h[v.type]];
						if(_g == null) {
							let tmp = this.byType.h[v.type];
							let tmp1 = v.type;
							let tmp3 = this.counts.h[tmp1];
							this.counts.h[tmp1] = tmp3 + 1;
							tmp2 = tmp[tmp3] = v.render(this.parent,cursor,later);
						} else {
							this.counts.h[v.type] += 1;
							_g.update(v,cursor,later);
							tmp2 = _g;
						}
					}
				} else {
					let k = _g;
					let _g1;
					if(oldKeyed == null) {
						_g1 = null;
					} else {
						let _g = oldKeyed.get(k);
						let _g2;
						if(_g == null) {
							_g2 = null;
						} else {
							oldKeyed.delete(k);
							_g2 = _g;
						}
						_g1 = _g2;
					}
					if(_g1 == null) {
						tmp2 = this.setKey(k,v.render(this.parent,cursor,later));
					} else {
						let old = _g1;
						if(old.type == v.type) {
							old.update(v,cursor,later);
							tmp2 = this.setKey(k,old);
						} else {
							deleteCount += old.destroy(applicator);
							tmp2 = this.setKey(k,v.render(this.parent,cursor,later));
						}
					}
				}
				tmp[tmp1] = tmp2;
			}
		}
		this.order.length = index;
		let _g1 = new haxe_iterators_MapKeyValueIterator(this.counts);
		while(_g1.hasNext()) {
			let _g = _g1.next();
			let count = _g.value;
			let _g2 = this.byType.h[_g.key];
			if(_g2.length - count != 0) {
				let _g = count;
				let _g1 = _g2.length;
				while(_g < _g1) deleteCount += _g2[_g++].destroy(applicator);
				_g2.length = count;
			}
		}
		if(oldKeyed != null) {
			let _g = this.byKey;
			if(_g == null) {
				let f = function(r) {
					deleteCount += r.destroy(applicator);
				};
				oldKeyed.forEach(function(v,_,_1) {
					f(v);
				});
			} else {
				let m = _g;
				let f = function(k,r) {
					if(!m.has(k)) {
						deleteCount += r.destroy(applicator);
					}
				};
				oldKeyed.forEach(function(v,k,_) {
					f(k,v);
				});
			}
		}
		cursor.delete(deleteCount);
	}
	destroy(applicator) {
		let ret = 0;
		let _g = 0;
		let _g1 = this.order;
		while(_g < _g1.length) ret += _g1[_g++].destroy(applicator);
		return ret;
	}
}
$hxClasses["coconut.diffing.internal.RChildren"] = coconut_diffing_internal_RChildren;
coconut_diffing_internal_RChildren.__name__ = "coconut.diffing.internal.RChildren";
Object.assign(coconut_diffing_internal_RChildren.prototype, {
	__class__: coconut_diffing_internal_RChildren
	,byType: null
	,byKey: null
	,counts: null
	,order: null
	,parent: null
});
class coconut_diffing_internal_RNode {
}
$hxClasses["coconut.diffing.internal.RNode"] = coconut_diffing_internal_RNode;
coconut_diffing_internal_RNode.__name__ = "coconut.diffing.internal.RNode";
coconut_diffing_internal_RNode.__isInterface__ = true;
Object.assign(coconut_diffing_internal_RNode.prototype, {
	__class__: coconut_diffing_internal_RNode
	,type: null
	,reiterate: null
	,update: null
	,justInsert: null
	,destroy: null
});
class coconut_diffing_internal_VNode {
}
$hxClasses["coconut.diffing.internal.VNode"] = coconut_diffing_internal_VNode;
coconut_diffing_internal_VNode.__name__ = "coconut.diffing.internal.VNode";
coconut_diffing_internal_VNode.__isInterface__ = true;
Object.assign(coconut_diffing_internal_VNode.prototype, {
	__class__: coconut_diffing_internal_VNode
	,type: null
	,key: null
	,render: null
});
class coconut_diffing_internal_VEmpty {
	constructor() {
		this.key = null;
		this.type = coconut_diffing_internal_VEmpty.TYPE;
	}
	render(_,cursor,_1) {
		return new coconut_diffing_internal_REmpty(cursor);
	}
}
$hxClasses["coconut.diffing.internal.VEmpty"] = coconut_diffing_internal_VEmpty;
coconut_diffing_internal_VEmpty.__name__ = "coconut.diffing.internal.VEmpty";
coconut_diffing_internal_VEmpty.__interfaces__ = [coconut_diffing_internal_VNode];
Object.assign(coconut_diffing_internal_VEmpty.prototype, {
	__class__: coconut_diffing_internal_VEmpty
	,type: null
	,key: null
});
class coconut_diffing_internal_REmpty {
	constructor(cursor) {
		this.type = coconut_diffing_internal_VEmpty.TYPE;
		cursor.insert(this.marker = cursor.applicator.createMarker());
	}
	reiterate(applicator) {
		return applicator.siblings(this.marker);
	}
	update(next,cursor,later) {
		cursor.insert(this.marker);
	}
	justInsert(cursor,_) {
		cursor.insert(this.marker);
	}
	destroy(applicator) {
		applicator.releaseMarker(this.marker);
		return 1;
	}
}
$hxClasses["coconut.diffing.internal.REmpty"] = coconut_diffing_internal_REmpty;
coconut_diffing_internal_REmpty.__name__ = "coconut.diffing.internal.REmpty";
coconut_diffing_internal_REmpty.__interfaces__ = [coconut_diffing_internal_RNode];
Object.assign(coconut_diffing_internal_REmpty.prototype, {
	__class__: coconut_diffing_internal_REmpty
	,type: null
	,marker: null
});
class coconut_diffing_internal_VNative {
	constructor(factory,data,key,ref,children) {
		this.factory = factory;
		this.type = factory.type;
		this.data = data;
		this.key = key;
		this.ref = ref;
		this.children = children;
	}
	render(parent,cursor,later) {
		return new coconut_diffing_internal_RNative(parent,this,cursor,later);
	}
}
$hxClasses["coconut.diffing.internal.VNative"] = coconut_diffing_internal_VNative;
coconut_diffing_internal_VNative.__name__ = "coconut.diffing.internal.VNative";
coconut_diffing_internal_VNative.__interfaces__ = [coconut_diffing_internal_VNode];
Object.assign(coconut_diffing_internal_VNative.prototype, {
	__class__: coconut_diffing_internal_VNative
	,type: null
	,data: null
	,key: null
	,factory: null
	,ref: null
	,children: null
});
class coconut_diffing_internal_RNative {
	constructor(parent,v,cursor,later) {
		this.last = v;
		this.type = v.type;
		this.native = v.factory.create(v.data);
		this.children = new coconut_diffing_internal_RChildren(parent,v.children,cursor.applicator.children(this.native),later);
		cursor.insert(this.native);
		let _g = v.ref;
		if(_g != null) {
			_g(this.native);
		}
	}
	justInsert(cursor,_) {
		cursor.insert(this.native);
	}
	update(next,cursor,later) {
		let next1 = coconut_diffing_internal_Cast.exactly(next,coconut_diffing_internal_VNative);
		if(next1 == this.last) {
			this.justInsert(cursor,later);
			return;
		}
		next1.factory.update(this.native,next1.data,this.last.data);
		this.last = next1;
		this.children.update(next1.children,cursor.applicator.children(this.native),later);
		cursor.insert(this.native);
		if(this.last.ref != next1.ref) {
			let _g = this.last.ref;
			if(_g != null) {
				_g(null);
			}
			let _g1 = next1.ref;
			if(_g1 != null) {
				_g1(this.native);
			}
		}
	}
	reiterate(applicator) {
		return applicator.siblings(this.native);
	}
	destroy(applicator) {
		applicator.children(this.native).delete(this.children.destroy(applicator));
		let _g = this.last.ref;
		if(_g != null) {
			_g(null);
		}
		return 1;
	}
}
$hxClasses["coconut.diffing.internal.RNative"] = coconut_diffing_internal_RNative;
coconut_diffing_internal_RNative.__name__ = "coconut.diffing.internal.RNative";
coconut_diffing_internal_RNative.__interfaces__ = [coconut_diffing_internal_RNode];
Object.assign(coconut_diffing_internal_RNative.prototype, {
	__class__: coconut_diffing_internal_RNative
	,type: null
	,native: null
	,children: null
	,last: null
});
class coconut_diffing_internal_VWidget {
	constructor(factory,data,key,ref) {
		this.factory = factory;
		this.type = factory.type;
		this.data = data;
		this.ref = ref;
		this.key = key;
	}
	render(parent,cursor,later) {
		return new coconut_diffing_internal_RWidget(parent,this,cursor,later);
	}
}
$hxClasses["coconut.diffing.internal.VWidget"] = coconut_diffing_internal_VWidget;
coconut_diffing_internal_VWidget.__name__ = "coconut.diffing.internal.VWidget";
coconut_diffing_internal_VWidget.__interfaces__ = [coconut_diffing_internal_VNode];
Object.assign(coconut_diffing_internal_VWidget.prototype, {
	__class__: coconut_diffing_internal_VWidget
	,type: null
	,data: null
	,factory: null
	,ref: null
	,key: null
});
class tink_state_internal_Invalidatable {
}
$hxClasses["tink.state.internal.Invalidatable"] = tink_state_internal_Invalidatable;
tink_state_internal_Invalidatable.__name__ = "tink.state.internal.Invalidatable";
tink_state_internal_Invalidatable.__isInterface__ = true;
Object.assign(tink_state_internal_Invalidatable.prototype, {
	__class__: tink_state_internal_Invalidatable
	,invalidate: null
});
class coconut_diffing_internal_WidgetLifeCycle extends coconut_diffing_internal_Parent {
	constructor(owner,context,parent,cursor,later) {
		super(context,parent);
		this.owner = owner;
		owner._coco_lifeCycle = this;
		this.applicator = cursor.applicator;
		this.rendered = new coconut_diffing_internal_RCell(this,this.poll(),cursor,later);
		this.link = owner._coco_vStructure.onInvalidate(this);
		later(owner._coco_viewMounted);
	}
	poll() {
		let before = tink_state_internal_AutoObservable.cur;
		tink_state_internal_AutoObservable.cur = null;
		let ret = tink_state_Observable.get_value(this.owner._coco_vStructure);
		tink_state_internal_AutoObservable.cur = before;
		return ret;
	}
	reiterate(applicator) {
		return this.rendered.rendered.reiterate(applicator);
	}
	justInsert(cursor,later) {
		this.rerender(later,cursor);
	}
	rerender(later,cursor) {
		if(this.rendered.update(this.poll(),cursor,later)) {
			later(this.owner._coco_viewUpdated);
		}
	}
	performUpdate(later) {
		if(this.owner._coco_lifeCycle != this) {
			return;
		}
		this.rerender(later);
		super.performUpdate(later);
	}
	invalidate() {
		this.invalidateParent();
	}
	destroy(applicator) {
		let _g = this.owner._coco_viewUnmounting;
		if(_g != null) {
			_g();
		}
		let this1 = this.link;
		if(this1 != null) {
			this1.cancel();
		}
		this.owner._coco_lifeCycle = null;
		return this.rendered.destroy(applicator);
	}
}
$hxClasses["coconut.diffing.internal.WidgetLifeCycle"] = coconut_diffing_internal_WidgetLifeCycle;
coconut_diffing_internal_WidgetLifeCycle.__name__ = "coconut.diffing.internal.WidgetLifeCycle";
coconut_diffing_internal_WidgetLifeCycle.__interfaces__ = [tink_state_internal_Invalidatable];
coconut_diffing_internal_WidgetLifeCycle.__super__ = coconut_diffing_internal_Parent;
Object.assign(coconut_diffing_internal_WidgetLifeCycle.prototype, {
	__class__: coconut_diffing_internal_WidgetLifeCycle
	,owner: null
	,rendered: null
	,applicator: null
	,link: null
});
class coconut_diffing_internal_RWidget extends coconut_diffing_internal_WidgetLifeCycle {
	constructor(parent,v,cursor,later) {
		let context = parent.context;
		let widget = v.factory.create(v.data,context);
		super(widget,context,parent,cursor,later);
		this.last = v;
		this.type = v.type;
		this.widget = widget;
		let _g = v.ref;
		if(_g != null) {
			_g(widget);
		}
	}
	update(next,cursor,later) {
		let next1 = coconut_diffing_internal_Cast.exactly(next,coconut_diffing_internal_VWidget);
		if(this.last == next1) {
			this.justInsert(cursor,later);
			return;
		}
		if(next1.ref != this.last.ref) {
			let _g = this.last.ref;
			if(_g != null) {
				_g(null);
			}
			let _g1 = next1.ref;
			if(_g1 != null) {
				_g1(this.widget);
			}
		}
		this.last = next1;
		next1.factory.update(this.widget,next1.data);
		this.rerender(later,cursor);
	}
	destroy(applicator) {
		let _g = this.last.ref;
		if(_g != null) {
			_g(null);
		}
		return super.destroy(applicator);
	}
}
$hxClasses["coconut.diffing.internal.RWidget"] = coconut_diffing_internal_RWidget;
coconut_diffing_internal_RWidget.__name__ = "coconut.diffing.internal.RWidget";
coconut_diffing_internal_RWidget.__interfaces__ = [coconut_diffing_internal_RNode];
coconut_diffing_internal_RWidget.__super__ = coconut_diffing_internal_WidgetLifeCycle;
Object.assign(coconut_diffing_internal_RWidget.prototype, {
	__class__: coconut_diffing_internal_RWidget
	,type: null
	,widget: null
	,last: null
});
class coconut_diffing_internal_WidgetFactory {
	constructor(create,update) {
		this.type = coconut_diffing_TypeId.idCounter++;
		this._create = create;
		this._update = update;
	}
	create(data,context) {
		return this._create(data,context);
	}
	update(target,next) {
		this._update(target,next);
	}
}
$hxClasses["coconut.diffing.internal.WidgetFactory"] = coconut_diffing_internal_WidgetFactory;
coconut_diffing_internal_WidgetFactory.__name__ = "coconut.diffing.internal.WidgetFactory";
Object.assign(coconut_diffing_internal_WidgetFactory.prototype, {
	__class__: coconut_diffing_internal_WidgetFactory
	,type: null
	,_create: null
	,_update: null
});
class coconut_haxeui__$Renderer_HaxeUiBackend {
	constructor() {
	}
	siblings(target) {
		return new coconut_haxeui__$Renderer_HaxeUiCursor(this,target.parentComponent,target.parentComponent.getComponentIndex(target));
	}
	children(target) {
		return new coconut_haxeui__$Renderer_HaxeUiCursor(this,target,0);
	}
	createMarker() {
		let _g = coconut_haxeui__$Renderer_HaxeUiBackend.POOL.pop();
		if(_g == null) {
			return new haxe_ui_core_Component();
		} else {
			return _g;
		}
	}
	releaseMarker(c) {
		coconut_haxeui__$Renderer_HaxeUiBackend.POOL.push(c);
	}
}
$hxClasses["coconut.haxeui._Renderer.HaxeUiBackend"] = coconut_haxeui__$Renderer_HaxeUiBackend;
coconut_haxeui__$Renderer_HaxeUiBackend.__name__ = "coconut.haxeui._Renderer.HaxeUiBackend";
coconut_haxeui__$Renderer_HaxeUiBackend.__interfaces__ = [coconut_diffing_Applicator];
Object.assign(coconut_haxeui__$Renderer_HaxeUiBackend.prototype, {
	__class__: coconut_haxeui__$Renderer_HaxeUiBackend
});
class coconut_haxeui_Renderer {
	static mountInto(target,virtual) {
		coconut_diffing_Root.fromNative(target,coconut_haxeui_Renderer.BACKEND).render(virtual);
	}
}
$hxClasses["coconut.haxeui.Renderer"] = coconut_haxeui_Renderer;
coconut_haxeui_Renderer.__name__ = "coconut.haxeui.Renderer";
class coconut_haxeui__$Renderer_HaxeUiCursor {
	constructor(applicator,container,pos) {
		this.applicator = applicator;
		this.container = container;
		this.pos = pos;
	}
	insert(real) {
		if(real.parentComponent != this.container) {
			this.container.addComponentAt(real,this.pos);
		} else if(this.container.getComponentAt(this.pos) != real) {
			this.container.setComponentIndex(real,this.pos);
		}
		this.pos++;
	}
	delete(count) {
		if(this.pos == 0 && count == this.container.get_numComponents()) {
			this.container.removeAllComponents();
		} else {
			while(count-- > 0) this.container.removeComponentAt(this.pos,true,count == 0);
		}
	}
}
$hxClasses["coconut.haxeui._Renderer.HaxeUiCursor"] = coconut_haxeui__$Renderer_HaxeUiCursor;
coconut_haxeui__$Renderer_HaxeUiCursor.__name__ = "coconut.haxeui._Renderer.HaxeUiCursor";
coconut_haxeui__$Renderer_HaxeUiCursor.__interfaces__ = [coconut_diffing_Cursor];
Object.assign(coconut_haxeui__$Renderer_HaxeUiCursor.prototype, {
	__class__: coconut_haxeui__$Renderer_HaxeUiCursor
	,pos: null
	,container: null
	,applicator: null
});
class haxe_ds_StringMap {
	constructor() {
		this.h = Object.create(null);
	}
	get(key) {
		return this.h[key];
	}
	set(key,value) {
		this.h[key] = value;
	}
	keys() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.h);
	}
}
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_StringMap.prototype, {
	__class__: haxe_ds_StringMap
	,h: null
});
class coconut_haxeui_HaxeUiNodeType {
	constructor(factory) {
		this.type = coconut_diffing_TypeId.idCounter++;
		this.factory = factory;
	}
	set(target,prop,val,old) {
		let _g = coconut_haxeui_HaxeUiNodeType.events.h[prop];
		if(_g == null) {
			Reflect.setProperty(target,prop,val);
		} else {
			if(old != null) {
				target.unregisterEvent(_g,old);
			}
			if(val != null) {
				target.registerEvent(_g,val);
			}
		}
	}
	create(a) {
		let ret = this.factory();
		this.update(ret,a,null);
		return ret;
	}
	update(r,nu,old) {
		coconut_diffing_Properties.set(r,nu,old,$bind(this,this.set));
	}
}
$hxClasses["coconut.haxeui.HaxeUiNodeType"] = coconut_haxeui_HaxeUiNodeType;
coconut_haxeui_HaxeUiNodeType.__name__ = "coconut.haxeui.HaxeUiNodeType";
coconut_haxeui_HaxeUiNodeType.__interfaces__ = [coconut_diffing_Factory];
Object.assign(coconut_haxeui_HaxeUiNodeType.prototype, {
	__class__: coconut_haxeui_HaxeUiNodeType
	,factory: null
	,type: null
});
class tink_state_internal_ObservableObject {
}
$hxClasses["tink.state.internal.ObservableObject"] = tink_state_internal_ObservableObject;
tink_state_internal_ObservableObject.__name__ = "tink.state.internal.ObservableObject";
tink_state_internal_ObservableObject.__isInterface__ = true;
Object.assign(tink_state_internal_ObservableObject.prototype, {
	__class__: tink_state_internal_ObservableObject
	,getValue: null
	,getRevision: null
	,getComparator: null
	,onInvalidate: null
});
class tink_state__$Observable_ConstObservable {
	constructor(value,toString) {
		this.revision = tink_state_internal_Revision._new();
		this.value = value;
	}
	getRevision() {
		return this.revision;
	}
	getValue() {
		return this.value;
	}
	getComparator() {
		return null;
	}
	onInvalidate(i) {
		return null;
	}
}
$hxClasses["tink.state._Observable.ConstObservable"] = tink_state__$Observable_ConstObservable;
tink_state__$Observable_ConstObservable.__name__ = "tink.state._Observable.ConstObservable";
tink_state__$Observable_ConstObservable.__interfaces__ = [tink_state_internal_ObservableObject];
Object.assign(tink_state__$Observable_ConstObservable.prototype, {
	__class__: tink_state__$Observable_ConstObservable
	,value: null
	,revision: null
});
class tink_core__$Lazy_Computable {
}
$hxClasses["tink.core._Lazy.Computable"] = tink_core__$Lazy_Computable;
tink_core__$Lazy_Computable.__name__ = "tink.core._Lazy.Computable";
tink_core__$Lazy_Computable.__isInterface__ = true;
class tink_core__$Lazy_LazyObject {
}
$hxClasses["tink.core._Lazy.LazyObject"] = tink_core__$Lazy_LazyObject;
tink_core__$Lazy_LazyObject.__name__ = "tink.core._Lazy.LazyObject";
tink_core__$Lazy_LazyObject.__isInterface__ = true;
tink_core__$Lazy_LazyObject.__interfaces__ = [tink_core__$Lazy_Computable];
class tink_core__$Lazy_LazyConst {
	constructor(value) {
		this.value = value;
	}
}
$hxClasses["tink.core._Lazy.LazyConst"] = tink_core__$Lazy_LazyConst;
tink_core__$Lazy_LazyConst.__name__ = "tink.core._Lazy.LazyConst";
tink_core__$Lazy_LazyConst.__interfaces__ = [tink_core__$Lazy_LazyObject];
Object.assign(tink_core__$Lazy_LazyConst.prototype, {
	__class__: tink_core__$Lazy_LazyConst
	,value: null
});
class coconut_ui_internal_ImplicitContext {
	constructor(parent) {
		this.parent = parent == null ? coconut_ui_internal_ImplicitContext.ORPHAN : parent;
	}
}
$hxClasses["coconut.ui.internal.ImplicitContext"] = coconut_ui_internal_ImplicitContext;
coconut_ui_internal_ImplicitContext.__name__ = "coconut.ui.internal.ImplicitContext";
Object.assign(coconut_ui_internal_ImplicitContext.prototype, {
	__class__: coconut_ui_internal_ImplicitContext
	,parent: null
});
class tink_state_internal_Invalidator {
	constructor(toString) {
		if(tink_state_internal_Invalidator._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(toString);
	}
	_hx_constructor(toString) {
		this.list = new tink_core_CallbackList();
		this.observers = new Map();
		this.revision = tink_state_internal_Revision._new();
	}
	getRevision() {
		return this.revision;
	}
	onInvalidate(i) {
		let _gthis = this;
		if(this.observers.get(i)) {
			return null;
		} else {
			this.observers.set(i,true);
			let _this = this.list;
			let this1;
			if(_this.disposeHandlers == null) {
				this1 = null;
			} else {
				let node = new tink_core__$Callback_ListCell(function(_) {
					i.invalidate();
				},_this);
				_this.cells.push(node);
				if(_this.used++ == 0) {
					let fn = _this.onfill;
					if(tink_core_Callback.depth < 500) {
						tink_core_Callback.depth++;
						fn();
						tink_core_Callback.depth--;
					} else {
						tink_core_Callback.defer(fn);
					}
				}
				this1 = node;
			}
			return new tink_core__$Callback_LinkPair(this1,new tink_core_SimpleLink(function() {
				return _gthis.observers.delete(i);
			}));
		}
	}
	fire() {
		this.revision = tink_state_internal_Revision._new();
		this.list.invoke(null);
	}
}
$hxClasses["tink.state.internal.Invalidator"] = tink_state_internal_Invalidator;
tink_state_internal_Invalidator.__name__ = "tink.state.internal.Invalidator";
Object.assign(tink_state_internal_Invalidator.prototype, {
	__class__: tink_state_internal_Invalidator
	,revision: null
	,observers: null
	,list: null
});
class coconut_ui_internal_Slot extends tink_state_internal_Invalidator {
	constructor(owner,comparator,defaultData,toString) {
		tink_state_internal_Invalidator._hx_skip_constructor = true;
		super();
		tink_state_internal_Invalidator._hx_skip_constructor = false;
		this._hx_constructor(owner,comparator,defaultData,toString);
	}
	_hx_constructor(owner,comparator,defaultData,toString) {
		let _gthis = this;
		super._hx_constructor(toString);
		this.comparator = comparator;
		this.data = this.defaultData = defaultData;
		this.list.ondrain = function() {
			let this1 = _gthis.link;
			if(this1 != null) {
				this1.cancel();
			}
		};
		this.list.onfill = $bind(this,this.heatup);
	}
	heatup() {
		if(this.data != null) {
			this.link = this.data.onInvalidate(this);
		}
	}
	invalidate() {
		this.fire();
	}
	getComparator() {
		return this.comparator;
	}
	getRevision() {
		let ret = this.revision;
		if(this.data != null) {
			let b = this.data.getRevision();
			if(!(ret > b)) {
				ret = b;
			}
		}
		if(this.defaultData != null) {
			let b = this.defaultData.getRevision();
			if(!(ret > b)) {
				ret = b;
			}
		}
		return ret;
	}
	getValue() {
		let _g = this.data;
		let _g1 = this.defaultData;
		let _hx_tmp;
		if(_g == null) {
			if(_g1 == null) {
				return null;
			} else {
				return _g1.getValue();
			}
		} else if(_g1 == null) {
			return _g.getValue();
		} else {
			_hx_tmp = _g.getValue();
			if(_hx_tmp == null) {
				return _g1.getValue();
			} else {
				return _hx_tmp;
			}
		}
	}
	setData(data) {
		if(data == null) {
			data = this.defaultData;
		}
		if(data == this.data) {
			return;
		}
		this.data = data;
		if(this.list.used > 0) {
			let this1 = this.link;
			if(this1 != null) {
				this1.cancel();
			}
			this.heatup();
		}
		this.fire();
	}
}
$hxClasses["coconut.ui.internal.Slot"] = coconut_ui_internal_Slot;
coconut_ui_internal_Slot.__name__ = "coconut.ui.internal.Slot";
coconut_ui_internal_Slot.__interfaces__ = [tink_state_internal_ObservableObject,tink_state_internal_Invalidatable];
coconut_ui_internal_Slot.__super__ = tink_state_internal_Invalidator;
Object.assign(coconut_ui_internal_Slot.prototype, {
	__class__: coconut_ui_internal_Slot
	,data: null
	,link: null
	,defaultData: null
	,comparator: null
});
class haxe_Exception extends Error {
	constructor(message,previous,native) {
		super(message);
		this.message = message;
		this.__previousException = previous;
		this.__nativeException = native != null ? native : this;
	}
	unwrap() {
		return this.__nativeException;
	}
	toString() {
		return this.get_message();
	}
	get_message() {
		return this.message;
	}
	get_native() {
		return this.__nativeException;
	}
	static caught(value) {
		if(((value) instanceof haxe_Exception)) {
			return value;
		} else if(((value) instanceof Error)) {
			return new haxe_Exception(value.message,null,value);
		} else {
			return new haxe_ValueException(value,null,value);
		}
	}
	static thrown(value) {
		if(((value) instanceof haxe_Exception)) {
			return value.get_native();
		} else if(((value) instanceof Error)) {
			return value;
		} else {
			let e = new haxe_ValueException(value);
			return e;
		}
	}
}
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.__super__ = Error;
Object.assign(haxe_Exception.prototype, {
	__class__: haxe_Exception
	,__skipStack: null
	,__nativeException: null
	,__previousException: null
	,__properties__: {get_native: "get_native",get_message: "get_message"}
});
class haxe_Log {
	static formatOutput(v,infos) {
		let str = Std.string(v);
		if(infos == null) {
			return str;
		}
		let pstr = infos.fileName + ":" + infos.lineNumber;
		if(infos.customParams != null) {
			let _g = 0;
			let _g1 = infos.customParams;
			while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
		}
		return pstr + ": " + str;
	}
	static trace(v,infos) {
		let str = haxe_Log.formatOutput(v,infos);
		if(typeof(console) != "undefined" && console.log != null) {
			console.log(str);
		}
	}
}
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
class haxe_Resource {
	static listNames() {
		let _g = [];
		let _g1 = 0;
		let _g2 = haxe_Resource.content;
		while(_g1 < _g2.length) _g.push(_g2[_g1++].name);
		return _g;
	}
	static getString(name) {
		let _g = 0;
		let _g1 = haxe_Resource.content;
		while(_g < _g1.length) {
			let x = _g1[_g];
			++_g;
			if(x.name == name) {
				if(x.str != null) {
					return x.str;
				}
				return haxe_crypto_Base64.decode(x.data).toString();
			}
		}
		return null;
	}
	static getBytes(name) {
		let _g = 0;
		let _g1 = haxe_Resource.content;
		while(_g < _g1.length) {
			let x = _g1[_g];
			++_g;
			if(x.name == name) {
				if(x.str != null) {
					return haxe_io_Bytes.ofString(x.str);
				}
				return haxe_crypto_Base64.decode(x.data);
			}
		}
		return null;
	}
}
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
class haxe_Timer {
	constructor(time_ms) {
		let me = this;
		this.id = setInterval(function() {
			me.run();
		},time_ms);
	}
	stop() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	run() {
	}
	static delay(f,time_ms) {
		let t = new haxe_Timer(time_ms);
		t.run = function() {
			t.stop();
			f();
		};
		return t;
	}
}
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
Object.assign(haxe_Timer.prototype, {
	__class__: haxe_Timer
	,id: null
});
class haxe_ValueException extends haxe_Exception {
	constructor(value,previous,native) {
		super(String(value),previous,native);
		this.value = value;
	}
	unwrap() {
		return this.value;
	}
}
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
Object.assign(haxe_ValueException.prototype, {
	__class__: haxe_ValueException
	,value: null
});
class haxe_io_Bytes {
	constructor(data) {
		this.length = data.byteLength;
		this.b = new Uint8Array(data);
		this.b.bufferValue = data;
		data.hxBytes = this;
		data.bytes = this.b;
	}
	getString(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		let s = "";
		let b = this.b;
		let i = pos;
		let max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			while(i < max) {
				let c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					let code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					let code = (c & 31) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else {
					let u = (c & 15) << 18 | (b[i++] & 127) << 12 | (b[i++] & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				let c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	toString() {
		return this.getString(0,this.length);
	}
	static ofString(s,encoding) {
		if(encoding == haxe_io_Encoding.RawNative) {
			let buf = new Uint8Array(s.length << 1);
			let _g = 0;
			let _g1 = s.length;
			while(_g < _g1) {
				let i = _g++;
				let c = s.charCodeAt(i);
				buf[i << 1] = c & 255;
				buf[i << 1 | 1] = c >> 8;
			}
			return new haxe_io_Bytes(buf.buffer);
		}
		let a = [];
		let i = 0;
		while(i < s.length) {
			let c = s.charCodeAt(i++);
			if(55296 <= c && c <= 56319) {
				c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
			}
			if(c <= 127) {
				a.push(c);
			} else if(c <= 2047) {
				a.push(192 | c >> 6);
				a.push(128 | c & 63);
			} else if(c <= 65535) {
				a.push(224 | c >> 12);
				a.push(128 | c >> 6 & 63);
				a.push(128 | c & 63);
			} else {
				a.push(240 | c >> 18);
				a.push(128 | c >> 12 & 63);
				a.push(128 | c >> 6 & 63);
				a.push(128 | c & 63);
			}
		}
		return new haxe_io_Bytes(new Uint8Array(a).buffer);
	}
	static ofData(b) {
		let hb = b.hxBytes;
		if(hb != null) {
			return hb;
		}
		return new haxe_io_Bytes(b);
	}
}
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
Object.assign(haxe_io_Bytes.prototype, {
	__class__: haxe_io_Bytes
	,length: null
	,b: null
});
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
class haxe_crypto_Base64 {
	static decode(str,complement) {
		if(complement == null) {
			complement = true;
		}
		if(complement) {
			while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
		}
		return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
	}
}
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
class haxe_crypto_BaseCode {
	constructor(base) {
		let len = base.length;
		let nbits = 1;
		while(len > 1 << nbits) ++nbits;
		if(nbits > 8 || len != 1 << nbits) {
			throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
		}
		this.base = base;
		this.nbits = nbits;
	}
	initTable() {
		let tbl = [];
		let _g = 0;
		while(_g < 256) tbl[_g++] = -1;
		let _g1 = 0;
		let _g2 = this.base.length;
		while(_g1 < _g2) {
			let i = _g1++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	decodeBytes(b) {
		let nbits = this.nbits;
		if(this.tbl == null) {
			this.initTable();
		}
		let tbl = this.tbl;
		let size = b.length * nbits >> 3;
		let out = new haxe_io_Bytes(new ArrayBuffer(size));
		let buf = 0;
		let curbits = 0;
		let pin = 0;
		let pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				let i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
}
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
Object.assign(haxe_crypto_BaseCode.prototype, {
	__class__: haxe_crypto_BaseCode
	,base: null
	,nbits: null
	,tbl: null
});
class haxe_ds_ArraySort {
	static sort(a,cmp) {
		haxe_ds_ArraySort.rec(a,cmp,0,a.length);
	}
	static rec(a,cmp,from,to) {
		let middle = from + to >> 1;
		if(to - from < 12) {
			if(to <= from) {
				return;
			}
			let _g = from + 1;
			while(_g < to) {
				let j = _g++;
				while(j > from) {
					if(cmp(a[j],a[j - 1]) < 0) {
						haxe_ds_ArraySort.swap(a,j - 1,j);
					} else {
						break;
					}
					--j;
				}
			}
			return;
		}
		haxe_ds_ArraySort.rec(a,cmp,from,middle);
		haxe_ds_ArraySort.rec(a,cmp,middle,to);
		haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
	}
	static doMerge(a,cmp,from,pivot,to,len1,len2) {
		while(true) {
			let first_cut;
			let second_cut;
			let len11;
			let len22;
			if(len1 == 0 || len2 == 0) {
				return;
			}
			if(len1 + len2 == 2) {
				if(cmp(a[pivot],a[from]) < 0) {
					haxe_ds_ArraySort.swap(a,pivot,from);
				}
				return;
			}
			if(len1 > len2) {
				len11 = len1 >> 1;
				first_cut = from + len11;
				second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
				len22 = second_cut - pivot;
			} else {
				len22 = len2 >> 1;
				second_cut = pivot + len22;
				first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
				len11 = first_cut - from;
			}
			haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
			let new_mid = first_cut + len22;
			haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
			from = new_mid;
			pivot = second_cut;
			len1 -= len11;
			len2 -= len22;
		}
	}
	static rotate(a,cmp,from,mid,to) {
		if(from == mid || mid == to) {
			return;
		}
		let n = haxe_ds_ArraySort.gcd(to - from,mid - from);
		while(n-- != 0) {
			let val = a[from + n];
			let shift = mid - from;
			let p1 = from + n;
			let p2 = from + n + shift;
			while(p2 != from + n) {
				a[p1] = a[p2];
				p1 = p2;
				if(to - p2 > shift) {
					p2 += shift;
				} else {
					p2 = from + (shift - (to - p2));
				}
			}
			a[p1] = val;
		}
	}
	static gcd(m,n) {
		while(n != 0) {
			let t = m % n;
			m = n;
			n = t;
		}
		return m;
	}
	static upper(a,cmp,from,to,val) {
		let len = to - from;
		let half;
		let mid;
		while(len > 0) {
			half = len >> 1;
			mid = from + half;
			if(cmp(a[val],a[mid]) < 0) {
				len = half;
			} else {
				from = mid + 1;
				len = len - half - 1;
			}
		}
		return from;
	}
	static lower(a,cmp,from,to,val) {
		let len = to - from;
		let half;
		let mid;
		while(len > 0) {
			half = len >> 1;
			mid = from + half;
			if(cmp(a[mid],a[val]) < 0) {
				from = mid + 1;
				len = len - half - 1;
			} else {
				len = half;
			}
		}
		return from;
	}
	static swap(a,i,j) {
		let tmp = a[i];
		a[i] = a[j];
		a[j] = tmp;
	}
}
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
class haxe_ds_BalancedTree {
	constructor() {
	}
	set(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	get(key) {
		let node = this.root;
		while(node != null) {
			let c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	keys() {
		let ret = [];
		this.keysLoop(this.root,ret);
		return new haxe_iterators_ArrayIterator(ret);
	}
	setLoop(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		let c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			return this.balance(this.setLoop(k,v,node.left),node.key,node.value,node.right);
		} else {
			let nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	keysLoop(node,acc) {
		if(node != null) {
			this.keysLoop(node.left,acc);
			acc.push(node.key);
			this.keysLoop(node.right,acc);
		}
	}
	balance(l,k,v,r) {
		let hl = l == null ? 0 : l._height;
		let hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			let _this = l.left;
			let _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			let _this = r.right;
			let _this1 = r.left;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	compare(k1,k2) {
		return Reflect.compare(k1,k2);
	}
}
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = "haxe.ds.BalancedTree";
haxe_ds_BalancedTree.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_BalancedTree.prototype, {
	__class__: haxe_ds_BalancedTree
	,root: null
});
class haxe_ds_TreeNode {
	constructor(l,k,v,r,h) {
		if(h == null) {
			h = -1;
		}
		this.left = l;
		this.key = k;
		this.value = v;
		this.right = r;
		if(h == -1) {
			let tmp;
			let _this = this.left;
			let _this1 = this.right;
			if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
				let _this = this.left;
				tmp = _this == null ? 0 : _this._height;
			} else {
				let _this = this.right;
				tmp = _this == null ? 0 : _this._height;
			}
			this._height = tmp + 1;
		} else {
			this._height = h;
		}
	}
}
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = "haxe.ds.TreeNode";
Object.assign(haxe_ds_TreeNode.prototype, {
	__class__: haxe_ds_TreeNode
	,left: null
	,right: null
	,key: null
	,value: null
	,_height: null
});
class haxe_ds_EnumValueMap extends haxe_ds_BalancedTree {
	constructor() {
		super();
	}
	compare(k1,k2) {
		let d = k1._hx_index - k2._hx_index;
		if(d != 0) {
			return d;
		}
		let p1 = Type.enumParameters(k1);
		let p2 = Type.enumParameters(k2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	compareArgs(a1,a2) {
		let ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		let _g = 0;
		let _g1 = a1.length;
		while(_g < _g1) {
			let i = _g++;
			let d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	compareArg(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if(((v1) instanceof Array) && ((v2) instanceof Array)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
}
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = "haxe.ds.EnumValueMap";
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
Object.assign(haxe_ds_EnumValueMap.prototype, {
	__class__: haxe_ds_EnumValueMap
});
class haxe_ds_GenericCell {
	constructor(elt,next) {
		this.elt = elt;
		this.next = next;
	}
}
$hxClasses["haxe.ds.GenericCell"] = haxe_ds_GenericCell;
haxe_ds_GenericCell.__name__ = "haxe.ds.GenericCell";
Object.assign(haxe_ds_GenericCell.prototype, {
	__class__: haxe_ds_GenericCell
	,elt: null
	,next: null
});
class haxe_ds_GenericStack {
	constructor() {
	}
}
$hxClasses["haxe.ds.GenericStack"] = haxe_ds_GenericStack;
haxe_ds_GenericStack.__name__ = "haxe.ds.GenericStack";
Object.assign(haxe_ds_GenericStack.prototype, {
	__class__: haxe_ds_GenericStack
	,head: null
});
class haxe_ds_IntMap {
	constructor() {
		this.h = { };
	}
	set(key,value) {
		this.h[key] = value;
	}
	get(key) {
		return this.h[key];
	}
	keys() {
		let a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) a.push(key | 0);
		return new haxe_iterators_ArrayIterator(a);
	}
}
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
Object.assign(haxe_ds_IntMap.prototype, {
	__class__: haxe_ds_IntMap
	,h: null
});
class haxe_ds__$StringMap_StringMapKeyIterator {
	constructor(h) {
		this.h = h;
		this.keys = Object.keys(h);
		this.length = this.keys.length;
		this.current = 0;
	}
	hasNext() {
		return this.current < this.length;
	}
	next() {
		return this.keys[this.current++];
	}
}
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
Object.assign(haxe_ds__$StringMap_StringMapKeyIterator.prototype, {
	__class__: haxe_ds__$StringMap_StringMapKeyIterator
	,h: null
	,keys: null
	,length: null
	,current: null
});
class haxe_exceptions_PosException extends haxe_Exception {
	constructor(message,previous,pos) {
		super(message,previous);
		if(pos == null) {
			this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
		} else {
			this.posInfos = pos;
		}
	}
	toString() {
		return "" + super.toString() + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
}
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
Object.assign(haxe_exceptions_PosException.prototype, {
	__class__: haxe_exceptions_PosException
	,posInfos: null
});
class haxe_exceptions_NotImplementedException extends haxe_exceptions_PosException {
	constructor(message,previous,pos) {
		if(message == null) {
			message = "Not implemented";
		}
		super(message,previous,pos);
	}
}
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
Object.assign(haxe_exceptions_NotImplementedException.prototype, {
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0;
		this.array = array;
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
Object.assign(haxe_iterators_ArrayIterator.prototype, {
	__class__: haxe_iterators_ArrayIterator
	,array: null
	,current: null
});
class haxe_iterators_MapKeyValueIterator {
	constructor(map) {
		this.map = map;
		this.keys = map.keys();
	}
	hasNext() {
		return this.keys.hasNext();
	}
	next() {
		let key = this.keys.next();
		return { value : this.map.get(key), key : key};
	}
}
$hxClasses["haxe.iterators.MapKeyValueIterator"] = haxe_iterators_MapKeyValueIterator;
haxe_iterators_MapKeyValueIterator.__name__ = "haxe.iterators.MapKeyValueIterator";
Object.assign(haxe_iterators_MapKeyValueIterator.prototype, {
	__class__: haxe_iterators_MapKeyValueIterator
	,map: null
	,keys: null
});
class haxe_ui_backend_BackendImpl {
}
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
class haxe_ui_Backend extends haxe_ui_backend_BackendImpl {
	static get_id() {
		return haxe_ui_backend_BackendImpl.id;
	}
}
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id: "get_id"};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
Object.assign(haxe_ui_Backend.prototype, {
	__class__: haxe_ui_Backend
});
class haxe_ui_backend_CallLaterImpl {
	constructor(fn) {
		window.requestAnimationFrame(function(timestamp) {
			fn();
		});
	}
}
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
Object.assign(haxe_ui_backend_CallLaterImpl.prototype, {
	__class__: haxe_ui_backend_CallLaterImpl
});
class haxe_ui_CallLater extends haxe_ui_backend_CallLaterImpl {
	constructor(fn) {
		super(fn);
	}
}
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
Object.assign(haxe_ui_CallLater.prototype, {
	__class__: haxe_ui_CallLater
});
class haxe_ui_backend_ComponentSurface {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
	}
}
$hxClasses["haxe.ui.backend.ComponentSurface"] = haxe_ui_backend_ComponentSurface;
haxe_ui_backend_ComponentSurface.__name__ = "haxe.ui.backend.ComponentSurface";
Object.assign(haxe_ui_backend_ComponentSurface.prototype, {
	__class__: haxe_ui_backend_ComponentSurface
});
class haxe_ui_core_ComponentCommon extends haxe_ui_backend_ComponentSurface {
	_hx_constructor() {
		super._hx_constructor();
	}
	getTextDisplay() {
		return null;
	}
	hasTextDisplay() {
		return false;
	}
	getTextInput() {
		return null;
	}
	hasTextInput() {
		return false;
	}
	getImageDisplay() {
		return null;
	}
	hasImageDisplay() {
		return false;
	}
}
$hxClasses["haxe.ui.core.ComponentCommon"] = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentCommon.__name__ = "haxe.ui.core.ComponentCommon";
haxe_ui_core_ComponentCommon.__super__ = haxe_ui_backend_ComponentSurface;
Object.assign(haxe_ui_core_ComponentCommon.prototype, {
	__class__: haxe_ui_core_ComponentCommon
});
class haxe_ui_core_IClonable {
}
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
class haxe_ui_core_ComponentContainer extends haxe_ui_core_ComponentCommon {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._id = null;
		this._layoutLocked = false;
		this._layout = null;
		this._ready = false;
		this.parentComponent = null;
		super._hx_constructor();
		this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
	}
	dispatch(event) {
	}
	get_isReady() {
		return this._ready;
	}
	registerBehaviours() {
		this.behaviours.register("disabled",haxe_ui_core_ComponentDisabledBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("tooltip",haxe_ui_core_ComponentToolTipBehaviour,null);
		this.behaviours.register("tooltipRenderer",haxe_ui_core_ComponentToolTipRendererBehaviour,null);
		this.behaviours.register("text",haxe_ui_core_ComponentTextBehaviour);
		this.behaviours.register("value",haxe_ui_core_ComponentValueBehaviour);
	}
	addComponent(child) {
		return null;
	}
	get_id() {
		return this._id;
	}
	set_id(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	get_disabled() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("disabled"));
	}
	set_disabled(value) {
		this.behaviours.set("disabled",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"disabled"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"disabled");
		return value;
	}
	get_tooltip() {
		return this.behaviours.getDynamic("tooltip");
	}
	set_tooltip(value) {
		this.behaviours.setDynamic("tooltip",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tooltip"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"tooltip");
		return value;
	}
	get_tooltipRenderer() {
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("tooltipRenderer"));
	}
	set_tooltipRenderer(value) {
		this.behaviours.set("tooltipRenderer",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tooltipRenderer"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"tooltipRenderer");
		return value;
	}
	get_text() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("text"));
	}
	set_text(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"text",value);
					return value;
				}
			}
		}
		this.behaviours.set("text",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"text"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	get_value() {
		return this.behaviours.getDynamic("value");
	}
	set_value(value) {
		this.behaviours.setDynamic("value",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"value"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		return value;
	}
	cloneComponent() {
		let c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_tooltip() != null) {
			c.set_tooltip(this.get_tooltip());
		}
		if(this.get_tooltipRenderer() != null) {
			c.set_tooltipRenderer(this.get_tooltipRenderer());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_value() != null) {
			c.set_value(this.get_value());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_ComponentContainer();
	}
}
$hxClasses["haxe.ui.core.ComponentContainer"] = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentContainer.__name__ = "haxe.ui.core.ComponentContainer";
haxe_ui_core_ComponentContainer.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_core_ComponentContainer.__super__ = haxe_ui_core_ComponentCommon;
Object.assign(haxe_ui_core_ComponentContainer.prototype, {
	__class__: haxe_ui_core_ComponentContainer
	,behaviours: null
	,parentComponent: null
	,_ready: null
	,isReady: null
	,_children: null
	,_layout: null
	,_layoutLocked: null
	,_style: null
	,_id: null
	,__properties__: {set_value: "set_value",get_value: "get_value",set_text: "set_text",get_text: "get_text",set_tooltipRenderer: "set_tooltipRenderer",get_tooltipRenderer: "get_tooltipRenderer",set_tooltip: "set_tooltip",get_tooltip: "get_tooltip",set_disabled: "set_disabled",get_disabled: "get_disabled",set_id: "set_id",get_id: "get_id",get_isReady: "get_isReady"}
});
class haxe_ui_core_ComponentEvents extends haxe_ui_core_ComponentContainer {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._interactivityDisabledCounter = 0;
		this._interactivityDisabled = false;
		this._internalEventsClass = null;
		this._internalEvents = null;
		super._hx_constructor();
	}
	registerInternalEvents(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	unregisterInternalEvents() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	registerEvent(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).hasClass(":mobile") && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	hasEvent(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	unregisterEvent(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	dispatch(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	dispatchRecursively(event) {
		this.dispatch(event);
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) _g1[_g++].dispatchRecursively(event);
	}
	_onMappedEvent(event) {
		this.dispatch(event);
	}
	isInteractiveEvent(type) {
		return haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	disableInteractivity(disable,recursive,updateStyle) {
		if(updateStyle == null) {
			updateStyle = false;
		}
		if(recursive == null) {
			recursive = true;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).swapClass(":disabled",":hover");
			}
			if(this.__events != null) {
				let eventType = this.__events.keys();
				while(eventType.hasNext()) {
					let eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					let listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						let listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							let listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util_Listener.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
			}
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).removeClass(":disabled");
			}
			if(this._disabledEvents != null) {
				let eventType = this._disabledEvents.keys();
				while(eventType.hasNext()) {
					let eventType1 = eventType.next();
					let listeners = this._disabledEvents.listeners(eventType1);
					if(listeners != null) {
						let listener = listeners.copy().iterator();
						while(listener.hasNext()) this.registerEvent(eventType1,haxe_ui_util_Listener.toFunc(listener.next()));
					}
				}
				this._disabledEvents = null;
			}
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].disableInteractivity(disable,recursive,updateStyle);
		}
	}
	unregisterEvents() {
		if(this.__events != null) {
			let copy = [];
			let eventType = this.__events.keys();
			while(eventType.hasNext()) copy.push(eventType.next());
			let _g = 0;
			while(_g < copy.length) {
				let eventType = copy[_g];
				++_g;
				let listeners = this.__events.listeners(eventType);
				if(listeners != null) {
					let listener = listeners.iterator();
					while(listener.hasNext()) {
						let listener1 = listener.next();
						if(listener1 != null) {
							if(this.__events.remove(eventType,haxe_ui_util_Listener.toFunc(listener1)) == true) {
								this.unmapEvent(eventType,$bind(this,this._onMappedEvent));
							}
						}
					}
				}
			}
		}
	}
	mapEvent(type,listener) {
	}
	unmapEvent(type,listener) {
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_ComponentEvents();
	}
}
$hxClasses["haxe.ui.core.ComponentEvents"] = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentEvents.__name__ = "haxe.ui.core.ComponentEvents";
haxe_ui_core_ComponentEvents.__super__ = haxe_ui_core_ComponentContainer;
Object.assign(haxe_ui_core_ComponentEvents.prototype, {
	__class__: haxe_ui_core_ComponentEvents
	,_internalEvents: null
	,_internalEventsClass: null
	,__events: null
	,_disabledEvents: null
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
});
class haxe_ui_core_ComponentValidation extends haxe_ui_core_ComponentEvents {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._depth = -1;
		this._invalidateCount = 0;
		this._isDisposed = false;
		this._isInitialized = false;
		this._isValidating = false;
		this._isAllInvalid = false;
		this._delayedInvalidationFlags = new haxe_ds_StringMap();
		this._invalidationFlags = new haxe_ds_StringMap();
		super._hx_constructor();
	}
	get_depth() {
		return this._depth;
	}
	set_depth(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	isComponentInvalid(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			let value_length = Object.keys(this._invalidationFlags.h).length;
			while(0 < value_length) return true;
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	invalidateComponent(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._ready == false) {
			return;
		}
		let isAlreadyInvalid = this.isComponentInvalid();
		let isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			let value_length = Object.keys(this._delayedInvalidationFlags.h).length;
			while(0 < value_length) {
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				this._delayedInvalidationFlags.h["all"] = true;
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			this._delayedInvalidationFlags.h[flag] = true;
		} else if(flag != "all" && !Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw haxe_Exception.thrown("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
	}
	validateComponent(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._ready == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		let isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal(nextFrame);
		this.validateInitialSize(isInitialized);
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		let flag_keys = Object.keys(this._delayedInvalidationFlags.h);
		let flag_length = flag_keys.length;
		let flag_current = 0;
		while(flag_current < flag_length) {
			let flag = flag_keys[flag_current++];
			if(flag == "all") {
				this._isAllInvalid = true;
			} else {
				this._invalidationFlags.h[flag] = true;
			}
		}
		this._delayedInvalidationFlags.h = Object.create(null);
		this._isValidating = false;
	}
	validateNow() {
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) _g1[_g++].validateNow();
		this.invalidateComponent();
		this.syncComponentValidation(false);
	}
	syncComponentValidation(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		let count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent(nextFrame);
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].syncComponentValidation(nextFrame);
			if(++count >= 10) {
				throw haxe_Exception.thrown("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
		}
	}
	validateComponentInternal(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		let dataInvalid = this.isComponentInvalid("data");
		let styleInvalid = this.isComponentInvalid("style");
		let textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		let textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		let imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		let positionInvalid = this.isComponentInvalid("position");
		let displayInvalid = this.isComponentInvalid("display");
		let layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			if(this.validateComponentLayout()) {
				displayInvalid = true;
			}
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component),nextFrame);
		}
	}
	initializeComponent() {
	}
	validateInitialSize(isInitialized) {
	}
	validateComponentData() {
		this.behaviours.validateData();
	}
	validateComponentLayout() {
		return false;
	}
	validateComponentStyle() {
	}
	validateComponentPosition() {
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_ComponentValidation();
	}
}
$hxClasses["haxe.ui.core.ComponentValidation"] = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentValidation.__name__ = "haxe.ui.core.ComponentValidation";
haxe_ui_core_ComponentValidation.__super__ = haxe_ui_core_ComponentEvents;
Object.assign(haxe_ui_core_ComponentValidation.prototype, {
	__class__: haxe_ui_core_ComponentValidation
	,_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,__properties__: Object.assign({}, haxe_ui_core_ComponentEvents.prototype.__properties__, {set_depth: "set_depth",get_depth: "get_depth"})
});
class haxe_ui_core_ComponentLayout extends haxe_ui_core_ComponentValidation {
	_hx_constructor() {
		super._hx_constructor();
	}
	get_style() {
		return this._style;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_ComponentLayout();
	}
}
$hxClasses["haxe.ui.core.ComponentLayout"] = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentLayout.__name__ = "haxe.ui.core.ComponentLayout";
haxe_ui_core_ComponentLayout.__super__ = haxe_ui_core_ComponentValidation;
Object.assign(haxe_ui_core_ComponentLayout.prototype, {
	__class__: haxe_ui_core_ComponentLayout
	,__properties__: Object.assign({}, haxe_ui_core_ComponentValidation.prototype.__properties__, {get_style: "get_style"})
});
class haxe_ui_core_ComponentBounds extends haxe_ui_core_ComponentLayout {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._componentClipRect = null;
		this._top = 0;
		this._left = 0;
		this._hasScreen = null;
		super._hx_constructor();
	}
	get_autoWidth() {
		if(this._percentWidth != null || this._width != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	get_autoHeight() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	resizeComponent(w,h) {
		let invalidate = false;
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	get_actualComponentWidth() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	get_actualComponentHeight() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	get_componentWidth() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	set_componentWidth(value) {
		this.resizeComponent(value,null);
		return value;
	}
	get_componentHeight() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	set_componentHeight(value) {
		this.resizeComponent(null,value);
		return value;
	}
	get_percentWidth() {
		return this._percentWidth;
	}
	set_percentWidth(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			let _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"percentWidth");
		return value;
	}
	get_percentHeight() {
		return this._percentHeight;
	}
	set_percentHeight(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			let _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"percentHeight");
		return value;
	}
	set_width(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"width");
		return value;
	}
	get_width() {
		return this.get_componentWidth();
	}
	set_height(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"height");
		return value;
	}
	get_height() {
		return this.get_componentHeight();
	}
	get_hasScreen() {
		let p = this;
		while(p != null) {
			if(p._hasScreen == false) {
				return false;
			}
			p = p.parentComponent;
		}
		return true;
	}
	hitTest(left,top) {
		if(this.get_hasScreen() == false) {
			return false;
		}
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		let b = false;
		let sx = this.get_screenLeft();
		let sy = this.get_screenTop();
		let cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		let cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(cx <= 0 || cy <= 0) {
			return false;
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	autoSize() {
		if(this._ready == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	moveComponent(left,top) {
		let invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position");
		}
	}
	get_left() {
		return this._left;
	}
	set_left(value) {
		this.moveComponent(value,null);
		return value;
	}
	get_top() {
		return this._top;
	}
	set_top(value) {
		this.moveComponent(null,value);
		return value;
	}
	get_screenLeft() {
		let c = this;
		let xpos = 0;
		while(c != null) {
			let l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	get_screenTop() {
		let c = this;
		let ypos = 0;
		while(c != null) {
			let t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	get_componentClipRect() {
		return this._componentClipRect;
	}
	set_componentClipRect(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_ComponentBounds();
	}
}
$hxClasses["haxe.ui.core.ComponentBounds"] = haxe_ui_core_ComponentBounds;
haxe_ui_core_ComponentBounds.__name__ = "haxe.ui.core.ComponentBounds";
haxe_ui_core_ComponentBounds.__super__ = haxe_ui_core_ComponentLayout;
Object.assign(haxe_ui_core_ComponentBounds.prototype, {
	__class__: haxe_ui_core_ComponentBounds
	,autoWidth: null
	,autoHeight: null
	,actualComponentWidth: null
	,actualComponentHeight: null
	,_componentWidth: null
	,_componentHeight: null
	,_percentWidth: null
	,_percentHeight: null
	,_width: null
	,_height: null
	,_actualWidth: null
	,_actualHeight: null
	,_hasScreen: null
	,hasScreen: null
	,_left: null
	,_top: null
	,screenLeft: null
	,screenTop: null
	,_componentClipRect: null
	,__properties__: Object.assign({}, haxe_ui_core_ComponentLayout.prototype.__properties__, {set_componentClipRect: "set_componentClipRect",get_componentClipRect: "get_componentClipRect",get_screenTop: "get_screenTop",get_screenLeft: "get_screenLeft",set_top: "set_top",get_top: "get_top",set_left: "set_left",get_left: "get_left",get_hasScreen: "get_hasScreen",set_height: "set_height",get_height: "get_height",set_width: "set_width",get_width: "get_width",set_percentHeight: "set_percentHeight",get_percentHeight: "get_percentHeight",set_percentWidth: "set_percentWidth",get_percentWidth: "get_percentWidth",set_componentHeight: "set_componentHeight",get_componentHeight: "get_componentHeight",set_componentWidth: "set_componentWidth",get_componentWidth: "get_componentWidth",get_actualComponentHeight: "get_actualComponentHeight",get_actualComponentWidth: "get_actualComponentWidth",get_autoHeight: "get_autoHeight",get_autoWidth: "get_autoWidth"})
});
class haxe_ui_backend_ComponentBase extends haxe_ui_core_ComponentBounds {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._nativeClassName = null;
		this._className = null;
		super._hx_constructor();
	}
	mapEvent(type,listener) {
	}
	unmapEvent(type,listener) {
	}
	createTextDisplay(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	getTextDisplay() {
		return this.createTextDisplay();
	}
	hasTextDisplay() {
		return this._textDisplay != null;
	}
	createTextInput(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	getTextInput() {
		return this.createTextInput();
	}
	hasTextInput() {
		return this._textInput != null;
	}
	createImageDisplay() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	getImageDisplay() {
		return this.createImageDisplay();
	}
	hasImageDisplay() {
		return this._imageDisplay != null;
	}
	removeImageDisplay() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	handlePreReposition() {
	}
	handlePostReposition() {
	}
	get_hasNativeEntry() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	getNativeConfigProperty(query,defaultValue) {
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	getNativeConfigPropertyBool(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	getNativeConfigProperties(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	get_className() {
		if(this._className != null) {
			return this._className;
		}
		let c = js_Boot.getClass(this);
		this._className = c.__name__;
		return this._className;
	}
	get_nativeClassName() {
		if(this._nativeClassName != null) {
			return this._nativeClassName;
		}
		let r = js_Boot.getClass(this);
		while(r != null) {
			let c = r.__name__;
			if(haxe_ui_Toolkit.nativeConfig.query("component[id=" + c + "].@class",null,this) != null) {
				this._nativeClassName = c;
				break;
			}
			r = r.__super__;
			if(r == haxe_ui_core_Component) {
				break;
			}
		}
		if(this._nativeClassName == null) {
			this._nativeClassName = this.get_className();
		}
		return this._nativeClassName;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_backend_ComponentBase();
	}
}
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__super__ = haxe_ui_core_ComponentBounds;
Object.assign(haxe_ui_backend_ComponentBase.prototype, {
	__class__: haxe_ui_backend_ComponentBase
	,_textDisplay: null
	,_textInput: null
	,_imageDisplay: null
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,_className: null
	,className: null
	,_nativeClassName: null
	,nativeClassName: null
	,__properties__: Object.assign({}, haxe_ui_core_ComponentBounds.prototype.__properties__, {get_nativeClassName: "get_nativeClassName",get_className: "get_className",get_hasNativeEntry: "get_hasNativeEntry"})
});
class haxe_ui_backend_ComponentImpl extends haxe_ui_backend_ComponentBase {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._canvas = null;
		super._hx_constructor();
		this._eventMap = new haxe_ds_StringMap();
		if(haxe_ui_backend_ComponentImpl._mutationObserver == null) {
			haxe_ui_backend_ComponentImpl._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentImpl.onMutationEvent);
			haxe_ui_backend_ComponentImpl._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
		}
		if(window.document.styleSheets.length == 0) {
			let style = window.document.createElement("style");
			style.appendChild(window.document.createTextNode(""));
			window.document.head.appendChild(style);
		}
		if(haxe_ui_backend_ComponentImpl._stylesAdded == false) {
			haxe_ui_backend_ComponentImpl._stylesAdded = true;
			let sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
			sheet.insertRule("#haxeui-container .haxeui-component, .haxeui-component:focus {\n                position: absolute;\n                box-sizing: border-box;\n                -webkit-touch-callout: none;\n                -webkit-user-select: none;\n                -khtml-user-select: none;\n                -moz-user-select: none;\n                -ms-user-select: none;\n                user-select: none;\n                -webkit-tap-highlight-color: transparent;\n                webkit-user-select;\n                outline: none !important;\n            }",sheet.cssRules.length);
		}
	}
	get_isNativeScroller() {
		if(((this) instanceof haxe_ui_containers_ScrollView) && (js_Boot.__cast(this , haxe_ui_core_Component)).get_native() == true) {
			return true;
		}
		return false;
	}
	recursiveReady() {
		haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
		let component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout");
		}
		component.ready();
		let _g = 0;
		let _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) _g1[_g++].recursiveReady();
	}
	handleCreate(native) {
		let newElement = null;
		if(native == true) {
			if(((this) instanceof haxe_ui_containers_ScrollView)) {
				this._nativeElement = new haxe_ui_backend_html5_native_NativeElement(this);
				if(this.element == null) {
					this.element = this._nativeElement.create();
				}
				this.element.classList.add("haxeui-component");
				this.element.style.overflow = "auto";
				haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
				return;
			} else {
				let nativeConfig = (js_Boot.__cast(this , haxe_ui_core_Component)).getNativeConfigProperties();
				if(nativeConfig != null && Object.prototype.hasOwnProperty.call(nativeConfig.h,"class")) {
					let name = nativeConfig.h["class"];
					this._nativeElement = Type.createInstance($hxClasses[name],[this]);
					this._nativeElement.config = nativeConfig;
					newElement = this._nativeElement.create();
					newElement.classList.add("haxeui-component");
				}
			}
			if(newElement != null) {
				if(this.element != null) {
					let p = this.element.parentElement;
					if(p != null) {
						haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
						p.replaceChild(newElement,this.element);
					}
				}
				this.element = newElement;
				this.remapEvents();
			}
		}
		if(newElement == null) {
			if(((this) instanceof haxe_ui_containers_ScrollView)) {
				this._nativeElement = null;
				if(this.element == null) {
					this.element = window.document.createElement("div");
				}
				this.element.scrollTop = 0;
				this.element.scrollLeft = 0;
				this.element.style.overflow = "hidden";
				this.element.classList.add("haxeui-component");
				haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
				return;
			}
			newElement = window.document.createElement("div");
			newElement.classList.add("haxeui-component");
			if(((this) instanceof haxe_ui_components_Image)) {
				newElement.style.boxSizing = "initial";
			}
			if(this.element != null) {
				let p = this.element.parentElement;
				if(p != null) {
					haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
					p.replaceChild(newElement,this.element);
				}
			}
			this.element = newElement;
			haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			this._nativeElement = null;
			this.remapEvents();
		}
	}
	remapEvents() {
		if(this._eventMap == null) {
			return;
		}
		let copy_h = Object.create(null);
		let k_keys = Object.keys(this._eventMap.h);
		let k_length = k_keys.length;
		let k_current = 0;
		while(k_current < k_length) {
			let k = k_keys[k_current++];
			let fn = this._eventMap.h[k];
			copy_h[k] = fn;
			this.unmapEvent(k,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		let k_keys1 = Object.keys(copy_h);
		let k_length1 = k_keys1.length;
		let k_current1 = 0;
		while(k_current1 < k_length1) {
			let k = k_keys1[k_current1++];
			this.mapEvent(k,copy_h[k]);
		}
	}
	handlePosition(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
		if(((this) instanceof haxe_ui_containers_TableView) && left != null && top != null && (js_Boot.__cast(this , haxe_ui_containers_TableView)).get_native() == true) {
			let h = (js_Boot.__cast(this , haxe_ui_core_Component)).findComponent(null,haxe_ui_containers_Header);
			let tmp = "" + h.get_screenLeft() + "px";
			h.element.style.left = "" + tmp;
			let tmp1 = "" + h.get_screenTop() + "px";
			h.element.style.top = "" + tmp1;
		}
	}
	handleSize(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		if(((this) instanceof haxe_ui_components_VerticalProgress)) {
			if(this.element.style.getPropertyValue("transform-origin") != null && this.element.style.getPropertyValue("transform-origin").length > 0) {
				let tw = width;
				let th = height;
				width = th;
				height = tw;
				this.element.style.marginLeft = "-" + th + "px";
			}
		}
		let css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		let parent = (js_Boot.__cast(this , haxe_ui_core_Component)).parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		} else if(parent != null) {
			css.marginTop = "";
			css.marginLeft = "";
		}
		let _g = 0;
		let _this = js_Boot.__cast(this , haxe_ui_core_Component);
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				child.element.style.marginLeft = "-" + style.borderLeftSize + "px";
			} else {
				child.element.style.marginLeft = "";
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				child.element.style.marginTop = "-" + style.borderTopSize + "px";
			} else {
				child.element.style.marginTop = "";
			}
		}
	}
	handleReady() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
	}
	handleFrameworkProperty(id,value) {
		if(id == "allowMouseInteraction") {
			if(value == true && this.element.style.getPropertyValue("pointer-events") != null) {
				this.element.style.removeProperty("pointer-events");
			} else if(this.element.style.getPropertyValue("pointer-events") != "none") {
				this.element.style.setProperty("pointer-events","none");
				this.setCursor(null);
			}
		}
	}
	handleClipRect(value) {
		let c = js_Boot.__cast(this , haxe_ui_core_Component);
		let parent = c.parentComponent;
		if(value != null && parent != null && (parent._nativeElement == null || ((c) instanceof haxe_ui_containers_Header))) {
			let tmp = "rect(" + ("" + value.top + "px") + "," + ("" + value.get_right() + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			if(((this) instanceof haxe_ui_containers_Header) && parent.get_native() == true) {
				if(this.element.style.position != "fixed") {
					this.element.style.position = "fixed";
				}
				let tmp = "" + (c.get_screenLeft() - value.left | 0) + "px";
				this.element.style.left = "" + tmp;
				let tmp1 = "" + (c.get_screenTop() - value.top | 0) + "px";
				this.element.style.top = "" + tmp1;
			} else {
				let tmp = "" + (c.get_left() - value.left | 0) + "px";
				this.element.style.left = "" + tmp;
				let tmp1 = "" + (c.get_top() - value.top | 0) + "px";
				this.element.style.top = "" + tmp1;
			}
		} else {
			this.element.style.removeProperty("clip");
		}
	}
	handleVisibility(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	createTextDisplay(text) {
		if(this._textDisplay == null) {
			super.createTextDisplay(text);
			this.element.appendChild(this._textDisplay.element);
		}
		return this._textDisplay;
	}
	createTextInput(text) {
		if(this._textInput == null) {
			super.createTextInput(text);
			this.element.appendChild(this._textInput.element);
		}
		return this._textInput;
	}
	createImageDisplay() {
		if(this._imageDisplay == null) {
			super.createImageDisplay();
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	handleSetComponentIndex(child,index) {
		if(index == (this._children == null ? [] : this._children).length - 1) {
			this.element.appendChild(child.element);
		} else if(index == (this._children == null ? [] : this._children).indexOf(child) - 1) {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((this._children == null ? [] : this._children)[index].element,child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((this._children == null ? [] : this._children)[index + 1].element,child.element);
		}
	}
	handleAddComponent(child) {
		this.element.appendChild(child.element);
		return child;
	}
	handleAddComponentAt(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	handleRemoveComponent(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	handleRemoveComponentAt(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		let child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	applyStyle(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(((style.filter[0]) instanceof haxe_ui_filters_DropShadow)) {
				let dropShadow = style.filter[0];
				if(dropShadow.inner == false) {
					this.element.style.boxShadow = "" + dropShadow.distance + "px " + (dropShadow.distance + 2) + "px " + (dropShadow.blurX - 1) + "px " + (dropShadow.blurY - 1) + "px " + haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
				} else {
					this.element.style.boxShadow = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px " + haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
				}
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Blur)) {
				let blur = style.filter[0];
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Grayscale)) {
				let grayscale = style.filter[0];
				this.element.style.setProperty("-webkit-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-moz-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-o-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("filter","grayscale(" + grayscale.amount + "%)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.backdropFilter != null) {
			if(((style.backdropFilter[0]) instanceof haxe_ui_filters_Blur)) {
				this.element.style.setProperty("backdrop-filter","blur(" + style.backdropFilter[0].amount + "px)");
			}
		} else {
			this.element.style.removeProperty("backdrop-filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontName != null) {
			this.element.style.fontFamily = style.fontName;
		}
		if(style.fontSize != null) {
			this.element.style.fontSize = "" + style.fontSize + "px";
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
	}
	setCursor(cursor) {
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		let _g = 0;
		let _this = js_Boot.__cast(this , haxe_ui_core_Component);
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	get(name) {
		if(this.__props == null) {
			return null;
		}
		return this.__props.h[name];
	}
	set(name,value) {
		if(this.__props == null) {
			this.__props = new haxe_ds_StringMap();
		}
		this.__props.h[name] = value;
	}
	has(name) {
		if(this.__props == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this.__props.h,name);
	}
	getCanvas(width,height) {
		if(this._canvas == null) {
			this._canvas = window.document.createElement("canvas");
			this._canvas.style.setProperty("-webkit-backface-visibility","hidden");
			this._canvas.style.setProperty("-moz-backface-visibility","hidden");
			this._canvas.style.setProperty("-ms-backface-visibility","hidden");
			this._canvas.style.position = "absolute";
			this._canvas.style.pointerEvents = "none";
			this._canvas.width = width;
			this._canvas.height = height;
			this.element.insertBefore(this._canvas,this.element.firstChild);
		}
		if(width != this._canvas.width) {
			this._canvas.width = width;
		}
		if(height != this._canvas.height) {
			this._canvas.height = height;
		}
		return this._canvas;
	}
	removeCanvas() {
		if(this._canvas != null && this.element.contains(this._canvas)) {
			this.element.removeChild(this._canvas);
			this._canvas = null;
		}
	}
	mapEvent(type,listener) {
		switch(type) {
		case "change":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				if(((this) instanceof haxe_ui_components_TextField) || ((this) instanceof haxe_ui_components_TextArea)) {
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"],$bind(this,this.__onTextFieldChangeEvent));
				} else if(((this) instanceof haxe_ui_core_InteractiveComponent)) {
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onChangeEvent));
				}
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
				}
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			}
			break;
		case "mousewheel":
			this._eventMap.h[type] = listener;
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener("contextmenu",$bind(this,this.__onContextMenu));
			}
			break;
		case "scrollchange":
			this._eventMap.h[type] = listener;
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	unmapEvent(type,listener) {
		switch(type) {
		case "change":
			let _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(((this) instanceof haxe_ui_components_TextField)) {
				this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"],$bind(this,this.__onTextFieldChangeEvent));
			} else {
				this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onChangeEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			let _this1 = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this1.h,type)) {
				delete(_this1.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			let _this2 = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this2.h,type)) {
				delete(_this2.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			break;
		case "mousewheel":
			let _this3 = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this3.h,type)) {
				delete(_this3.h[type]);
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			let _this4 = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this4.h,type)) {
				delete(_this4.h[type]);
			}
			this.element.removeEventListener("contextmenu",$bind(this,this.__onContextMenu));
			break;
		}
	}
	__onContextMenu(event) {
		event.preventDefault();
		let fn = this._eventMap.h["rightclick"];
		if(fn != null) {
			let uiEvent = new haxe_ui_events_MouseEvent("rightclick");
			uiEvent.screenX = event.pageX;
			uiEvent.screenY = event.pageY;
			fn(uiEvent);
		}
		return false;
	}
	__onChangeEvent(event) {
		let type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			let fn = this._eventMap.h[type];
			if(fn != null) {
				fn(new haxe_ui_events_UIEvent(type));
			}
		}
	}
	__onTextFieldChangeEvent(event) {
		let fn = this._eventMap.h["change"];
		if(fn != null) {
			fn(new haxe_ui_events_UIEvent("change"));
		}
	}
	__onMouseEvent(event) {
		let type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			try {
			} catch( _g ) {
			}
			let fn = this._eventMap.h[type];
			if(fn != null) {
				let mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				let touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( _g ) {
				}
				if(touchEvent == true) {
					let te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					let me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
	}
	getComponentOffset() {
		return new haxe_ui_geom_Point(0,0);
	}
	__onMouseWheelEvent(event) {
		let fn = this._eventMap.h["mousewheel"];
		if(fn == null) {
			return;
		}
		let delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if(((event) instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		let mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = (event.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
		mouseEvent.screenY = (event.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
		mouseEvent.ctrlKey = event.ctrlKey;
		mouseEvent.shiftKey = event.shiftKey;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	__onKeyboardEvent(event) {
		let type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			let fn = this._eventMap.h[type];
			if(fn != null) {
				let keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				if(((event) instanceof KeyboardEvent)) {
					let me = js_Boot.__cast(event , KeyboardEvent);
					keyboardEvent.keyCode = me.keyCode;
					keyboardEvent.altKey = me.altKey;
					keyboardEvent.ctrlKey = me.ctrlKey;
					keyboardEvent.shiftKey = me.shiftKey;
				}
				fn(keyboardEvent);
			}
		}
	}
	__onScrollEvent(event) {
		let fn = this._eventMap.h[haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type]];
		if(fn != null) {
			fn(new haxe_ui_events_ScrollEvent("scrollchange"));
		}
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_backend_ComponentImpl();
	}
	static onMutationEvent(records,o) {
		let _g = 0;
		while(_g < records.length) {
			let record = records[_g];
			++_g;
			let _g1 = 0;
			let _g2 = record.addedNodes.length;
			while(_g1 < _g2) {
				let node = record.addedNodes.item(_g1++);
				let c = haxe_ui_backend_ComponentImpl.elementToComponent.h[node.__id__];
				if(c != null) {
					c.recursiveReady();
				}
			}
		}
	}
}
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
Object.assign(haxe_ui_backend_ComponentImpl.prototype, {
	__class__: haxe_ui_backend_ComponentImpl
	,element: null
	,_eventMap: null
	,_nativeElement: null
	,__props: null
	,_canvas: null
});
class haxe_ui_validation_IValidating {
}
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
Object.assign(haxe_ui_validation_IValidating.prototype, {
	__class__: haxe_ui_validation_IValidating
	,get_depth: null
	,validateComponent: null
	,__properties__: {get_depth: "get_depth"}
});
class haxe_ui_core_IComponentBase {
}
$hxClasses["haxe.ui.core.IComponentBase"] = haxe_ui_core_IComponentBase;
haxe_ui_core_IComponentBase.__name__ = "haxe.ui.core.IComponentBase";
haxe_ui_core_IComponentBase.__isInterface__ = true;
class haxe_ui_core_Component extends haxe_ui_backend_ComponentImpl {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._initialSizeApplied = false;
		this.scriptAccess = true;
		this._includeInLayout = true;
		this._styleSheet = null;
		this._cachedStyleSheetRef = null;
		this._useCachedStyleSheetRef = false;
		this.classes = [];
		this.customStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		this._hidden = false;
		this.bindingRoot = false;
		this._dragInitiator = null;
		this.userData = null;
		this._animatable = true;
		this._native = null;
		this._defaultLayoutClass = null;
		super._hx_constructor();
		this.addClass(haxe_ui_Backend.get_id(),false);
		let c = js_Boot.getClass(this);
		while(c != null) {
			let className = c.__name__.split(".").pop();
			this.addClass(className.toLowerCase(),false);
			this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
			if(className.toLowerCase() == "component") {
				break;
			}
			c = c.__super__;
		}
		let s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(s.native != null && this.get_hasNativeEntry() == true) {
			this.set_native(s.native);
		} else {
			this.create();
		}
	}
	create() {
		if(this.get_native() == false || this.get_native() == null) {
			this.registerComposite();
		}
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			let builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	registerComposite() {
	}
	createDefaults() {
	}
	createChildren() {
	}
	destroyChildren() {
		this.unregisterInternalEvents();
	}
	createLayout() {
		let l = null;
		if(this.get_native() == true) {
			let sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && Object.prototype.hasOwnProperty.call(sizeProps.h,"class")) {
				let name = sizeProps.h["class"];
				let size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				let layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && Object.prototype.hasOwnProperty.call(layoutProps.h,"class")) {
					let name = layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	get_native() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	set_native(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.customStyle.native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	set_animatable(value) {
		if(this._animatable != value) {
			if(value == false && this._componentAnimation != null) {
				this._componentAnimation.stop();
				this._componentAnimation = null;
			}
			this._animatable = value;
		}
		this._animatable = value;
		return value;
	}
	get_componentAnimation() {
		return this._componentAnimation;
	}
	set_componentAnimation(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	get_screen() {
		return haxe_ui_Toolkit.get_screen();
	}
	set_draggable(value) {
		if(value == true) {
			haxe_ui_dragdrop_DragManager.get_instance().registerDraggable(this,{ mouseTarget : this._dragInitiator});
		} else {
			haxe_ui_dragdrop_DragManager.get_instance().unregisterDraggable(this);
		}
		return value;
	}
	set_dragInitiator(value) {
		this._dragInitiator = value;
		this.set_draggable(true);
		return value;
	}
	get_rootComponent() {
		let r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	get_numComponents() {
		if(this._compositeBuilder != null) {
			return this._compositeBuilder.get_numComponents();
		} else if(this._children == null) {
			return 0;
		} else {
			return this._children.length;
		}
	}
	addComponent(child) {
		if(this._compositeBuilder != null) {
			let v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				return v;
			}
		}
		if(this.get_native() == true) {
			if(this.getNativeConfigPropertyBool(".@allowChildren",true) == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentAdded"));
		return child;
	}
	addComponentAt(child,index) {
		if(this._compositeBuilder != null) {
			let v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				return v;
			}
		}
		if(this.get_native() == true) {
			if(this.getNativeConfigPropertyBool(".@allowChildren",true) == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentAdded"));
		return child;
	}
	onComponentAdded(child) {
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			let v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child._isDisposed = true;
				child.removeAllComponents(true);
				child.unregisterEvents();
				child.destroyComponent();
			}
		}
		this.handleRemoveComponent(child,dispose);
		this.assignPositionClasses(invalidate);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentRemoved"));
		return child;
	}
	removeComponentAt(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		let childCount = this._children.length;
		if(this._compositeBuilder != null) {
			let compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			let v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		this.handleRemoveComponentAt(index,dispose);
		let child = this._children[index];
		if(this._children != null) {
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			this.assignPositionClasses(invalidate);
			if(invalidate == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout");
				}
			}
			if(dispose == true) {
				child._isDisposed = true;
				child.unregisterEvents();
				child.destroyComponent();
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentRemoved"));
		return child;
	}
	onComponentRemoved(child) {
	}
	assignPositionClasses(invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		let _g = 0;
		let _g1 = (this._children == null ? [] : this._children).length;
		while(_g < _g1) {
			let i = _g++;
			let c = (this._children == null ? [] : this._children)[i];
			if(i == 0) {
				c.swapClass("first","last",invalidate);
			} else if((this._children == null ? [] : this._children).length > 1 && i == (this._children == null ? [] : this._children).length - 1) {
				c.swapClass("last","first",invalidate);
			} else {
				c.removeClasses(["first","last"],invalidate);
			}
		}
	}
	destroyComponent() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		haxe_ui_binding_BindingManager.get_instance().remove(this);
		this.onDestroy();
	}
	onDestroy() {
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) _g1[_g++].onDestroy();
		this.dispatch(new haxe_ui_events_UIEvent("destroy"));
	}
	walkComponents(callback) {
		if(callback(this) == false) {
			return;
		}
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) if(callback(_g1[_g++]) == false) {
			return;
		}
		let _g2 = 0;
		let _g3 = this._children == null ? [] : this._children;
		while(_g2 < _g3.length) {
			let cont = true;
			_g3[_g2++].walkComponents(function(c) {
				cont = callback(c);
				return cont;
			});
			if(cont == false) {
				break;
			}
		}
	}
	removeAllComponents(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
	}
	matchesSearch(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(!(searchType == "id" && this.get_id() == criteria)) {
				if(searchType == "css") {
					return this.hasClass(criteria) == true;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type) == true;
		}
		return false;
	}
	findComponent(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		let match = null;
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				let temp = _g1[_g++].findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	findComponents(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		let r = [];
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			let match = true;
			if(styleName != null && child.hasClass(styleName) == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				let childArray = child.findComponents(styleName,type,maxDepth);
				let _g = 0;
				while(_g < childArray.length) r.push(childArray[_g++]);
			}
		}
		return r;
	}
	findAncestor(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		let match = null;
		let p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	findComponentsUnderPoint(screenX,screenY,type) {
		let c = [];
		if(this.hitTest(screenX,screenY)) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY)) {
					let match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
				}
				c = c.concat(child.findComponentsUnderPoint(screenX,screenY));
			}
		}
		return c;
	}
	getComponentIndex(child) {
		if(this._compositeBuilder != null) {
			let index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		let index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	setComponentIndex(child,index) {
		if(this._compositeBuilder != null) {
			let v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return child;
	}
	getComponentAt(index) {
		if(this._compositeBuilder != null) {
			let v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	hide() {
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.hide() == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this.handleVisibility(false);
			this._hidden = true;
			if(this.parentComponent != null) {
				let _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	show() {
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.show() == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this.handleVisibility(true);
			this._hidden = false;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
			if(this.parentComponent != null) {
				let _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	fadeIn(onEnd,show) {
		if(show == null) {
			show = true;
		}
		let _gthis = this;
		if(onEnd != null || show == true) {
			let prevStart = this.onAnimationStart;
			let prevEnd = this.onAnimationEnd;
			if(show == true) {
				prevStart = this.onAnimationStart;
				this.set_onAnimationStart(function(e) {
					_gthis.show();
					_gthis.set_onAnimationStart(prevStart);
				});
			}
			this.set_onAnimationEnd(function(e) {
				if(onEnd != null) {
					onEnd();
				}
				_gthis.removeClass("fade-in");
				_gthis.set_onAnimationEnd(prevEnd);
			});
		}
		this.swapClass("fade-in","fade-out");
	}
	fadeOut(onEnd,hide) {
		if(hide == null) {
			hide = true;
		}
		let _gthis = this;
		if(onEnd != null || hide == true) {
			let prevEnd = this.onAnimationEnd;
			this.set_onAnimationEnd(function(e) {
				if(hide == true) {
					_gthis.hide();
				}
				if(onEnd != null) {
					onEnd();
				}
				_gthis.set_onAnimationEnd(prevEnd);
				_gthis.removeClass("fade-out");
			});
		}
		this.swapClass("fade-out","fade-in");
	}
	get_hidden() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	set_hidden(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		return value;
	}
	set_customStyle(v) {
		if(v != this.customStyle) {
			this.invalidateComponent("style");
		}
		return this.customStyle = v;
	}
	addClass(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style");
			}
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].addClass(name,invalidate,recursive);
		}
	}
	addClasses(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		let needsInvalidate = false;
		let _g = 0;
		while(_g < names.length) {
			let name = names[_g];
			++_g;
			if(this.classes.indexOf(name) == -1) {
				this.classes.push(name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style");
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].addClasses(names,invalidate,recursive);
		}
	}
	removeClass(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style");
			}
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].removeClass(name,invalidate,recursive);
		}
	}
	removeClasses(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		let needsInvalidate = false;
		let _g = 0;
		while(_g < names.length) {
			let name = names[_g];
			++_g;
			if(this.classes.indexOf(name) != -1) {
				HxOverrides.remove(this.classes,name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style");
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].removeClasses(names,invalidate,recursive);
		}
	}
	hasClass(name) {
		return this.classes.indexOf(name) != -1;
	}
	swapClass(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		let needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style");
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].swapClass(classToAdd,classToRemove,invalidate,recursive);
		}
	}
	get_styleNames() {
		return this.classes.join(" ");
	}
	set_styleNames(value) {
		if(value == null) {
			return value;
		}
		let _g = 0;
		let _g1 = value.split(" ");
		while(_g < _g1.length) this.addClass(_g1[_g++]);
		return value;
	}
	get_styleString() {
		return this._styleString;
	}
	set_styleString(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		let cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(cssString.endsWith(";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		let s = new haxe_ui_styles_Parser().parse(cssString);
		this.customStyle.mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style");
		return value;
	}
	get_styleSheet() {
		if(this._useCachedStyleSheetRef == true) {
			return this._cachedStyleSheetRef;
		}
		let s = null;
		let ref = this;
		while(ref != null) {
			if(ref._styleSheet != null) {
				s = ref._styleSheet;
				break;
			}
			ref = ref.parentComponent;
		}
		this._useCachedStyleSheetRef = true;
		this._cachedStyleSheetRef = s;
		return s;
	}
	get_includeInLayout() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	set_includeInLayout(value) {
		this._includeInLayout = value;
		return value;
	}
	get_layout() {
		return this._layout;
	}
	set_layout(value) {
		if(value == null) {
			return value;
		}
		let tmp;
		if(this._layout != null) {
			let c = js_Boot.getClass(value);
			let tmp1 = c.__name__;
			let c1 = js_Boot.getClass(this._layout);
			tmp = tmp1 == c1.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	lockLayout(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].lockLayout(recursive);
		}
	}
	unlockLayout(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) _g1[_g++].unlockLayout(recursive);
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
	}
	ready() {
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		let _gthis = this;
		if(this._ready == false) {
			this._ready = true;
			this.handleReady();
			this.initScript();
			if((this._children == null ? [] : this._children) != null) {
				let _g = 0;
				let _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) _g1[_g++].ready();
			}
			this.invalidateComponent();
			this.behaviours.ready();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data");
				_gthis.invalidateComponent("style");
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
			});
		}
	}
	onReady() {
	}
	onInitialize() {
	}
	onResized() {
	}
	onMoved() {
	}
	executeScriptCall(expr,variables) {
		try {
			let line = new hscript_Parser().parseString(expr);
			let interp = this.findScriptInterp();
			interp.variables.h["this"] = this;
			if(variables != null) {
				let k_keys = Object.keys(variables.h);
				let k_length = k_keys.length;
				let k_current = 0;
				while(k_current < k_length) {
					let k = k_keys[k_current++];
					interp.variables.h[k] = variables.h[k];
				}
			}
			interp.expr(line);
			let _this = interp.variables;
			if(Object.prototype.hasOwnProperty.call(_this.h,"this")) {
				delete(_this.h["this"]);
			}
			if(variables != null) {
				let k_keys = Object.keys(variables.h);
				let k_length = k_keys.length;
				let k_current = 0;
				while(k_current < k_length) {
					let k = k_keys[k_current++];
					let _this = interp.variables;
					if(Object.prototype.hasOwnProperty.call(_this.h,k)) {
						delete(_this.h[k]);
					}
				}
			}
		} catch( _g ) {
			haxe_Log.trace("Problem executing scriptlet: " + Std.string(haxe_Exception.caught(_g).unwrap()),{ fileName : "haxe/ui/core/Component.hx", lineNumber : 1334, className : "haxe.ui.core.Component", methodName : "executeScriptCall"});
		}
	}
	findScriptInterp(refreshNamedComponents) {
		if(refreshNamedComponents == null) {
			refreshNamedComponents = true;
		}
		let interp = null;
		let c = this;
		while(c != null) {
			if(c._interp != null) {
				interp = c._interp;
				break;
			}
			c = c.parentComponent;
		}
		if(interp == null) {
			c = this.get_rootComponent();
			c._interp = new haxe_ui_scripting_ScriptInterp();
			interp = c._interp;
		}
		if(refreshNamedComponents == true && c != null) {
			let comps = c.get_namedComponents();
			let _g = 0;
			while(_g < comps.length) {
				let comp = comps[_g];
				++_g;
				let safeId = haxe_ui_util_StringUtil.capitalizeHyphens(comp.get_id());
				interp.variables.h[safeId] = comp;
			}
		}
		return interp;
	}
	initScript() {
		if(this._script != null) {
			try {
				let program = new hscript_Parser().parseString(this._script);
				this._interp = new haxe_ui_scripting_ScriptInterp();
				let comps = this.get_namedComponents();
				let _g = 0;
				while(_g < comps.length) {
					let comp = comps[_g];
					++_g;
					if(comp.scriptAccess == true) {
						let safeId = haxe_ui_util_StringUtil.capitalizeHyphens(comp.get_id());
						this._interp.variables.h[safeId] = comp;
					}
				}
				this._interp.execute(program);
			} catch( _g ) {
				haxe_Log.trace("Problem initializing script: " + Std.string(haxe_Exception.caught(_g).unwrap()),{ fileName : "haxe/ui/core/Component.hx", lineNumber : 1387, className : "haxe.ui.core.Component", methodName : "initScript"});
			}
		}
	}
	addScriptEvent(event,script) {
		event = event.toLowerCase();
		let eventName = event.startsWith("on") ? event.substring(2,event.length) : event;
		if(this._scriptEvents == null) {
			this._scriptEvents = new haxe_ds_StringMap();
		}
		this._scriptEvents.h[event] = script;
		let _g = $bind(this,this._onScriptEvent);
		let eventId = event;
		this.registerEvent(eventName,function(event) {
			_g(eventId,event);
		});
	}
	_onScriptEvent(eventId,event) {
		if(this._scriptEvents != null) {
			let script = this._scriptEvents.h[eventId];
			if(script != null) {
				event.cancel();
				let variables = new haxe_ds_StringMap();
				variables.h["event"] = event;
				this.executeScriptCall(script,variables);
			}
		}
	}
	get_namedComponents() {
		let list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	initializeComponent() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	validateInitialSize(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	validateComponentLayout() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		let sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			this.enforceSizeConstraints();
			if(this.parentComponent != null) {
				let _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.validateComponentLayout()) {
				sizeChanged = true;
			}
		}
		return sizeChanged;
	}
	enforceSizeConstraints() {
		if(this.get_style() != null) {
			if(this.get_style().minWidth != null && this._componentWidth < this.get_style().minWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().minWidth;
			}
			if(this.get_style().maxWidth != null && this.get_style().maxPercentWidth == null && this._componentWidth > this.get_style().maxWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().maxWidth;
			} else if(this.get_style().maxWidth == null && this.get_style().maxPercentWidth != null) {
				let p = this;
				let max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentWidth == null) {
						max += p.get_width();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingLeft + p.get_style().paddingRight;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentWidth / 100;
				if(max > 0 && this._componentWidth > max) {
					this._componentWidth = this._actualWidth = this._width = max;
				}
			}
			if(this.get_style().minHeight != null && this._componentHeight < this.get_style().minHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().minHeight;
			}
			if(this.get_style().maxHeight != null && this.get_style().maxPercentHeight == null && this._componentHeight > this.get_style().maxHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().maxHeight;
			} else if(this.get_style().maxHeight == null && this.get_style().maxPercentHeight != null) {
				let p = this;
				let max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentHeight == null) {
						max += p.get_height();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingTop + p.get_style().paddingBottom;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentHeight / 100;
				if(max > 0 && this._componentHeight > max) {
					this._componentHeight = this._actualHeight = this._height = max;
				}
			}
		}
	}
	validateComponentStyle() {
		let s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(this.get_styleSheet() != null) {
			s.apply(this.get_styleSheet().buildStyleFor(this));
		}
		s.apply(this.customStyle);
		if(this._style == null || this._style.equalTo(s) == false) {
			let marginsChanged = false;
			if(this.parentComponent != null && this._style != null) {
				marginsChanged = this._style.marginLeft != s.marginLeft || this._style.marginRight != s.marginRight || this._style.marginTop != s.marginTop || this._style.marginBottom != s.marginBottom;
			}
			this._style = s;
			this.applyStyle(s);
			if(marginsChanged == true) {
				let _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		}
	}
	validateComponentPosition() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	updateComponentDisplay() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null || this.get_componentWidth() <= 0 || this.get_componentHeight() <= 0) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	validateComponentAutoSize() {
		let invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			let s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	applyStyle(style) {
		super.applyStyle(style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(style.animationName != null) {
			this.applyAnimationKeyFrame(haxe_ui_Toolkit.styleSheet.get_animations().h[style.animationName],style.animationOptions);
		} else if(this.get_componentAnimation() != null) {
			this.set_componentAnimation(null);
		}
		if(style.pointerEvents != null && style.pointerEvents != "none") {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == false) {
				this.customStyle.cursor = "pointer";
				this.registerEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == false) {
				this.registerEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == false) {
				this.registerEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == false) {
				this.registerEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",true);
		} else if(style.pointerEvents != null) {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == true) {
				this.customStyle.cursor = null;
				this.unregisterEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == true) {
				this.unregisterEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == true) {
				this.unregisterEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == true) {
				this.unregisterEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",false);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	onPointerEventsMouseOver(e) {
		this.addClass(":hover",true,true);
	}
	onPointerEventsMouseOut(e) {
		this.removeClass(":hover",true,true);
	}
	onPointerEventsMouseDown(e) {
		this.addClass(":down",true,true);
	}
	onPointerEventsMouseUp(e) {
		this.removeClass(":down",true,true);
	}
	applyAnimationKeyFrame(animationKeyFrames,options) {
		let _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_hidden(this.get_hidden());
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this._scriptEvents != null) {
			let k_keys = Object.keys(this._scriptEvents.h);
			let k_length = k_keys.length;
			let k_current = 0;
			while(k_current < k_length) {
				let k = k_keys[k_current++];
				c.addScriptEvent(k,this._scriptEvents.h[k]);
			}
		}
		if(this.customStyle != null) {
			if(c.customStyle == null) {
				c.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			}
			c.customStyle.apply(this.customStyle);
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	get_cssName() {
		let cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			let c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	get_paddingLeft() {
		if(this.customStyle.paddingLeft != null) {
			return this.customStyle.paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	get_paddingTop() {
		if(this.customStyle.paddingTop != null) {
			return this.customStyle.paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	get_marginLeft() {
		if(this.customStyle.marginLeft != null) {
			return this.customStyle.marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	get_marginTop() {
		if(this.customStyle.marginTop != null) {
			return this.customStyle.marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	set_opacity(value) {
		if(this.customStyle.opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		this.customStyle.opacity = value;
		this.invalidateComponent("style");
		return value;
	}
	set_horizontalAlign(value) {
		if(this.customStyle.horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		this.customStyle.horizontalAlign = value;
		this.invalidateComponent("style");
		if(this.parentComponent != null) {
			let _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	set_verticalAlign(value) {
		if(this.customStyle.verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		this.customStyle.verticalAlign = value;
		this.invalidateComponent("style");
		if(this.parentComponent != null) {
			let _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	self() {
		return new haxe_ui_core_Component();
	}
	set_onAnimationStart(value) {
		if(this.__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this.__onAnimationStart);
			this.__onAnimationStart = null;
		}
		if(value != null) {
			this.__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	set_onAnimationEnd(value) {
		if(this.__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this.__onAnimationEnd);
			this.__onAnimationEnd = null;
		}
		if(value != null) {
			this.__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	set_onClick(value) {
		if(this.__onClick != null) {
			this.unregisterEvent("click",this.__onClick);
			this.__onClick = null;
		}
		if(value != null) {
			this.__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	set_onChange(value) {
		if(this.__onChange != null) {
			this.unregisterEvent("change",this.__onChange);
			this.__onChange = null;
		}
		if(value != null) {
			this.__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	static addNamedComponentsFrom(parent,list) {
		if(parent == null) {
			return;
		}
		if(parent.get_id() != null) {
			list.push(parent);
		}
		let _g = 0;
		let _g1 = parent._children == null ? [] : parent._children;
		while(_g < _g1.length) haxe_ui_core_Component.addNamedComponentsFrom(_g1[_g++],list);
	}
}
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating,haxe_ui_core_IComponentBase];
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
Object.assign(haxe_ui_core_Component.prototype, {
	__class__: haxe_ui_core_Component
	,_defaultLayoutClass: null
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,_native: null
	,_animatable: null
	,_componentAnimation: null
	,userData: null
	,screen: null
	,_dragInitiator: null
	,bindingRoot: null
	,_hidden: null
	,customStyle: null
	,classes: null
	,_styleString: null
	,_useCachedStyleSheetRef: null
	,_cachedStyleSheetRef: null
	,_styleSheet: null
	,_includeInLayout: null
	,scriptAccess: null
	,_interp: null
	,_script: null
	,_scriptEvents: null
	,namedComponents: null
	,_initialSizeApplied: null
	,cssName: null
	,__onAnimationStart: null
	,onAnimationStart: null
	,__onAnimationEnd: null
	,onAnimationEnd: null
	,__onClick: null
	,onClick: null
	,__onChange: null
	,onChange: null
	,__properties__: Object.assign({}, haxe_ui_backend_ComponentImpl.prototype.__properties__, {set_onChange: "set_onChange",set_onClick: "set_onClick",set_onAnimationEnd: "set_onAnimationEnd",set_onAnimationStart: "set_onAnimationStart",set_verticalAlign: "set_verticalAlign",set_horizontalAlign: "set_horizontalAlign",set_opacity: "set_opacity",get_marginTop: "get_marginTop",get_marginLeft: "get_marginLeft",get_paddingTop: "get_paddingTop",get_paddingLeft: "get_paddingLeft",get_cssName: "get_cssName",get_namedComponents: "get_namedComponents",set_layout: "set_layout",get_layout: "get_layout",set_includeInLayout: "set_includeInLayout",get_includeInLayout: "get_includeInLayout",get_styleSheet: "get_styleSheet",set_styleString: "set_styleString",get_styleString: "get_styleString",set_styleNames: "set_styleNames",get_styleNames: "get_styleNames",set_customStyle: "set_customStyle",set_hidden: "set_hidden",get_hidden: "get_hidden",get_numComponents: "get_numComponents",get_rootComponent: "get_rootComponent",set_dragInitiator: "set_dragInitiator",set_draggable: "set_draggable",get_screen: "get_screen",set_componentAnimation: "set_componentAnimation",get_componentAnimation: "get_componentAnimation",set_animatable: "set_animatable",set_native: "set_native",get_native: "get_native"})
});
class js_Boot {
	static getClass(o) {
		if(o == null) {
			return null;
		} else if(((o) instanceof Array)) {
			return Array;
		} else {
			let cl = o.__class__;
			if(cl != null) {
				return cl;
			}
			let name = js_Boot.__nativeClassName(o);
			if(name != null) {
				return js_Boot.__resolveNativeClass(name);
			}
			return null;
		}
	}
	static __string_rec(o,s) {
		if(o == null) {
			return "null";
		}
		if(s.length >= 5) {
			return "<...>";
		}
		let t = typeof(o);
		if(t == "function" && (o.__name__ || o.__ename__)) {
			t = "object";
		}
		switch(t) {
		case "function":
			return "<function>";
		case "object":
			if(o.__enum__) {
				let e = $hxEnums[o.__enum__];
				let con = e.__constructs__[o._hx_index];
				let n = con._hx_name;
				if(con.__params__) {
					s = s + "\t";
					return n + "(" + ((function($this) {
						var $r;
						let _g = [];
						{
							let _g1 = 0;
							let _g2 = con.__params__;
							while(true) {
								if(!(_g1 < _g2.length)) {
									break;
								}
								let p = _g2[_g1];
								_g1 = _g1 + 1;
								_g.push(js_Boot.__string_rec(o[p],s));
							}
						}
						$r = _g;
						return $r;
					}(this))).join(",") + ")";
				} else {
					return n;
				}
			}
			if(((o) instanceof Array)) {
				let str = "[";
				s += "\t";
				let _g = 0;
				let _g1 = o.length;
				while(_g < _g1) {
					let i = _g++;
					str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
				}
				str += "]";
				return str;
			}
			let tostr;
			try {
				tostr = o.toString;
			} catch( _g ) {
				return "???";
			}
			if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
				let s2 = o.toString();
				if(s2 != "[object Object]") {
					return s2;
				}
			}
			let str = "{\n";
			s += "\t";
			let hasp = o.hasOwnProperty != null;
			let k = null;
			for( k in o ) {
			if(hasp && !o.hasOwnProperty(k)) {
				continue;
			}
			if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
				continue;
			}
			if(str.length != 2) {
				str += ", \n";
			}
			str += s + k + " : " + js_Boot.__string_rec(o[k],s);
			}
			s = s.substring(1);
			str += "\n" + s + "}";
			return str;
		case "string":
			return o;
		default:
			return String(o);
		}
	}
	static __interfLoop(cc,cl) {
		while(true) {
			if(cc == null) {
				return false;
			}
			if(cc == cl) {
				return true;
			}
			let intf = cc.__interfaces__;
			if(intf != null && (cc.__super__ == null || cc.__super__.__interfaces__ != intf)) {
				let _g = 0;
				let _g1 = intf.length;
				while(_g < _g1) {
					let i = intf[_g++];
					if(i == cl || js_Boot.__interfLoop(i,cl)) {
						return true;
					}
				}
			}
			cc = cc.__super__;
		}
	}
	static __instanceof(o,cl) {
		if(cl == null) {
			return false;
		}
		switch(cl) {
		case Array:
			return ((o) instanceof Array);
		case Bool:
			return typeof(o) == "boolean";
		case Dynamic:
			return o != null;
		case Float:
			return typeof(o) == "number";
		case Int:
			if(typeof(o) == "number") {
				return ((o | 0) === o);
			} else {
				return false;
			}
			break;
		case String:
			return typeof(o) == "string";
		default:
			if(o != null) {
				if(typeof(cl) == "function") {
					if(js_Boot.__downcastCheck(o,cl)) {
						return true;
					}
				} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
					if(((o) instanceof cl)) {
						return true;
					}
				}
			} else {
				return false;
			}
			if(cl == Class ? o.__name__ != null : false) {
				return true;
			}
			if(cl == Enum ? o.__ename__ != null : false) {
				return true;
			}
			return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
		}
	}
	static __downcastCheck(o,cl) {
		if(!((o) instanceof cl)) {
			if(cl.__isInterface__) {
				return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static __implements(o,iface) {
		return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
	}
	static __cast(o,t) {
		if(o == null || js_Boot.__instanceof(o,t)) {
			return o;
		} else {
			throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
		}
	}
	static __nativeClassName(o) {
		let name = js_Boot.__toStr.call(o).slice(8,-1);
		if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
			return null;
		}
		return name;
	}
	static __isNativeObj(o) {
		return js_Boot.__nativeClassName(o) != null;
	}
	static __resolveNativeClass(name) {
		return $global[name];
	}
}
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
class haxe_ui_util_StringUtil {
	static uncapitalizeFirstLetter(s) {
		s = HxOverrides.substr(s,0,1).toLowerCase() + HxOverrides.substr(s,1,s.length);
		return s;
	}
	static capitalizeFirstLetter(s) {
		s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
		return s;
	}
	static capitalizeHyphens(s) {
		return haxe_ui_util_StringUtil.capitalizeDelim(s,"-");
	}
	static capitalizeDelim(s,d) {
		let r = s;
		let n = s.indexOf(d);
		while(n != -1) {
			r = HxOverrides.substr(r,0,n) + haxe_ui_util_StringUtil.capitalizeFirstLetter(HxOverrides.substr(r,n + 1,r.length));
			n = r.indexOf(d,n + 1);
		}
		return r;
	}
	static toDashes(s,toLower) {
		if(toLower == null) {
			toLower = true;
		}
		let s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
			return "" + re.matched(1) + "-";
		});
		if(toLower == true) {
			s1 = s1.toLowerCase();
		}
		return s1;
	}
	static rpad(s,count,c) {
		if(c == null) {
			c = " ";
		}
		let _g = 0;
		while(_g < count) {
			++_g;
			s += c;
		}
		return s;
	}
	static padDecimal(v,precision) {
		let s = v == null ? "null" : "" + v;
		if(precision == null || precision <= 0) {
			return s;
		}
		let n = s.indexOf(".");
		if(n == -1) {
			n = s.length;
			s += ".";
		}
		return haxe_ui_util_StringUtil.rpad(s,precision - (s.length - n - 1),"0");
	}
}
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
class haxe_ui_util_Properties {
	constructor() {
		this._props = new haxe_ds_StringMap();
	}
	getProp(name,defaultValue) {
		let v = defaultValue;
		if(Object.prototype.hasOwnProperty.call(this._props.h,name)) {
			v = this._props.h[name];
		}
		return v;
	}
}
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = "haxe.ui.util.Properties";
Object.assign(haxe_ui_util_Properties.prototype, {
	__class__: haxe_ui_util_Properties
	,_props: null
});
class haxe_ui_util_GenericConfig {
	constructor() {
		this.values = new haxe_ds_StringMap();
		this.sections = new haxe_ds_StringMap();
	}
	addSection(name) {
		let config = new haxe_ui_util_GenericConfig();
		let array = this.sections.h[name];
		if(array == null) {
			array = [];
			this.sections.h[name] = array;
		}
		array.push(config);
		return config;
	}
	findBy(section,field,value) {
		let array = this.sections.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		let r = null;
		let _g = 0;
		while(_g < array.length) {
			let item = array[_g];
			++_g;
			let key_keys = Object.keys(item.values.h);
			let key_length = key_keys.length;
			let key_current = 0;
			while(key_current < key_length) {
				let key = key_keys[key_current++];
				if(key == field && item.values.h[key] == value) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	queryBool(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		let r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	query(q,defaultValue,conditionRef) {
		if(Object.prototype.hasOwnProperty.call(haxe_ui_util_GenericConfig.cache.h,q)) {
			if(defaultValue != null && haxe_ui_util_GenericConfig.cache.h[q] == null) {
				return defaultValue;
			}
			return haxe_ui_util_GenericConfig.cache.h[q];
		}
		let finalArray = new EReg("\\.(?![^\\[]*\\])","g").split(q);
		let ref = this;
		let value = null;
		let _g = 0;
		while(_g < finalArray.length) {
			let f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				let p = f.split("[");
				let p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p[0],p[1].split("=")[0],p3);
			} else if(f.indexOf("@") != -1) {
				value = ref.values.h[HxOverrides.substr(f,1,f.length)];
				break;
			}
			if(ref == null) {
				haxe_ui_util_GenericConfig.cache.h[q] = defaultValue;
				return defaultValue;
			}
		}
		if(conditionRef != null) {
			let condition = this.query(q.substring(0,q.indexOf("]") + 1) + ".@condition",null,null);
			if(condition != null) {
				let interp = new haxe_ui_scripting_ScriptInterp();
				let line = new hscript_Parser().parseString(condition);
				interp.variables.h["this"] = conditionRef;
				if(interp.expr(line) == false) {
					return defaultValue;
				}
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		if(value != null) {
			haxe_ui_util_GenericConfig.cache.h[q] = value;
		}
		return value;
	}
	queryValues(q,conditionRef) {
		let finalArray = new EReg("\\.(?![^\\[]*\\])","g").split(q);
		let ref = this;
		let _g = 0;
		while(_g < finalArray.length) {
			let f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				let p = f.split("[");
				let p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p[0],p[1].split("=")[0],p3);
			}
			if(ref == null) {
				return null;
			}
		}
		if(conditionRef != null) {
			let condition = this.query(q.substring(0,q.indexOf("]") + 1) + ".@condition",null,null);
			if(condition != null) {
				let interp = new haxe_ui_scripting_ScriptInterp();
				let line = new hscript_Parser().parseString(condition);
				interp.variables.h["this"] = conditionRef;
				if(interp.expr(line) == false) {
					return null;
				}
			}
		}
		return ref.values;
	}
}
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
Object.assign(haxe_ui_util_GenericConfig.prototype, {
	__class__: haxe_ui_util_GenericConfig
	,values: null
	,sections: null
});
class haxe_ui_styles_CompositeStyleSheet {
	constructor() {
		this._animations = null;
		this._styleSheets = [];
	}
	get_animations() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		let _g = 0;
		let _g1 = this._styleSheets;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			let key_keys = Object.keys(s.get_animations().h);
			let key_length = key_keys.length;
			let key_current = 0;
			while(key_current < key_length) {
				let key = key_keys[key_current++];
				let a = s.get_animations().h[key];
				this._animations.h[key] = a;
			}
		}
		return this._animations;
	}
	parse(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		let s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	findStyleSheet(styleSheetName) {
		let _g = 0;
		let _g1 = this._styleSheets;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	buildStyleFor(c) {
		let style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		let _g = 0;
		let _g1 = this._styleSheets;
		while(_g < _g1.length) style = _g1[_g++].buildStyleFor(c,style);
		return style;
	}
	clear(styleSheetName) {
		let s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
}
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
Object.assign(haxe_ui_styles_CompositeStyleSheet.prototype, {
	__class__: haxe_ui_styles_CompositeStyleSheet
	,_styleSheets: null
	,_animations: null
	,__properties__: {get_animations: "get_animations"}
});
class haxe_ui_Toolkit {
	static get_backendProperties() {
		haxe_ui_Toolkit.buildBackend();
		return haxe_ui_Toolkit._backendProperties;
	}
	static build() {
		if(haxe_ui_Toolkit._built == true) {
			return;
		}
		haxe_ui_scripting_ScriptInterp.addClassAlias("Component","haxe.ui.core.Component");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalRange","haxe.ui.components.VerticalRange");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalProgress","haxe.ui.components.HorizontalProgress");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Range","haxe.ui.components.Range");
		haxe_ui_scripting_ScriptInterp.addClassAlias("OptionBox","haxe.ui.components.OptionBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Switch","haxe.ui.components.Switch");
		haxe_ui_scripting_ScriptInterp.addClassAlias("NumberStepper","haxe.ui.components.NumberStepper");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalSlider","haxe.ui.components.VerticalSlider");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalSlider","haxe.ui.components.HorizontalSlider");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Image","haxe.ui.components.Image");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalScroll","haxe.ui.components.HorizontalScroll");
		haxe_ui_scripting_ScriptInterp.addClassAlias("CalendarEvent","haxe.ui.components.CalendarEvent");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Calendar","haxe.ui.components.Calendar");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HGrid","haxe.ui.components.HGrid");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Spacer","haxe.ui.components.Spacer");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalRule","haxe.ui.components.HorizontalRule");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Column","haxe.ui.components.Column");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Button","haxe.ui.components.Button");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Slider","haxe.ui.components.Slider");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalProgress","haxe.ui.components.VerticalProgress");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Rule","haxe.ui.components.Rule");
		haxe_ui_scripting_ScriptInterp.addClassAlias("DropDown","haxe.ui.components.DropDown");
		haxe_ui_scripting_ScriptInterp.addClassAlias("IDropDownHandler","haxe.ui.components.IDropDownHandler");
		haxe_ui_scripting_ScriptInterp.addClassAlias("DropDownHandler","haxe.ui.components.DropDownHandler");
		haxe_ui_scripting_ScriptInterp.addClassAlias("ListDropDownHandler","haxe.ui.components.ListDropDownHandler");
		haxe_ui_scripting_ScriptInterp.addClassAlias("CalendarDropDownHandler","haxe.ui.components.CalendarDropDownHandler");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalRule","haxe.ui.components.VerticalRule");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Label","haxe.ui.components.Label");
		haxe_ui_scripting_ScriptInterp.addClassAlias("CheckBox","haxe.ui.components.CheckBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VGrid","haxe.ui.components.VGrid");
		haxe_ui_scripting_ScriptInterp.addClassAlias("TextField","haxe.ui.components.TextField");
		haxe_ui_scripting_ScriptInterp.addClassAlias("TabBar","haxe.ui.components.TabBar");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Stepper","haxe.ui.components.Stepper");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Scroll","haxe.ui.components.Scroll");
		haxe_ui_scripting_ScriptInterp.addClassAlias("TextArea","haxe.ui.components.TextArea");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Progress","haxe.ui.components.Progress");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalScroll","haxe.ui.components.VerticalScroll");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Toggle","haxe.ui.components.Toggle");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalRange","haxe.ui.components.HorizontalRange");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Accordion","haxe.ui.containers.Accordion");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Header","haxe.ui.containers.Header");
		haxe_ui_scripting_ScriptInterp.addClassAlias("ScrollView","haxe.ui.containers.ScrollView");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Splitter","haxe.ui.containers.Splitter");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Group","haxe.ui.containers.Group");
		haxe_ui_scripting_ScriptInterp.addClassAlias("TabView","haxe.ui.containers.TabView");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VBox","haxe.ui.containers.VBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalButtonBar","haxe.ui.containers.VerticalButtonBar");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Grid","haxe.ui.containers.Grid");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Frame","haxe.ui.containers.Frame");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Box","haxe.ui.containers.Box");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalButtonBar","haxe.ui.containers.HorizontalButtonBar");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Stack","haxe.ui.containers.Stack");
		haxe_ui_scripting_ScriptInterp.addClassAlias("ContinuousHBox","haxe.ui.containers.ContinuousHBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HorizontalSplitter","haxe.ui.containers.HorizontalSplitter");
		haxe_ui_scripting_ScriptInterp.addClassAlias("HBox","haxe.ui.containers.HBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("ListView","haxe.ui.containers.ListView");
		haxe_ui_scripting_ScriptInterp.addClassAlias("VerticalSplitter","haxe.ui.containers.VerticalSplitter");
		haxe_ui_scripting_ScriptInterp.addClassAlias("ButtonBar","haxe.ui.containers.ButtonBar");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Absolute","haxe.ui.containers.Absolute");
		haxe_ui_scripting_ScriptInterp.addClassAlias("CalendarView","haxe.ui.containers.CalendarView");
		haxe_ui_scripting_ScriptInterp.addClassAlias("IVirtualContainer","haxe.ui.containers.IVirtualContainer");
		haxe_ui_scripting_ScriptInterp.addClassAlias("TableView","haxe.ui.containers.TableView");
		haxe_ui_scripting_ScriptInterp.addClassAlias("MenuSeparator","haxe.ui.containers.menus.MenuSeparator");
		haxe_ui_scripting_ScriptInterp.addClassAlias("MenuBar","haxe.ui.containers.menus.MenuBar");
		haxe_ui_scripting_ScriptInterp.addClassAlias("MenuOptionBox","haxe.ui.containers.menus.MenuOptionBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("MenuItem","haxe.ui.containers.menus.MenuItem");
		haxe_ui_scripting_ScriptInterp.addClassAlias("MenuEvent","haxe.ui.containers.menus.MenuEvent");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Menu","haxe.ui.containers.menus.Menu");
		haxe_ui_scripting_ScriptInterp.addClassAlias("MenuCheckBox","haxe.ui.containers.menus.MenuCheckBox");
		haxe_ui_scripting_ScriptInterp.addClassAlias("Std","Std");
		haxe_ui_scripting_ScriptInterp.addStaticClass("Std",Std);
		haxe_ui_scripting_ScriptInterp.addClassAlias("Math","Math");
		haxe_ui_scripting_ScriptInterp.addStaticClass("Math",Math);
		haxe_ui_scripting_ScriptInterp.addClassAlias("StringTools","StringTools");
		haxe_ui_scripting_ScriptInterp.addStaticClass("StringTools",StringTools);
		haxe_ui_scripting_ScriptInterp.addClassAlias("Screen","haxe.ui.core.Screen");
		haxe_ui_scripting_ScriptInterp.addStaticClass("Screen",haxe_ui_core_Screen);
		haxe_ui_scripting_ScriptInterp.addClassAlias("MessageBox","haxe.ui.containers.dialogs.MessageBox");
		haxe_ui_scripting_ScriptInterp.addStaticClass("MessageBox",haxe_ui_containers_dialogs_MessageBox);
		haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.98000000000000043);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.97000000000000064);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.96000000000000085);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.95000000000000107);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.94000000000000128);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.93000000000000149);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.92000000000000171);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.91000000000000192);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.90000000000000213);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.89000000000000234);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.88000000000000256);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.87000000000000277);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.86000000000000298);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8500000000000032);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.84000000000000341);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.83000000000000362);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.82000000000000384);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.81000000000000405);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.80000000000000426);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/frames.css",-2.79000000000000448);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/splitters.css",-2.78000000000000469);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tooltips.css",-2.7700000000000049);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/rules.css",-2.76000000000000512);
		haxe_ui_themes_ThemeManager.get_instance().getTheme("dark").parent = "default";
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/main.css",-2.);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/buttons.css",-1.99);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/dialogs.css",-1.98);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/textinputs.css",-1.97);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/scrollbars.css",-1.96);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/scrollview.css",-1.95);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/checkboxes.css",-1.94);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/optionboxes.css",-1.93);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/ranges.css",-1.92);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/progressbars.css",-1.91);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/sliders.css",-1.9);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/steppers.css",-1.89);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/tabs.css",-1.88);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/listview.css",-1.86999999999999988);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/dropdowns.css",-1.85999999999999988);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/tableview.css",-1.84999999999999987);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/switches.css",-1.83999999999999986);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/calendars.css",-1.82999999999999985);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/menus.css",-1.81999999999999984);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/accordion.css",-1.80999999999999983);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/propertygrids.css",-1.79999999999999982);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/frames.css",-1.78999999999999981);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/splitters.css",-1.7799999999999998);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/tooltips.css",-1.7699999999999998);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("dark","haxeui-core/styles/dark/rules.css",-1.75999999999999979);
		haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/dialog.properties");
		haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/dialog.properties");
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","styles/native/main.css",-1);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css",-2);
		haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css",-1);
		haxe_ui_core_ComponentClassMap.register("vsplitter","haxe.ui.containers.VerticalSplitter");
		haxe_ui_core_ComponentClassMap.register("vslider","haxe.ui.components.VerticalSlider");
		haxe_ui_core_ComponentClassMap.register("vscroll","haxe.ui.components.VerticalScroll");
		haxe_ui_core_ComponentClassMap.register("vrule","haxe.ui.components.VerticalRule");
		haxe_ui_core_ComponentClassMap.register("vrange","haxe.ui.components.VerticalRange");
		haxe_ui_core_ComponentClassMap.register("vprogress","haxe.ui.components.VerticalProgress");
		haxe_ui_core_ComponentClassMap.register("vgrid","haxe.ui.components.VGrid");
		haxe_ui_core_ComponentClassMap.register("verticalsplitter","haxe.ui.containers.VerticalSplitter");
		haxe_ui_core_ComponentClassMap.register("verticalslider","haxe.ui.components.VerticalSlider");
		haxe_ui_core_ComponentClassMap.register("verticalscroll","haxe.ui.components.VerticalScroll");
		haxe_ui_core_ComponentClassMap.register("verticalrule","haxe.ui.components.VerticalRule");
		haxe_ui_core_ComponentClassMap.register("verticalrange","haxe.ui.components.VerticalRange");
		haxe_ui_core_ComponentClassMap.register("verticalprogress","haxe.ui.components.VerticalProgress");
		haxe_ui_core_ComponentClassMap.register("verticalbuttonbar","haxe.ui.containers.VerticalButtonBar");
		haxe_ui_core_ComponentClassMap.register("vbuttonbar","haxe.ui.containers.VerticalButtonBar");
		haxe_ui_core_ComponentClassMap.register("vbox","haxe.ui.containers.VBox");
		haxe_ui_core_ComponentClassMap.register("toggle","haxe.ui.components.Toggle");
		haxe_ui_core_ComponentClassMap.register("textfield","haxe.ui.components.TextField");
		haxe_ui_core_ComponentClassMap.register("textarea","haxe.ui.components.TextArea");
		haxe_ui_core_ComponentClassMap.register("text","haxe.ui.components.Label");
		haxe_ui_core_ComponentClassMap.register("tabview","haxe.ui.containers.TabView");
		haxe_ui_core_ComponentClassMap.register("tableview","haxe.ui.containers.TableView");
		haxe_ui_core_ComponentClassMap.register("tabbar","haxe.ui.components.TabBar");
		haxe_ui_core_ComponentClassMap.register("switch","haxe.ui.components.Switch");
		haxe_ui_core_ComponentClassMap.register("stepper","haxe.ui.components.Stepper");
		haxe_ui_core_ComponentClassMap.register("stack","haxe.ui.containers.Stack");
		haxe_ui_core_ComponentClassMap.register("splitter","haxe.ui.containers.Splitter");
		haxe_ui_core_ComponentClassMap.register("spacer","haxe.ui.components.Spacer");
		haxe_ui_core_ComponentClassMap.register("slider","haxe.ui.components.Slider");
		haxe_ui_core_ComponentClassMap.register("scrollview","haxe.ui.containers.ScrollView");
		haxe_ui_core_ComponentClassMap.register("scroll","haxe.ui.components.Scroll");
		haxe_ui_core_ComponentClassMap.register("rule","haxe.ui.components.Rule");
		haxe_ui_core_ComponentClassMap.register("range","haxe.ui.components.Range");
		haxe_ui_core_ComponentClassMap.register("propertygroup","haxe.ui.containers.properties.PropertyGroup");
		haxe_ui_core_ComponentClassMap.register("propertygrid","haxe.ui.containers.properties.PropertyGrid");
		haxe_ui_core_ComponentClassMap.register("property","haxe.ui.containers.properties.Property");
		haxe_ui_core_ComponentClassMap.register("progress","haxe.ui.components.Progress");
		haxe_ui_core_ComponentClassMap.register("optionbox","haxe.ui.components.OptionBox");
		haxe_ui_core_ComponentClassMap.register("numberstepper","haxe.ui.components.NumberStepper");
		haxe_ui_core_ComponentClassMap.register("menuseparator","haxe.ui.containers.menus.MenuSeparator");
		haxe_ui_core_ComponentClassMap.register("menuoptionbox","haxe.ui.containers.menus.MenuOptionBox");
		haxe_ui_core_ComponentClassMap.register("menuitem","haxe.ui.containers.menus.MenuItem");
		haxe_ui_core_ComponentClassMap.register("menucheckbox","haxe.ui.containers.menus.MenuCheckBox");
		haxe_ui_core_ComponentClassMap.register("menubar","haxe.ui.containers.menus.MenuBar");
		haxe_ui_core_ComponentClassMap.register("menu","haxe.ui.containers.menus.Menu");
		haxe_ui_core_ComponentClassMap.register("listview","haxe.ui.containers.ListView");
		haxe_ui_core_ComponentClassMap.register("label","haxe.ui.components.Label");
		haxe_ui_core_ComponentClassMap.register("itemrenderer","haxe.ui.core.ItemRenderer");
		haxe_ui_core_ComponentClassMap.register("image","haxe.ui.components.Image");
		haxe_ui_core_ComponentClassMap.register("hsplitter","haxe.ui.containers.HorizontalSplitter");
		haxe_ui_core_ComponentClassMap.register("hslider","haxe.ui.components.HorizontalSlider");
		haxe_ui_core_ComponentClassMap.register("hscroll","haxe.ui.components.HorizontalScroll");
		haxe_ui_core_ComponentClassMap.register("hrule","haxe.ui.components.HorizontalRule");
		haxe_ui_core_ComponentClassMap.register("hrange","haxe.ui.components.HorizontalRange");
		haxe_ui_core_ComponentClassMap.register("hprogress","haxe.ui.components.HorizontalProgress");
		haxe_ui_core_ComponentClassMap.register("horizontalsplitter","haxe.ui.containers.HorizontalSplitter");
		haxe_ui_core_ComponentClassMap.register("horizontalslider","haxe.ui.components.HorizontalSlider");
		haxe_ui_core_ComponentClassMap.register("horizontalscroll","haxe.ui.components.HorizontalScroll");
		haxe_ui_core_ComponentClassMap.register("horizontalrule","haxe.ui.components.HorizontalRule");
		haxe_ui_core_ComponentClassMap.register("horizontalrange","haxe.ui.components.HorizontalRange");
		haxe_ui_core_ComponentClassMap.register("horizontalprogress","haxe.ui.components.HorizontalProgress");
		haxe_ui_core_ComponentClassMap.register("horizontalbuttonbar","haxe.ui.containers.HorizontalButtonBar");
		haxe_ui_core_ComponentClassMap.register("hgrid","haxe.ui.components.HGrid");
		haxe_ui_core_ComponentClassMap.register("header","haxe.ui.containers.Header");
		haxe_ui_core_ComponentClassMap.register("hbuttonbar","haxe.ui.containers.HorizontalButtonBar");
		haxe_ui_core_ComponentClassMap.register("hbox","haxe.ui.containers.HBox");
		haxe_ui_core_ComponentClassMap.register("group","haxe.ui.containers.Group");
		haxe_ui_core_ComponentClassMap.register("grid","haxe.ui.containers.Grid");
		haxe_ui_core_ComponentClassMap.register("frame","haxe.ui.containers.Frame");
		haxe_ui_core_ComponentClassMap.register("dropdown","haxe.ui.components.DropDown");
		haxe_ui_core_ComponentClassMap.register("dialog","haxe.ui.containers.dialogs.Dialog");
		haxe_ui_core_ComponentClassMap.register("continuoushbox","haxe.ui.containers.ContinuousHBox");
		haxe_ui_core_ComponentClassMap.register("component","haxe.ui.core.Component");
		haxe_ui_core_ComponentClassMap.register("column","haxe.ui.components.Column");
		haxe_ui_core_ComponentClassMap.register("checkbox","haxe.ui.components.CheckBox");
		haxe_ui_core_ComponentClassMap.register("calendarview","haxe.ui.containers.CalendarView");
		haxe_ui_core_ComponentClassMap.register("calendar","haxe.ui.components.Calendar");
		haxe_ui_core_ComponentClassMap.register("buttonbar","haxe.ui.containers.ButtonBar");
		haxe_ui_core_ComponentClassMap.register("button","haxe.ui.components.Button");
		haxe_ui_core_ComponentClassMap.register("box","haxe.ui.containers.Box");
		haxe_ui_core_ComponentClassMap.register("basicitemrenderer","haxe.ui.core.BasicItemRenderer");
		haxe_ui_core_ComponentClassMap.register("accordion","haxe.ui.containers.Accordion");
		haxe_ui_core_ComponentClassMap.register("absolute","haxe.ui.containers.Absolute");
		haxe_ui_core_LayoutClassMap.register("virtuallayout","haxe.ui.layouts.VirtualLayout");
		haxe_ui_core_LayoutClassMap.register("virtual","haxe.ui.layouts.VirtualLayout");
		haxe_ui_core_LayoutClassMap.register("verticalvirtuallayout","haxe.ui.layouts.VerticalVirtualLayout");
		haxe_ui_core_LayoutClassMap.register("verticalvirtual","haxe.ui.layouts.VerticalVirtualLayout");
		haxe_ui_core_LayoutClassMap.register("verticallayout","haxe.ui.layouts.VerticalLayout");
		haxe_ui_core_LayoutClassMap.register("verticalgridlayout","haxe.ui.layouts.VerticalGridLayout");
		haxe_ui_core_LayoutClassMap.register("verticalgrid","haxe.ui.layouts.VerticalGridLayout");
		haxe_ui_core_LayoutClassMap.register("vertical","haxe.ui.layouts.VerticalLayout");
		haxe_ui_core_LayoutClassMap.register("scrollviewlayout","haxe.ui.layouts.ScrollViewLayout");
		haxe_ui_core_LayoutClassMap.register("scrollview","haxe.ui.layouts.ScrollViewLayout");
		haxe_ui_core_LayoutClassMap.register("layout","haxe.ui.layouts.Layout");
		haxe_ui_core_LayoutClassMap.register("horizontallayout","haxe.ui.layouts.HorizontalLayout");
		haxe_ui_core_LayoutClassMap.register("horizontalgridlayout","haxe.ui.layouts.HorizontalGridLayout");
		haxe_ui_core_LayoutClassMap.register("horizontalgrid","haxe.ui.layouts.HorizontalGridLayout");
		haxe_ui_core_LayoutClassMap.register("horizontalcontinuouslayout","haxe.ui.layouts.HorizontalContinuousLayout");
		haxe_ui_core_LayoutClassMap.register("horizontalcontinuous","haxe.ui.layouts.HorizontalContinuousLayout");
		haxe_ui_core_LayoutClassMap.register("horizontal","haxe.ui.layouts.HorizontalLayout");
		haxe_ui_core_LayoutClassMap.register("delegatelayout","haxe.ui.layouts.DelegateLayout");
		haxe_ui_core_LayoutClassMap.register("delegate","haxe.ui.layouts.DelegateLayout");
		haxe_ui_core_LayoutClassMap.register("defaultlayout","haxe.ui.layouts.DefaultLayout");
		haxe_ui_core_LayoutClassMap.register("default","haxe.ui.layouts.DefaultLayout");
		haxe_ui_core_LayoutClassMap.register("absolutelayout","haxe.ui.layouts.AbsoluteLayout");
		haxe_ui_core_LayoutClassMap.register("absolute","haxe.ui.layouts.AbsoluteLayout");
		haxe_ui_core_LayoutClassMap.register("","haxe.ui.layouts.Layout");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.InteractiveComponent","allowInteraction","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentContainer","value","Dynamic");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentContainer","tooltipRenderer","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentContainer","tooltip","Dynamic");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentContainer","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentContainer","disabled","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentBounds","width","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentBounds","percentWidth","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentBounds","percentHeight","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.core.ComponentBounds","height","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.properties.PropertyGroup","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.properties.PropertyGrid","popupStyleNames","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.properties.Property","value","Dynamic");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.properties.Property","type","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.properties.Property","label","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.properties.Property","dataSource","DataSource<Dynamic>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuOptionBox","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuOptionBox","shortcutText","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuOptionBox","selected","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuOptionBox","componentGroup","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuItem","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuItem","shortcutText","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuItem","icon","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuItem","expandable","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuCheckBox","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuCheckBox","shortcutText","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuCheckBox","selected","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.MenuBar","menuStyleNames","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.menus.Menu","menuStyleNames","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","variableItemSize","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","selectionMode","SelectionMode");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","selectedItems","Array<Dynamic>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","selectedItem","Dynamic");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","selectedIndices","Array<Int>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","selectedIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","longPressSelectionTime","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","itemWidth","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","itemHeight","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","itemCount","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","header","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TableView","dataSource","DataSource<Dynamic>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TabView","tabPosition","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TabView","selectedPage","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TabView","pageIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TabView","pageCount","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.TabView","closable","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","vscrollPos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","vscrollPageSize","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","vscrollMax","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","virtual","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","scrollMode","ScrollMode");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","percentContentWidth","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","percentContentHeight","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","hscrollPos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","hscrollPageSize","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","hscrollMax","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","contents","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","contentWidth","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","contentLayoutName","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ScrollView","contentHeight","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","variableItemSize","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","selectionMode","SelectionMode");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","selectedItems","Array<Dynamic>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","selectedItem","Dynamic");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","selectedIndices","Array<Int>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","selectedIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","longPressSelectionTime","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","itemWidth","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","itemHeight","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","itemCount","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ListView","dataSource","DataSource<Dynamic>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.Group","componentGroup","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.Frame","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.Frame","icon","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.CalendarView","selectedDate","Date");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ButtonBar","toggle","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.ButtonBar","selectedIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.Box","icon","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.Accordion","selectedPage","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.containers.Accordion","pageIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextField","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextField","restrictChars","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextField","placeholder","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextField","password","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextField","maxChars","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextField","icon","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextArea","wrap","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextArea","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextArea","placeholder","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextArea","dataSource","DataSource<String>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TextArea","autoScrollToBottom","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TabBar","tabPosition","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TabBar","tabCount","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TabBar","selectedTab","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TabBar","selectedIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.TabBar","closable","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Switch","value","Variant");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Switch","textOn","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Switch","textOff","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Switch","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Switch","selected","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","step","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","repeater","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","repeatInterval","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","precision","Null<Int>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","pos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","min","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Stepper","max","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Slider","start","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Slider","precision","Null<Int>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Slider","pos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Slider","min","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Slider","max","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Slider","end","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Scroll","pos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Scroll","pageSize","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Scroll","min","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Scroll","max","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Scroll","increment","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","step","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","start","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","precision","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","min","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","max","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","end","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Range","allowInteraction","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Progress","pos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Progress","min","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Progress","indeterminate","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.OptionBox","selectedOption","Component");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.OptionBox","selected","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.OptionBox","componentGroup","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.NumberStepper","step","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.NumberStepper","precision","Null<Int>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.NumberStepper","pos","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.NumberStepper","min","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.NumberStepper","max","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Label","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Label","htmlText","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Image","scaleMode","ScaleMode");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Image","resource","Variant");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Image","originalWidth","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Image","originalHeight","Float");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Image","imageVerticalAlign","VerticalAlign");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Image","imageHorizontalAlign","HorizontalAlign");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","virtual","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","type","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","selectedItem","Dynamic");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","selectedIndex","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","handlerStyleNames","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","dropdownWidth","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","dropdownSize","Null<Int>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","dropdownHeight","Null<Float>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.DropDown","dataSource","DataSource<Dynamic>");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.CheckBox","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.CheckBox","selected","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Calendar","selectedDate","Date");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Calendar","date","Date");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","toggle","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","text","String");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","selected","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","repeater","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","repeatInterval","Int");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","remainPressed","Bool");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","icon","Variant");
		haxe_ui_core_TypeMap.addTypeInfo("haxe.ui.components.Button","easeInRepeater","Bool");
		let section1 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section1.values.h["style"] = "padding:0px; padding-bottom: 1px";
		section1.values.h["nodeType"] = "button";
		section1.values.h["id"] = "haxe.ui.components.Button";
		section1.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section1.addSection("layout").values.h["class"] = "haxe.ui.backend.html5.native.layouts.ButtonLayout";
		let section2 = section1.addSection("behaviour");
		section2.values.h["id"] = "text";
		section2.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
		let section21 = section1.addSection("behaviour");
		section21.values.h["id"] = "icon";
		section21.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementImage";
		let section22 = section1.addSection("behaviour");
		section22.values.h["id"] = "disabled";
		section22.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section11 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section11.values.h["type"] = "checkbox";
		section11.values.h["id"] = "haxe.ui.components.CheckBox";
		section11.values.h["class"] = "haxe.ui.backend.html5.native.LabeledInputElement";
		let section23 = section11.addSection("size");
		section23.values.h["incrementWidthBy"] = "16";
		section23.values.h["incrementHeightBy"] = "2";
		section23.values.h["class"] = "haxe.ui.backend.html5.native.size.TextSize";
		let section24 = section11.addSection("behaviour");
		section24.values.h["index"] = "last";
		section24.values.h["id"] = "text";
		section24.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
		let section25 = section11.addSection("behaviour");
		section25.values.h["removeIfNegative"] = "true";
		section25.values.h["name"] = "checked";
		section25.values.h["id"] = "selected";
		section25.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		section25.values.h["child"] = "input";
		let section26 = section11.addSection("behaviour");
		section26.values.h["id"] = "disabled";
		section26.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section12 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section12.values.h["type"] = "radio";
		section12.values.h["id"] = "haxe.ui.components.OptionBox";
		section12.values.h["class"] = "haxe.ui.backend.html5.native.LabeledInputElement";
		let section27 = section12.addSection("size");
		section27.values.h["incrementWidthBy"] = "16";
		section27.values.h["incrementHeightBy"] = "2";
		section27.values.h["class"] = "haxe.ui.backend.html5.native.size.TextSize";
		let section28 = section12.addSection("behaviour");
		section28.values.h["index"] = "last";
		section28.values.h["id"] = "text";
		section28.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.SpanText";
		let section29 = section12.addSection("behaviour");
		section29.values.h["removeIfNegative"] = "true";
		section29.values.h["name"] = "checked";
		section29.values.h["id"] = "selected";
		section29.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		section29.values.h["child"] = "input";
		let section210 = section12.addSection("behaviour");
		section210.values.h["removeIfNegative"] = "true";
		section210.values.h["name"] = "name";
		section210.values.h["id"] = "componentGroup";
		section210.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.RadioGroup";
		section210.values.h["child"] = "input";
		let section211 = section12.addSection("behaviour");
		section211.values.h["id"] = "disabled";
		section211.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section13 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section13.values.h["style"] = "padding-left:2px;cursor:pointer;padding-top:3px;padding-bottom:3px;";
		section13.values.h["nodeType"] = "input";
		section13.values.h["id"] = "haxe.ui.components.TextField";
		section13.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section13.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section212 = section13.addSection("behaviour");
		section212.values.h["id"] = "text";
		section212.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
		let section213 = section13.addSection("behaviour");
		section213.values.h["id"] = "placeholder";
		section213.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementPlaceholder";
		let section214 = section13.addSection("behaviour");
		section214.values.h["id"] = "disabled";
		section214.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section14 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section14.values.h["type"] = "number";
		section14.values.h["style"] = "padding-left:2px;cursor:pointer;padding-top:10px;padding-bottom:11px;";
		section14.values.h["nodeType"] = "input";
		section14.values.h["id"] = "haxe.ui.components.NumberStepper";
		section14.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section14.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section215 = section14.addSection("behaviour");
		section215.values.h["id"] = "text";
		section215.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
		let section216 = section14.addSection("behaviour");
		section216.values.h["name"] = "step";
		section216.values.h["id"] = "step";
		section216.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section217 = section14.addSection("behaviour");
		section217.values.h["id"] = "pos";
		section217.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
		let section218 = section14.addSection("behaviour");
		section218.values.h["id"] = "disabled";
		section218.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section219 = section14.addSection("behaviour");
		section219.values.h["name"] = "min";
		section219.values.h["id"] = "min";
		section219.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section220 = section14.addSection("behaviour");
		section220.values.h["name"] = "max";
		section220.values.h["id"] = "max";
		section220.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section15 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section15.values.h["style"] = "resize:none;line-height:1.4;";
		section15.values.h["nodeType"] = "textarea";
		section15.values.h["id"] = "haxe.ui.components.TextArea";
		section15.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section15.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section221 = section15.addSection("behaviour");
		section221.values.h["id"] = "text";
		section221.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementValue";
		let section222 = section15.addSection("behaviour");
		section222.values.h["id"] = "disabled";
		section222.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section16 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section16.values.h["id"] = "haxe.ui.containers.ScrollView";
		section16.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section16.addSection("builder").values.h["class"] = "haxe.ui.backend.html5.native.builders.ScrollViewBuilder";
		let section223 = section16.addSection("behaviour");
		section223.values.h["id"] = "disabled";
		section223.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section224 = section16.addSection("behaviour");
		section224.values.h["id"] = "hscrollPos";
		section224.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementScrollLeft";
		let section225 = section16.addSection("behaviour");
		section225.values.h["id"] = "vscrollPos";
		section225.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementScrollTop";
		let section226 = section16.addSection("behaviour");
		section226.values.h["id"] = "contentLayoutName";
		section226.values.h["class"] = "haxe.ui.behaviours.DefaultBehaviour";
		let section17 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section17.values.h["id"] = "haxe.ui.containers.ListView";
		section17.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		let section227 = section17.addSection("behaviour");
		section227.values.h["id"] = "disabled";
		section227.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section18 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section18.values.h["id"] = "haxe.ui.containers.TableView";
		section18.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		let section228 = section18.addSection("behaviour");
		section228.values.h["id"] = "disabled";
		section228.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section19 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section19.values.h["style"] = "padding:3px;";
		section19.values.h["nodeType"] = "select";
		section19.values.h["id"] = "haxe.ui.components.DropDown";
		section19.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section19.values.h["allowChildren"] = "false";
		section19.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section229 = section19.addSection("behaviour");
		section229.values.h["id"] = "dataSource";
		section229.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectDataSource";
		let section230 = section19.addSection("behaviour");
		section230.values.h["id"] = "selectedItem";
		section230.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectedItem";
		let section231 = section19.addSection("behaviour");
		section231.values.h["id"] = "selectedIndex";
		section231.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.SelectedIndex";
		let section232 = section19.addSection("behaviour");
		section232.values.h["id"] = "disabled";
		section232.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section110 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section110.values.h["nodeType"] = "progress";
		section110.values.h["id"] = "haxe.ui.components.HorizontalProgress";
		section110.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section110.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section233 = section110.addSection("behaviour");
		section233.values.h["name"] = "max";
		section233.values.h["id"] = "max";
		section233.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section234 = section110.addSection("behaviour");
		section234.values.h["name"] = "value";
		section234.values.h["id"] = "end";
		section234.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section235 = section110.addSection("behaviour");
		section235.values.h["remove"] = "true";
		section235.values.h["name"] = "value";
		section235.values.h["id"] = "indeterminate";
		section235.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
		let section236 = section110.addSection("behaviour");
		section236.values.h["id"] = "disabled";
		section236.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section111 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section111.values.h["style"] = "-webkit-transform: rotate(-90deg);-webkit-transform-origin: 100% 0%;-moz-orient: vertical;writing-mode: bt-lr;";
		section111.values.h["orient"] = "vertical";
		section111.values.h["nodeType"] = "progress";
		section111.values.h["id"] = "haxe.ui.components.VerticalProgress";
		section111.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section111.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section237 = section111.addSection("behaviour");
		section237.values.h["name"] = "max";
		section237.values.h["id"] = "max";
		section237.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section238 = section111.addSection("behaviour");
		section238.values.h["name"] = "value";
		section238.values.h["id"] = "end";
		section238.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section239 = section111.addSection("behaviour");
		section239.values.h["remove"] = "true";
		section239.values.h["name"] = "value";
		section239.values.h["id"] = "indeterminate";
		section239.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
		let section240 = section111.addSection("behaviour");
		section240.values.h["id"] = "disabled";
		section240.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section112 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section112.values.h["type"] = "range";
		section112.values.h["style"] = "margin: 0;padding:0;";
		section112.values.h["nodeType"] = "input";
		section112.values.h["id"] = "haxe.ui.components.HorizontalSlider";
		section112.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section112.values.h["allowChildren"] = "false";
		section112.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section241 = section112.addSection("behaviour");
		section241.values.h["name"] = "min";
		section241.values.h["id"] = "min";
		section241.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section242 = section112.addSection("behaviour");
		section242.values.h["name"] = "max";
		section242.values.h["id"] = "max";
		section242.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section243 = section112.addSection("behaviour");
		section243.values.h["name"] = "value";
		section243.values.h["id"] = "pos";
		section243.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section244 = section112.addSection("behaviour");
		section244.values.h["name"] = "value";
		section244.values.h["id"] = "start";
		section244.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section245 = section112.addSection("behaviour");
		section245.values.h["name"] = "value";
		section245.values.h["id"] = "end";
		section245.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section246 = section112.addSection("behaviour");
		section246.values.h["id"] = "disabled";
		section246.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		let section113 = haxe_ui_Toolkit.nativeConfig.addSection("component");
		section113.values.h["type"] = "range";
		section113.values.h["style"] = "padding:0;margin: 0;-webkit-appearance: slider-vertical;-moz-orient: vertical;writing-mode: bt-lr;";
		section113.values.h["orient"] = "vertical";
		section113.values.h["nodeType"] = "input";
		section113.values.h["id"] = "haxe.ui.components.VerticalSlider";
		section113.values.h["class"] = "haxe.ui.backend.html5.native.NativeElement";
		section113.values.h["allowChildren"] = "false";
		section113.addSection("size").values.h["class"] = "haxe.ui.backend.html5.native.size.ElementSize";
		let section247 = section113.addSection("behaviour");
		section247.values.h["name"] = "min";
		section247.values.h["id"] = "min";
		section247.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section248 = section113.addSection("behaviour");
		section248.values.h["name"] = "max";
		section248.values.h["id"] = "max";
		section248.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section249 = section113.addSection("behaviour");
		section249.values.h["name"] = "value";
		section249.values.h["id"] = "pos";
		section249.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section250 = section113.addSection("behaviour");
		section250.values.h["name"] = "value";
		section250.values.h["id"] = "start";
		section250.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section251 = section113.addSection("behaviour");
		section251.values.h["name"] = "value";
		section251.values.h["id"] = "end";
		section251.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
		let section252 = section113.addSection("behaviour");
		section252.values.h["id"] = "disabled";
		section252.values.h["class"] = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
		haxe_ui_Toolkit.buildBackend();
		haxe_ui_Toolkit._built = true;
	}
	static buildBackend() {
		if(haxe_ui_Toolkit._backendBuilt == true) {
			return;
		}
		haxe_ui_Toolkit._backendBuilt = true;
	}
	static init(options) {
		haxe_ui_Toolkit.build();
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		if(options != null) {
			haxe_ui_Toolkit.get_screen().set_options(options);
			haxe_ui_ToolkitAssets.get_instance().options = options;
		}
		haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
		haxe_ui_Toolkit._initialized = true;
	}
	static onKeyDown(event) {
		if(event.keyCode == 9) {
			if(event.shiftKey == false) {
				haxe_ui_focus_FocusManager.get_instance().focusNext();
			} else {
				haxe_ui_focus_FocusManager.get_instance().focusPrev();
			}
		}
	}
	static get_assets() {
		return haxe_ui_ToolkitAssets.get_instance();
	}
	static get_screen() {
		return haxe_ui_core_Screen.get_instance();
	}
	static get_autoScaleDPIThreshold() {
		if(haxe_ui_core_Screen.get_instance().get_isRetina() == true) {
			return 192;
		}
		return 120;
	}
	static get_scaleX() {
		if(haxe_ui_Toolkit._scaleX == 0) {
			if(haxe_ui_Toolkit.autoScale == true) {
				let dpi = haxe_ui_core_Screen.get_instance().get_dpi();
				if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
					haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleX = 1;
				}
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		}
		return haxe_ui_Toolkit._scaleX;
	}
	static get_scaleY() {
		if(haxe_ui_Toolkit._scaleY == 0) {
			if(haxe_ui_Toolkit.autoScale == true) {
				let dpi = haxe_ui_core_Screen.get_instance().get_dpi();
				if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
					haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleY = 1;
				}
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		}
		return haxe_ui_Toolkit._scaleY;
	}
	static get_scale() {
		return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
	}
	static callLater(fn) {
		new haxe_ui_CallLater(fn);
	}
}
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {get_scale: "get_scale",get_scaleY: "get_scaleY",get_scaleX: "get_scaleX",get_autoScaleDPIThreshold: "get_autoScaleDPIThreshold",get_screen: "get_screen",get_assets: "get_assets",get_backendProperties: "get_backendProperties"};
class haxe_ui_backend_ScreenBase {
	constructor() {
		if(haxe_ui_backend_ScreenBase._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this._focus = null;
		this._topLevelComponents = [];
	}
	set_focus(value) {
		this._focus = value;
		return this._focus;
	}
	get_options() {
		return this._options;
	}
	set_options(value) {
		this._options = value;
		return value;
	}
	get_width() {
		return 0;
	}
	get_height() {
		return 0;
	}
	resizeComponent(c) {
		if(c.get_percentWidth() > 0) {
			c.set_width(this.get_width() * c.get_percentWidth() / 100);
		}
		if(c.get_percentHeight() > 0) {
			c.set_height(this.get_height() * c.get_percentHeight() / 100);
		}
	}
}
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
Object.assign(haxe_ui_backend_ScreenBase.prototype, {
	__class__: haxe_ui_backend_ScreenBase
	,_topLevelComponents: null
	,rootComponents: null
	,_focus: null
	,_options: null
	,width: null
	,height: null
	,__properties__: {get_height: "get_height",get_width: "get_width",set_options: "set_options",get_options: "get_options",set_focus: "set_focus"}
});
class haxe_ui_backend_ScreenImpl extends haxe_ui_backend_ScreenBase {
	constructor() {
		haxe_ui_backend_ScreenBase._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ScreenBase._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._hasListener = false;
		this._percentContainerHeightAdded = false;
		this._percentContainerWidthAdded = false;
		super._hx_constructor();
		this._mapping = new haxe_ds_StringMap();
	}
	set_options(value) {
		super.set_options(value);
		let cx = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.width",null);
		let cy = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.height",null);
		let c = this.get_container();
		if(cx != null) {
			c.style.width = cx;
		}
		if(cy != null) {
			c.style.height = cy;
		}
		return value;
	}
	get_dpi() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	get_width() {
		let cx = this.get_container().offsetWidth;
		if(cx <= 0) {
			let _g = 0;
			let _g1 = this._topLevelComponents;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				if(c.get_width() > cx) {
					cx = c.get_width();
				}
			}
		}
		return cx;
	}
	get_height() {
		let cy = this.get_container().offsetHeight;
		if(cy <= 0) {
			let _g = 0;
			let _g1 = this._topLevelComponents;
			while(_g < _g1.length) {
				let c = _g1[_g];
				++_g;
				if(c.get_height() > cy) {
					cy = c.get_height();
				}
			}
		}
		return cy;
	}
	get_isRetina() {
		return haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay();
	}
	addComponent(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			let transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString = "" + ("scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ");
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		this._topLevelComponents.push(component);
		if(component.get_percentWidth() != null) {
			this.addPercentContainerWidth();
		}
		if(component.get_percentHeight() != null) {
			this.addPercentContainerHeight();
		}
		this.addResizeListener();
		this.resizeComponent(component);
		return component;
	}
	addPercentContainerWidth() {
		if(this._percentContainerWidthAdded == true) {
			return;
		}
		this._percentContainerWidthAdded = true;
		let sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container-parent {\n            margin: 0;\n            width: 100%;\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\n            margin: 0;\n            width: 100%;\n        }",sheet.cssRules.length);
	}
	addPercentContainerHeight() {
		if(this._percentContainerHeightAdded == true) {
			return;
		}
		this._percentContainerHeightAdded = true;
		let sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container-parent {\n            margin: 0;\n            height: 100%;\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\n            margin: 0;\n            height: 100%;\n        }",sheet.cssRules.length);
	}
	removeComponent(component) {
		HxOverrides.remove(this._topLevelComponents,component);
		if(this.get_container().contains(component.element) == true) {
			this.get_container().removeChild(component.element);
		}
		return component;
	}
	handleSetComponentIndex(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	get_container() {
		let c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		if(c.id != "haxeui-container") {
			c.id = "haxeui-container";
			if(c.parentElement != null && c.parentElement.id != "haxeui-container-parent") {
				c.parentElement.id = "haxeui-container-parent";
			}
		}
		return c;
	}
	addResizeListener() {
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		let _gthis = this;
		window.addEventListener("resize",function(e) {
			let _g = 0;
			let _g1 = _gthis._topLevelComponents;
			while(_g < _g1.length) _gthis.resizeComponent(_g1[_g++]);
		});
	}
	supportsEvent(type) {
		return haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type] != null;
	}
	mapEvent(type,listener) {
		let container = window.document.body;
		let _gthis = this;
		switch(type) {
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			if(type == "mousemove" && Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == true) {
				let fn = null;
				fn = function(e) {
					container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],fn);
					if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
						container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],fn);
					}
					if(Object.prototype.hasOwnProperty.call(_gthis._mapping.h,type) == false) {
						if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
							container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(_gthis,_gthis.__onMouseEvent));
						}
						_gthis._mapping.h[type] = listener;
						container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],$bind(_gthis,_gthis.__onMouseEvent));
					}
				};
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],fn);
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],fn);
				}
				return;
			}
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
				}
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			}
			break;
		}
	}
	unmapEvent(type,listener) {
		let container = window.document.body;
		switch(type) {
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			let _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			let _this1 = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this1.h,type)) {
				delete(_this1.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			break;
		}
	}
	__onMouseEvent(event) {
		let type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			let fn = this._mapping.h[type];
			if(fn != null) {
				let mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				let touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( _g ) {
				}
				if(touchEvent == true) {
					let te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					let me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
	}
	__onKeyEvent(event) {
		let type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.keyCode == 9 || event.which == 9) {
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}
			let fn = this._mapping.h[type];
			if(fn != null) {
				let keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.ctrlKey = event.ctrlKey;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
}
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
Object.assign(haxe_ui_backend_ScreenImpl.prototype, {
	__class__: haxe_ui_backend_ScreenImpl
	,_mapping: null
	,_percentContainerWidthAdded: null
	,_percentContainerHeightAdded: null
	,container: null
	,_hasListener: null
	,__properties__: Object.assign({}, haxe_ui_backend_ScreenBase.prototype.__properties__, {get_container: "get_container"})
});
class haxe_ui_core_Screen extends haxe_ui_backend_ScreenImpl {
	constructor() {
		super();
		this.rootComponents = [];
		this._eventMap = new haxe_ui_util_EventMap();
	}
	addComponent(component) {
		component._hasScreen = true;
		super.addComponent(component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
			haxe_ui_focus_FocusManager.get_instance().pushView(component);
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
		return component;
	}
	removeComponent(component) {
		component._hasScreen = false;
		super.removeComponent(component);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		haxe_ui_focus_FocusManager.get_instance().removeView(component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
		return component;
	}
	setComponentIndex(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
		return child;
	}
	_refreshStyleComponent(component) {
		let _g = 0;
		let _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			child.invalidateComponent("style");
			child.invalidateComponent("display");
			this._refreshStyleComponent(child);
		}
	}
	_onRootComponentResize(e) {
		this._refreshStyleComponent(e.target);
	}
	invalidateAll() {
		let _g = 0;
		let _g1 = this.rootComponents;
		while(_g < _g1.length) this.invalidateChildren(_g1[_g++]);
	}
	invalidateChildren(c) {
		let _g = 0;
		let _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) this.invalidateChildren(_g1[_g++]);
		c.invalidateComponent();
	}
	registerEvent(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	unregisterEvent(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	_onMappedEvent(event) {
		this._eventMap.invoke(event.type,event);
	}
	static get_instance() {
		if(haxe_ui_core_Screen._instance == null) {
			haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
		}
		return haxe_ui_core_Screen._instance;
	}
}
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance: "get_instance"};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
Object.assign(haxe_ui_core_Screen.prototype, {
	__class__: haxe_ui_core_Screen
	,_eventMap: null
});
class haxe_ui_util_EventMap {
	constructor() {
		this._map = new haxe_ds_StringMap();
	}
	keys() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._map.h);
	}
	add(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(listener == null) {
			return false;
		}
		let b = false;
		let arr = this._map.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			this._map.h[type] = arr;
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	remove(type,listener) {
		if(listener == null) {
			return false;
		}
		let b = false;
		let arr = this._map.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				let _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				b = true;
			}
		}
		return b;
	}
	contains(type,listener) {
		let b = false;
		let arr = this._map.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	invoke(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		let arr = this._map.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			let listener = arr.iterator();
			while(listener.hasNext()) {
				let listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				let c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.canceled = c.canceled;
			}
		}
	}
	listeners(type) {
		let arr = this._map.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
}
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
Object.assign(haxe_ui_util_EventMap.prototype, {
	__class__: haxe_ui_util_EventMap
	,_map: null
});
class haxe_ui_backend_html5_util_StyleSheetHelper {
	static getValidStyleSheet() {
		if(haxe_ui_backend_html5_util_StyleSheetHelper._sheet != null) {
			return haxe_ui_backend_html5_util_StyleSheetHelper._sheet;
		}
		let sheet = null;
		let _g = 0;
		let _g1 = window.document.styleSheets;
		while(_g < _g1.length) {
			let test = _g1[_g];
			++_g;
			if(test.ownerNode == null || test.disabled == true) {
				continue;
			}
			let css = js_Boot.__cast(test , CSSStyleSheet);
			if(css.ownerNode.nodeName == "STYLE" && css.href == null) {
				try {
					sheet = css;
					break;
				} catch( _g ) {
				}
			}
		}
		if(sheet == null) {
			let styleElement = window.document.createElement("style");
			styleElement.appendChild(window.document.createTextNode(""));
			window.document.head.appendChild(styleElement);
			sheet = js_Boot.__cast(styleElement.sheet , CSSStyleSheet);
		}
		haxe_ui_backend_html5_util_StyleSheetHelper._sheet = sheet;
		return sheet;
	}
}
$hxClasses["haxe.ui.backend.html5.util.StyleSheetHelper"] = haxe_ui_backend_html5_util_StyleSheetHelper;
haxe_ui_backend_html5_util_StyleSheetHelper.__name__ = "haxe.ui.backend.html5.util.StyleSheetHelper";
class haxe_ui_behaviours_Behaviours {
	constructor(component) {
		this._actualUpdateOrder = null;
		this._updateOrder = [];
		this._instances = new haxe_ds_StringMap();
		this._registry = new haxe_ds_StringMap();
		this._component = component;
	}
	register(id,cls,defaultValue) {
		this._registry.h[id] = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	replaceNative() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		let ids = [];
		let id_keys = Object.keys(this._registry.h);
		let id_length = id_keys.length;
		let id_current = 0;
		while(id_current < id_length) ids.push(id_keys[id_current++]);
		let _g = 0;
		while(_g < ids.length) {
			let id = ids[_g];
			++_g;
			let nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && Object.prototype.hasOwnProperty.call(nativeProps.h,"class")) {
				let registered = this._registry.h[id];
				let name = nativeProps.h["class"];
				let info = { id : id, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				this._registry.h[id] = info;
			}
		}
	}
	validateData() {
		let _g = 0;
		let _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			let b = this._instances.h[_g1[_g++]];
			if(((b) instanceof haxe_ui_behaviours_DataBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_DataBehaviour)).validate();
			}
		}
	}
	set_updateOrder(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	get_actualUpdateOrder() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			let key_keys = Object.keys(this._instances.h);
			let key_length = key_keys.length;
			let key_current = 0;
			while(key_current < key_length) {
				let key = key_keys[key_current++];
				if(this._actualUpdateOrder.indexOf(key) == -1) {
					this._actualUpdateOrder.push(key);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	update() {
		let _g = 0;
		let _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			let b = this._instances.h[_g1[_g++]];
			if(b != null) {
				b.update();
			}
		}
	}
	find(id,create) {
		if(create == null) {
			create = true;
		}
		let b = this._instances.h[id];
		if(b == null && create == true) {
			let info = this._registry.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					this._instances.h[id] = b;
					this._actualUpdateOrder = null;
				} else {
					let c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 141, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw haxe_Exception.thrown("behaviour " + id + " not found");
		}
		return b;
	}
	cache() {
		this._cache = new haxe_ds_StringMap();
		let registeredKey_keys = Object.keys(this._registry.h);
		let registeredKey_length = registeredKey_keys.length;
		let registeredKey_current = 0;
		while(registeredKey_current < registeredKey_length) {
			let registeredKey = registeredKey_keys[registeredKey_current++];
			let v = this._registry.h[registeredKey].defaultValue;
			let instance = this._instances.h[registeredKey];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				this._cache.h[registeredKey] = v;
			}
		}
	}
	detatch() {
		let h = this._instances.h;
		let b_keys = Object.keys(h);
		let b_length = b_keys.length;
		let b_current = 0;
		while(b_current < b_length) h[b_keys[b_current++]].detatch();
		this._instances = new haxe_ds_StringMap();
	}
	restore() {
		if(this._cache == null) {
			return;
		}
		let _g = 0;
		let _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			let key = _g1[_g];
			++_g;
			let v = this._cache.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	lock() {
	}
	unlock() {
	}
	setDynamic(id,value) {
		this.lock();
		let b = this.find(id);
		let changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			changed = haxe_ui_util_Variant.neq((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value,value);
		}
		b.setDynamic(value);
		this._registry.h[id].isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	set(id,value) {
		this.lock();
		let b = this.find(id);
		let changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			changed = haxe_ui_util_Variant.neq((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value,value);
		}
		b.set(value);
		this._registry.h[id].isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	ready() {
		if(this._autoDispatch == null) {
			return;
		}
		let b = this._autoDispatch.keys();
		while(b.hasNext()) {
			let b1 = b.next();
			this.performAutoDispatch(b1,this._autoDispatch.h[b1.__id__]);
		}
		this._autoDispatch = null;
		haxe_ui_binding_BindingManager.get_instance().refreshAll();
	}
	performAutoDispatch(b,changed) {
		if(this._component.get_isReady() == false) {
			if(this._autoDispatch == null) {
				this._autoDispatch = new haxe_ds_ObjectMap();
			}
			this._autoDispatch.set(b,changed);
			return;
		}
		let autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			let arr = autoDispatch.split(".");
			let eventName = arr.pop().toLowerCase();
			let cls = arr.join(".");
			let event = Type.createInstance($hxClasses[cls],[eventName]);
			if(eventName != "change") {
				b._component.dispatch(event);
			} else if(changed == true || changed == null) {
				b._component.dispatch(event);
			}
		}
	}
	get(id) {
		this.lock();
		let b = this.find(id);
		let v = null;
		if(b != null) {
			let info = this._registry.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	getDynamic(id) {
		this.lock();
		let b = this.find(id);
		let v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	call(id,param) {
		return this.find(id).call(param);
	}
	applyDefaults() {
		let order = this._updateOrder.slice();
		let key_keys = Object.keys(this._registry.h);
		let key_length = key_keys.length;
		let key_current = 0;
		while(key_current < key_length) {
			let key = key_keys[key_current++];
			if(order.indexOf(key) == -1) {
				order.push(key);
			}
		}
		let _g = 0;
		while(_g < order.length) {
			let key = order[_g];
			++_g;
			let r = this._registry.h[key];
			if(r.defaultValue != null) {
				this.set(key,r.defaultValue);
			}
		}
	}
}
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
Object.assign(haxe_ui_behaviours_Behaviours.prototype, {
	__class__: haxe_ui_behaviours_Behaviours
	,_component: null
	,_registry: null
	,_instances: null
	,_updateOrder: null
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,_cache: null
	,_autoDispatch: null
	,__properties__: {get_actualUpdateOrder: "get_actualUpdateOrder",set_updateOrder: "set_updateOrder"}
});
class haxe_ui_Preloader extends haxe_ui_core_Component {
	constructor() {
		super();
		this.set_id("preloader");
		this.set_styleString("width:auto;height:auto;");
	}
	createChildren() {
		let label = new haxe_ui_components_Label();
		label.set_text("Loading");
		this.addComponent(label);
	}
	validateComponentLayout() {
		let b = super.validateComponentLayout();
		if(this.get_width() > 0 && this.get_height() > 0) {
			this.set_left(haxe_ui_core_Screen.get_instance().get_width() / 2 - this.get_width() / 2);
			this.set_top(haxe_ui_core_Screen.get_instance().get_height() / 2 - this.get_height() / 2);
		}
		return b;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_Preloader();
	}
}
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = "haxe.ui.Preloader";
haxe_ui_Preloader.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_Preloader.prototype, {
	__class__: haxe_ui_Preloader
});
class haxe_ui_backend_AssetsBase {
	constructor() {
		if(haxe_ui_backend_AssetsBase._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
	}
	getTextDelegate(resourceId) {
		return null;
	}
	imageInfoFromImageData(imageData) {
		return { data : imageData, width : 0, height : 0};
	}
}
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
Object.assign(haxe_ui_backend_AssetsBase.prototype, {
	__class__: haxe_ui_backend_AssetsBase
});
class haxe_ui_backend_AssetsImpl extends haxe_ui_backend_AssetsBase {
	_hx_constructor() {
		super._hx_constructor();
	}
	getImageInternal(resourceId,callback) {
		if(haxe_Resource.getBytes(resourceId) != null) {
			callback(null);
			return;
		}
		let image = window.document.createElement("img");
		image.onload = function(e) {
			callback({ width : image.width, height : image.height, data : image});
		};
		image.onerror = function(e) {
			callback(null);
		};
		image.src = resourceId;
	}
	getImageFromHaxeResource(resourceId,callback) {
		this.imageFromBytes(haxe_Resource.getBytes(resourceId),function(imageInfo) {
			callback(resourceId,imageInfo);
		});
	}
	imageFromBytes(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		let image = window.document.createElement("img");
		image.onload = function(e) {
			callback({ width : image.width, height : image.height, data : image});
		};
		image.onerror = function(e) {
			window.console.log(e);
			callback(null);
		};
		let blobUrl = URL.createObjectURL(new Blob([bytes.b.bufferValue]));
		image.src = blobUrl;
	}
	getFontInternal(resourceId,callback) {
		if(haxe_Resource.getBytes(resourceId) == null) {
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
				callback({ data : f});
			},function(f) {
				callback(null);
			});
			return;
		}
		this.getFontFromHaxeResource(resourceId,function(r,f) {
			callback(f);
		});
	}
	getFontFromHaxeResource(resourceId,callback) {
		let bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			callback(resourceId,null);
			return;
		}
		let fontFamilyParts = resourceId.split("/");
		let fontFamily = fontFamilyParts[fontFamilyParts.length - 1];
		if(fontFamily.indexOf(".") != -1) {
			fontFamily = HxOverrides.substr(fontFamily,0,fontFamily.indexOf("."));
		}
		new FontFace(fontFamily,bytes.b.bufferValue).load().then(function(loadedFace) {
			window.document.fonts.add(loadedFace);
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(fontFamily,function(f) {
				callback(resourceId,{ data : fontFamily});
			},function(f) {
				callback(resourceId,null);
			});
		}).catch(function(error) {
			callback(resourceId,null);
		});
	}
}
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
Object.assign(haxe_ui_backend_AssetsImpl.prototype, {
	__class__: haxe_ui_backend_AssetsImpl
});
class haxe_ui_ToolkitAssets extends haxe_ui_backend_AssetsImpl {
	constructor() {
		haxe_ui_backend_AssetsBase._hx_skip_constructor = true;
		super();
		haxe_ui_backend_AssetsBase._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this.options = null;
		super._hx_constructor();
	}
	getFont(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		let _gthis = this;
		if(this._fontCache != null && this._fontCache.h[resourceId] != null && useCache == true) {
			callback(this._fontCache.h[resourceId]);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	_onFontLoaded(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		this._fontCache.h[resourceId] = font;
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	getImage(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		let _gthis = this;
		let orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		if(this._imageCache != null && this._imageCache.h[resourceId] != null && useCache == true) {
			callback(this._imageCache.h[resourceId]);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	_onImageLoaded(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 106, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		this._imageCache.h[resourceId] = imageInfo;
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	getText(resourceId) {
		let s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	runPlugins(asset) {
		if(this._plugins == null) {
			return asset;
		}
		let _g = 0;
		let _g1 = this._plugins;
		while(_g < _g1.length) asset = _g1[_g++].invoke(asset);
		return asset;
	}
	static get_instance() {
		if(haxe_ui_ToolkitAssets._instance == null) {
			haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
		}
		return haxe_ui_ToolkitAssets._instance;
	}
}
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance: "get_instance"};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
Object.assign(haxe_ui_ToolkitAssets.prototype, {
	__class__: haxe_ui_ToolkitAssets
	,options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,_plugins: null
});
class haxe_ui_assets_AssetPlugin {
	constructor() {
	}
	invoke(asset) {
		return asset;
	}
}
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
Object.assign(haxe_ui_assets_AssetPlugin.prototype, {
	__class__: haxe_ui_assets_AssetPlugin
});
class haxe_ui_containers_Box extends haxe_ui_core_Component {
	_hx_constructor() {
		super._hx_constructor();
	}
	get_layoutName() {
		return this._layoutName;
	}
	set_layoutName(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	createDefaults() {
		super.createDefaults();
		if(this._defaultLayoutClass == null) {
			this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
		}
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_icon() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	set_icon(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"icon",value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"icon");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Box();
	}
}
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_containers_Box.prototype, {
	__class__: haxe_ui_containers_Box
	,_layoutName: null
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_icon: "set_icon",get_icon: "get_icon",set_layoutName: "set_layoutName",get_layoutName: "get_layoutName"})
});
class haxe_ui_layouts_ILayout {
}
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
class haxe_ui_layouts_Layout {
	constructor() {
		if(haxe_ui_layouts_Layout._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
	}
	get_component() {
		return this._component;
	}
	set_component(value) {
		this._component = value;
		if(this._component != null) {
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	findComponent(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	refresh() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	autoSize() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		let calculatedWidth = null;
		let calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			let size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	marginTop(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	marginLeft(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	marginBottom(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	marginRight(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	hidden(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	horizontalAlign(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	verticalAlign(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	fixedMinWidth(child) {
		let fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	fixedMinHeight(child) {
		let fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	get_paddingLeft() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	get_paddingTop() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	get_paddingBottom() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	get_paddingRight() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	get_horizontalSpacing() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	get_verticalSpacing() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	get_innerWidth() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	get_innerHeight() {
		if(this.get_component() == null) {
			return 0;
		}
		let padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		return this.get_component().get_componentHeight() - padding;
	}
	resizeChildren() {
	}
	repositionChildren() {
	}
	get_usableSize() {
		let ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		let ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	get_usableWidth() {
		return this.get_usableSize().width;
	}
	get_usableHeight() {
		return this.get_usableSize().height;
	}
	calcAutoSize(exclusions) {
		let x1 = 16777215;
		let x2 = 0;
		let y1 = 16777215;
		let y2 = 0;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		let w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		let h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	excluded(exclusions,child) {
		if(exclusions == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
}
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
Object.assign(haxe_ui_layouts_Layout.prototype, {
	__class__: haxe_ui_layouts_Layout
	,_component: null
	,paddingLeft: null
	,paddingTop: null
	,paddingBottom: null
	,paddingRight: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,innerWidth: null
	,innerHeight: null
	,usableSize: null
	,usableWidth: null
	,usableHeight: null
	,__properties__: {get_usableHeight: "get_usableHeight",get_usableWidth: "get_usableWidth",get_usableSize: "get_usableSize",get_innerHeight: "get_innerHeight",get_innerWidth: "get_innerWidth",get_verticalSpacing: "get_verticalSpacing",get_horizontalSpacing: "get_horizontalSpacing",get_paddingRight: "get_paddingRight",get_paddingBottom: "get_paddingBottom",get_paddingTop: "get_paddingTop",get_paddingLeft: "get_paddingLeft",set_component: "set_component",get_component: "get_component"}
});
class haxe_ui_layouts_DefaultLayout extends haxe_ui_layouts_Layout {
	constructor() {
		if(haxe_ui_layouts_Layout._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_layouts_Layout._hx_skip_constructor = true;
		super();
		haxe_ui_layouts_Layout._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._calcFullHeights = false;
		this._calcFullWidths = false;
		super._hx_constructor();
	}
	resizeChildren() {
		let usableSize = this.get_usableSize();
		let percentWidth = 100;
		let percentHeight = 100;
		let fullWidthValue = 100;
		let fullHeightValue = 100;
		if(this._calcFullWidths == true || this._calcFullHeights == true) {
			let n1 = 0;
			let n2 = 0;
			let _g = 0;
			let _this = this.get_component();
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(this._calcFullWidths == true && child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					++n1;
				}
				if(this._calcFullHeights == true && child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					++n2;
				}
			}
			if(n1 > 0) {
				fullWidthValue = 100 / n1;
			}
			if(n2 > 0) {
				fullHeightValue = 100 / n2;
			}
		}
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let cx = null;
			let cy = null;
			if(child.get_percentWidth() != null) {
				let childPercentWidth = child.get_percentWidth();
				if(childPercentWidth == 100) {
					childPercentWidth = fullWidthValue;
				}
				cx = usableSize.width * childPercentWidth / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				let childPercentHeight = child.get_percentHeight();
				if(childPercentHeight == 100) {
					childPercentHeight = fullHeightValue;
				}
				cy = usableSize.height * childPercentHeight / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	repositionChildren() {
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let xpos = 0;
			let ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
}
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
Object.assign(haxe_ui_layouts_DefaultLayout.prototype, {
	__class__: haxe_ui_layouts_DefaultLayout
	,_calcFullWidths: null
	,_calcFullHeights: null
});
class haxe_ui_layouts_VerticalLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
		this._calcFullHeights = true;
	}
	repositionChildren() {
		let ypos = this.get_paddingTop();
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let _this = this.get_component();
		let visibleChildren = (_this._children == null ? [] : _this._children).length;
		let _g = 0;
		let _this1 = this.get_component();
		let _g1 = _this1._children == null ? [] : _this1._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
}
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_layouts_VerticalLayout.prototype, {
	__class__: haxe_ui_layouts_VerticalLayout
});
class haxe_ui_containers_VBox extends haxe_ui_containers_Box {
	constructor() {
		super();
		this.set_layout(new haxe_ui_layouts_VerticalLayout());
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_VBox();
	}
}
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_VBox.prototype, {
	__class__: haxe_ui_containers_VBox
});
class haxe_ui_layouts_HorizontalLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
		this._calcFullWidths = true;
	}
	repositionChildren() {
		let xpos = this.get_paddingLeft();
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let _this = this.get_component();
		let visibleChildren = (_this._children == null ? [] : _this._children).length;
		let _g = 0;
		let _this1 = this.get_component();
		let _g1 = _this1._children == null ? [] : _this1._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
}
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_layouts_HorizontalLayout.prototype, {
	__class__: haxe_ui_layouts_HorizontalLayout
});
class haxe_ui_containers_HBox extends haxe_ui_containers_Box {
	constructor() {
		super();
		this.set_layout(new haxe_ui_layouts_HorizontalLayout());
	}
	get_continuous() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	set_continuous(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_continuous(this.get_continuous());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_HBox();
	}
}
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_HBox.prototype, {
	__class__: haxe_ui_containers_HBox
	,__properties__: Object.assign({}, haxe_ui_containers_Box.prototype.__properties__, {set_continuous: "set_continuous",get_continuous: "get_continuous"})
});
class haxe_ui_components_Label extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	get_htmlText() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	set_htmlText(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"htmlText",value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"htmlText"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"htmlText");
		return value;
	}
	get_value() {
		return this.get_text();
	}
	set_value(value) {
		this.set_text(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Label();
	}
}
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_Label.prototype, {
	__class__: haxe_ui_components_Label
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_htmlText: "set_htmlText",get_htmlText: "get_htmlText"})
});
class haxe_ui_components_Image extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_resource() {
		return this.behaviours.get("resource");
	}
	set_resource(value) {
		this.behaviours.set("resource",value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"resource"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"resource");
		return value;
	}
	get_scaleMode() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("scaleMode"));
	}
	set_scaleMode(value) {
		this.behaviours.set("scaleMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"scaleMode"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"scaleMode");
		return value;
	}
	get_imageHorizontalAlign() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	set_imageHorizontalAlign(value) {
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"imageHorizontalAlign"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"imageHorizontalAlign");
		return value;
	}
	get_imageVerticalAlign() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageVerticalAlign"));
	}
	set_imageVerticalAlign(value) {
		this.behaviours.set("imageVerticalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"imageVerticalAlign"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"imageVerticalAlign");
		return value;
	}
	get_originalWidth() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalWidth"));
	}
	set_originalWidth(value) {
		this.behaviours.set("originalWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"originalWidth"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"originalWidth");
		return value;
	}
	get_originalHeight() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalHeight"));
	}
	set_originalHeight(value) {
		this.behaviours.set("originalHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"originalHeight"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"originalHeight");
		return value;
	}
	get_value() {
		return haxe_ui_util_Variant.toDynamic(this.get_resource());
	}
	set_value(value) {
		this.set_resource(haxe_ui_util_Variant.fromDynamic(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"resource");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Image();
	}
}
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_Image.prototype, {
	__class__: haxe_ui_components_Image
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_originalHeight: "set_originalHeight",get_originalHeight: "get_originalHeight",set_originalWidth: "set_originalWidth",get_originalWidth: "get_originalWidth",set_imageVerticalAlign: "set_imageVerticalAlign",get_imageVerticalAlign: "get_imageVerticalAlign",set_imageHorizontalAlign: "set_imageHorizontalAlign",get_imageHorizontalAlign: "get_imageHorizontalAlign",set_scaleMode: "set_scaleMode",get_scaleMode: "get_scaleMode",set_resource: "set_resource",get_resource: "get_resource"})
});
class haxe_ui_backend_DialogBase extends haxe_ui_containers_Box {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._buttonsCreated = false;
		this._dialogParent = null;
		this._autoSizeDialog = false;
		this.button = null;
		this.centerDialog = true;
		this.buttons = null;
		this.autoCenterDialog = true;
		this.modal = true;
		super._hx_constructor();
		this.dialogContainer = new haxe_ui_containers_VBox();
		this.dialogContainer.set_id("dialog-container");
		this.dialogContainer.set_styleNames("dialog-container");
		this.addComponent(this.dialogContainer);
		this.dialogTitle = new haxe_ui_containers_HBox();
		this.dialogTitle.set_id("dialog-title");
		this.dialogTitle.set_styleNames("dialog-title");
		this.set_dragInitiator(this.dialogTitle);
		this.dialogContainer.addComponent(this.dialogTitle);
		this.dialogTitleLabel = new haxe_ui_components_Label();
		this.dialogTitleLabel.set_id("dialog-title-label");
		this.dialogTitleLabel.set_styleNames("dialog-title-label");
		this.dialogTitleLabel.set_text("HaxeUI");
		this.dialogTitle.addComponent(this.dialogTitleLabel);
		this.dialogCloseButton = new haxe_ui_components_Image();
		this.dialogCloseButton.set_id("dialog-close-button");
		this.dialogCloseButton.set_styleNames("dialog-close-button");
		this.dialogTitle.addComponent(this.dialogCloseButton);
		this.dialogContent = new haxe_ui_containers_VBox();
		this.dialogContent.set_id("dialog-content");
		this.dialogContent.set_styleNames("dialog-content");
		this.dialogContent.registerEvent("resize",$bind(this,this.onContentResize));
		this.dialogContainer.addComponent(this.dialogContent);
		this.dialogFooterContainer = new haxe_ui_containers_Box();
		this.dialogFooterContainer.set_id("dialog-footer-container");
		this.dialogFooterContainer.set_styleNames("dialog-footer-container");
		this.dialogContainer.addComponent(this.dialogFooterContainer);
		this.dialogFooter = new haxe_ui_containers_HBox();
		this.dialogFooter.set_id("dialog-footer");
		this.dialogFooter.set_styleNames("dialog-footer");
		this.dialogFooter.registerEvent("resize",$bind(this,this.onFooterResize));
		this.dialogFooterContainer.addComponent(this.dialogFooter);
		this.dialogFooterContainer.hide();
		let _gthis = this;
		this.dialogCloseButton.set_onClick(function(e) {
			_gthis.hideDialog("{{dialog.cancel}}");
		});
	}
	onReady() {
		super.onReady();
		this._autoSizeDialog = this.get_autoWidth();
	}
	get_dialogParent() {
		return this._dialogParent;
	}
	show() {
		this.handleVisibility(false);
		let dp = this.get_dialogParent();
		let _gthis = this;
		if(this.modal) {
			this._overlay = new haxe_ui_core_Component();
			this._overlay.set_id("modal-background");
			this._overlay.addClass("modal-background");
			this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			if(dp != null) {
				dp.addComponent(this._overlay);
			} else {
				haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			}
		}
		this.createButtons();
		if(dp != null) {
			dp.addComponent(this);
		} else {
			haxe_ui_core_Screen.get_instance().addComponent(this);
		}
		this.syncComponentValidation();
		if(this.get_autoHeight() == false) {
			this.dialogContainer.set_percentHeight(100);
			this.dialogContent.set_percentHeight(100);
		}
		if(this.centerDialog) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog));
		}
		haxe_ui_Toolkit.callLater(function() {
			if(_gthis.centerDialog) {
				_gthis.centerDialogComponent(js_Boot.__cast(_gthis , haxe_ui_containers_dialogs_Dialog));
			}
			haxe_ui_Toolkit.callLater(function() {
				_gthis.handleVisibility(true);
			});
		});
	}
	createButtons() {
		if(this._buttonsCreated == true) {
			return;
		}
		if(this.buttons != null) {
			let _g = 0;
			let _g1 = haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons);
			while(_g < _g1.length) {
				let button = _g1[_g];
				++_g;
				let buttonComponent = new haxe_ui_components_Button();
				buttonComponent.set_id(haxe_ui_containers_dialogs_DialogButton.toString(button));
				let text = buttonComponent.get_id();
				if(text.indexOf("{{") == 0 && text.indexOf("}}") == text.length - 2) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(buttonComponent,"text",text);
					text = HxOverrides.substr(text,2,text.length - 4);
				}
				let translatedText = haxe_ui_locale_LocaleManager.get_instance().lookupString(text);
				if(translatedText != null) {
					text = translatedText;
				}
				buttonComponent.set_text(text);
				buttonComponent.userData = button;
				buttonComponent.registerEvent("click",$bind(this,this.onFooterButtonClick));
				this.addFooterComponent(buttonComponent);
			}
			this._buttonsCreated = true;
		}
	}
	validateDialog(button,fn) {
		fn(true);
	}
	hide() {
		let _gthis = this;
		this.validateDialog(this.button,function(result) {
			if(result == true) {
				let dp = _gthis.get_dialogParent();
				if(_gthis.modal && _gthis._overlay != null) {
					if(dp != null) {
						dp.removeComponent(_gthis._overlay);
					} else {
						haxe_ui_core_Screen.get_instance().removeComponent(_gthis._overlay);
					}
				}
				if(dp != null) {
					dp.removeComponent(_gthis,false);
				} else {
					haxe_ui_core_Screen.get_instance().removeComponent(_gthis);
				}
				let event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed");
				event.button = _gthis.button;
				_gthis.dispatch(event);
			}
		});
	}
	hideDialog(button) {
		this.button = button;
		this.hide();
	}
	get_title() {
		return this.dialogTitleLabel.get_text();
	}
	set_title(value) {
		this.dialogTitleLabel.set_text(value);
		return value;
	}
	addComponent(child) {
		if(child.hasClass("dialog-container")) {
			return super.addComponent(child);
		}
		return this.dialogContent.addComponent(child);
	}
	validateComponentLayout() {
		let b = super.validateComponentLayout();
		this.dialogTitle.set_width(this.get_layout().get_innerWidth());
		if(this._autoSizeDialog == false) {
			let offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
			if(this.dialogContent.get_width() != this.get_width() - offset) {
				this.dialogContent.set_width(this.get_width() - offset);
			}
			if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
				this.dialogFooterContainer.set_width(this.get_width() - offset);
			}
		}
		return b;
	}
	onContentResize(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		let cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		let offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		let recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	onFooterResize(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		let cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		let offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		let recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	addFooterComponent(c) {
		this.dialogFooterContainer.show();
		this.dialogFooter.addComponent(c);
	}
	centerDialogComponent(dialog,validate) {
		if(validate == null) {
			validate = true;
		}
		if(validate == true) {
			dialog.syncComponentValidation();
		}
		let dp = this.get_dialogParent();
		if(dp != null) {
			if(validate == true) {
				dp.syncComponentValidation();
			}
			dialog.moveComponent(dp.get_width() / 2 - dialog.get_componentWidth() / 2,dp.get_height() / 2 - dialog.get_componentHeight() / 2);
		} else {
			dialog.moveComponent(haxe_ui_core_Screen.get_instance().get_width() / 2 - dialog.get_componentWidth() / 2,haxe_ui_core_Screen.get_instance().get_height() / 2 - dialog.get_componentHeight() / 2);
		}
	}
	onFooterButtonClick(event) {
		this.hideDialog(event.target.userData);
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_backend_DialogBase();
	}
}
$hxClasses["haxe.ui.backend.DialogBase"] = haxe_ui_backend_DialogBase;
haxe_ui_backend_DialogBase.__name__ = "haxe.ui.backend.DialogBase";
haxe_ui_backend_DialogBase.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_backend_DialogBase.prototype, {
	__class__: haxe_ui_backend_DialogBase
	,modal: null
	,autoCenterDialog: null
	,buttons: null
	,centerDialog: null
	,button: null
	,_overlay: null
	,dialogContainer: null
	,dialogTitle: null
	,dialogTitleLabel: null
	,dialogCloseButton: null
	,dialogContent: null
	,dialogFooterContainer: null
	,dialogFooter: null
	,_autoSizeDialog: null
	,_dialogParent: null
	,_buttonsCreated: null
	,__properties__: Object.assign({}, haxe_ui_containers_Box.prototype.__properties__, {set_title: "set_title",get_title: "get_title",get_dialogParent: "get_dialogParent"})
});
class haxe_ui_backend_EventBase {
}
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
class haxe_ui_backend_EventImpl extends haxe_ui_backend_EventBase {
	cancel() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	postClone(event) {
		event._originalEvent = this._originalEvent;
	}
}
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
Object.assign(haxe_ui_backend_EventImpl.prototype, {
	__class__: haxe_ui_backend_EventImpl
	,_originalEvent: null
});
class haxe_ui_backend_ImageSurface {
	constructor() {
		if(haxe_ui_backend_ImageSurface._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
	}
}
$hxClasses["haxe.ui.backend.ImageSurface"] = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageSurface.__name__ = "haxe.ui.backend.ImageSurface";
Object.assign(haxe_ui_backend_ImageSurface.prototype, {
	__class__: haxe_ui_backend_ImageSurface
});
class haxe_ui_backend_ImageBase extends haxe_ui_backend_ImageSurface {
	constructor() {
		if(haxe_ui_backend_ImageSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ImageSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ImageSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._imageHeight = 0;
		this._imageWidth = 0;
		this._top = 0;
		this._left = 0;
		super._hx_constructor();
	}
}
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = haxe_ui_backend_ImageSurface;
Object.assign(haxe_ui_backend_ImageBase.prototype, {
	__class__: haxe_ui_backend_ImageBase
	,parentComponent: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
});
class haxe_ui_backend_ImageDisplayImpl extends haxe_ui_backend_ImageBase {
	_hx_constructor() {
		super._hx_constructor();
		this.element = window.document.createElement("img");
		this.element.style.position = "absolute";
		this.element.style.borderRadius = "inherit";
		this.element.style.setProperty("pointer-events","none");
	}
	dispose() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	validateData() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
		}
	}
	validatePosition() {
		let style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	validateDisplay() {
		let style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			let clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
}
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
Object.assign(haxe_ui_backend_ImageDisplayImpl.prototype, {
	__class__: haxe_ui_backend_ImageDisplayImpl
	,element: null
});
class haxe_ui_containers_dialogs_Dialog extends haxe_ui_backend_DialogBase {
	_hx_constructor() {
		super._hx_constructor();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_dialogs_Dialog();
	}
}
$hxClasses["haxe.ui.containers.dialogs.Dialog"] = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_Dialog.__name__ = "haxe.ui.containers.dialogs.Dialog";
haxe_ui_containers_dialogs_Dialog.__super__ = haxe_ui_backend_DialogBase;
Object.assign(haxe_ui_containers_dialogs_Dialog.prototype, {
	__class__: haxe_ui_containers_dialogs_Dialog
});
class haxe_ui_backend_MessageBoxBase extends haxe_ui_containers_dialogs_Dialog {
	constructor() {
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._type = null;
		super._hx_constructor();
		let hbox = new haxe_ui_containers_HBox();
		hbox.set_percentWidth(100);
		hbox.set_styleString("spacing:10px;");
		this.addComponent(hbox);
		this.iconImage = new haxe_ui_components_Image();
		this.iconImage.set_id("iconImage");
		hbox.addComponent(this.iconImage);
		this.messageLabel = new haxe_ui_components_Label();
		this.messageLabel.set_id("messageLabel");
		this.messageLabel.set_percentWidth(100);
		hbox.addComponent(this.messageLabel);
	}
	get_type() {
		return this._type;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_backend_MessageBoxBase();
	}
}
$hxClasses["haxe.ui.backend.MessageBoxBase"] = haxe_ui_backend_MessageBoxBase;
haxe_ui_backend_MessageBoxBase.__name__ = "haxe.ui.backend.MessageBoxBase";
haxe_ui_backend_MessageBoxBase.__super__ = haxe_ui_containers_dialogs_Dialog;
Object.assign(haxe_ui_backend_MessageBoxBase.prototype, {
	__class__: haxe_ui_backend_MessageBoxBase
	,iconImage: null
	,messageLabel: null
	,_type: null
	,__properties__: Object.assign({}, haxe_ui_containers_dialogs_Dialog.prototype.__properties__, {get_type: "get_type"})
});
class haxe_ui_backend_PlatformBase {
	constructor() {
	}
	getMetric(id) {
		return 0;
	}
	getColor(id) {
		return null;
	}
}
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
Object.assign(haxe_ui_backend_PlatformBase.prototype, {
	__class__: haxe_ui_backend_PlatformBase
});
class haxe_ui_backend_PlatformImpl extends haxe_ui_backend_PlatformBase {
	constructor() {
		super();
	}
	getMetric(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._vscrollWidth;
		}
		return super.getMetric(id);
	}
	static calcScrollSize() {
		if(haxe_ui_backend_PlatformImpl._vscrollWidth >= 0 && haxe_ui_backend_PlatformImpl._hscrollHeight >= 0) {
			return;
		}
		let div = window.document.createElement("div");
		div.style.position = "absolute";
		div.style.top = "-99999px";
		div.style.left = "-99999px";
		div.style.height = "100px";
		div.style.width = "100px";
		div.style.overflow = "scroll";
		window.document.body.appendChild(div);
		haxe_ui_backend_PlatformImpl._vscrollWidth = div.offsetWidth - div.clientWidth;
		haxe_ui_backend_PlatformImpl._hscrollHeight = div.offsetHeight - div.clientHeight;
		haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	}
}
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
Object.assign(haxe_ui_backend_PlatformImpl.prototype, {
	__class__: haxe_ui_backend_PlatformImpl
});
class haxe_ui_backend_TextBase {
	constructor() {
		if(haxe_ui_backend_TextBase._hx_skip_constructor) {
			return;
		}
		this._hx_constructor();
	}
	_hx_constructor() {
		this._textHeight = 0;
		this._textWidth = 0;
		this._height = 0;
		this._width = 0;
		this._top = 0;
		this._left = 0;
		this._htmlText = null;
		this._inputData = new haxe_ui_core_TextInputData();
		this._displayData = new haxe_ui_core_TextDisplayData();
	}
	set_dataSource(value) {
		this._dataSource = value;
		return value;
	}
}
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
Object.assign(haxe_ui_backend_TextBase.prototype, {
	__class__: haxe_ui_backend_TextBase
	,parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,_dataSource: null
	,__properties__: {set_dataSource: "set_dataSource"}
});
class haxe_ui_backend_TextDisplayImpl extends haxe_ui_backend_TextBase {
	constructor() {
		if(haxe_ui_backend_TextBase._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_TextBase._hx_skip_constructor = true;
		super();
		haxe_ui_backend_TextBase._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._fixedHeight = false;
		this._fixedWidth = false;
		super._hx_constructor();
		this._displayData.multiline = false;
		this.element = this.createElement();
	}
	validateData() {
		let html = null;
		if(this._text != null) {
			html = this.normalizeText(this._text);
		} else if(this._htmlText != null) {
			html = this.normalizeText(this._htmlText,false);
		}
		if(html != null && this._html != html) {
			this.element.innerHTML = html;
			this._html = html;
			if(this.get_autoWidth() == false) {
				this._fixedWidth = false;
				this._fixedHeight = false;
			}
		}
	}
	validateStyle() {
		let measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "normal";
			this.element.style.wordBreak = "break-word";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "pre") {
			this.element.style.whiteSpace = "pre";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			let fontSizeValue = "" + this._textStyle.fontSize + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			if(this._textStyle.fontBold == true && this.element.style.fontWeight != "bold") {
				this.element.style.fontWeight = "bold";
				measureTextRequired = true;
			}
			if(this._textStyle.fontItalic == true && this.element.style.fontStyle != "italic") {
				this.element.style.fontStyle = "italic";
				measureTextRequired = true;
			}
			if(this._textStyle.fontUnderline == true && this.element.style.textDecoration != "underline") {
				this.element.style.textDecoration = "underline";
				measureTextRequired = true;
			}
			let colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				let _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		}
		if(measureTextRequired == true) {
			this._fixedWidth = false;
			this._fixedHeight = false;
		}
		return measureTextRequired;
	}
	validatePosition() {
		let style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	validateDisplay() {
		let style = this.element.style;
		let allowFixed = true;
		if(this.get_autoWidth() == false && style.width != "" + this._width + "px") {
			allowFixed = false;
		}
		if(this._width > 0 && this.get_autoWidth() == false) {
			this._fixedWidth = true;
			style.width = "" + this._width + "px";
		}
		if(this._height > 0 && this.get_autoWidth() == false) {
			this._fixedHeight = true;
			style.height = "" + this._height + "px";
		}
		if(allowFixed == false) {
			this._fixedHeight = false;
		}
	}
	measureText() {
		if(this._fixedWidth == true && this._fixedHeight == true) {
			return;
		}
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		let div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		if(this._fixedWidth == false) {
			this._textWidth = div.clientWidth;
		}
		if(this._fixedHeight == false) {
			this._textHeight = div.clientHeight;
		}
	}
	createElement() {
		let el = window.document.createElement("div");
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	setTempDivData(div) {
		let t = null;
		if(this._text != null) {
			t = this.normalizeText(this._text);
		} else if(this._htmlText != null) {
			t = this.normalizeText(this._htmlText,false);
		}
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.wordBreak = this.element.style.wordBreak;
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		div.innerHTML = t;
	}
	normalizeText(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		let html = text;
		if($escape == true) {
			html = haxe_ui_backend_html5_HtmlUtils.escape(text);
		}
		html = StringTools.replace(html,"\\n","\n");
		html = StringTools.replace(html,"\r\n","<br/>");
		html = StringTools.replace(html,"\r","<br/>");
		html = StringTools.replace(html,"\n","<br/>");
		return html;
	}
	get_autoWidth() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoWidth();
		}
		return false;
	}
	get_supportsHtml() {
		return true;
	}
}
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
Object.assign(haxe_ui_backend_TextDisplayImpl.prototype, {
	__class__: haxe_ui_backend_TextDisplayImpl
	,element: null
	,_html: null
	,_rawFontName: null
	,_fixedWidth: null
	,_fixedHeight: null
	,autoWidth: null
	,__properties__: Object.assign({}, haxe_ui_backend_TextBase.prototype.__properties__, {get_autoWidth: "get_autoWidth"})
});
class haxe_ui_backend_TextInputImpl extends haxe_ui_backend_TextDisplayImpl {
	_hx_constructor() {
		super._hx_constructor();
	}
	focus() {
		this.element.focus({preventScroll: true});
	}
	blur() {
		this.element.blur();
	}
	onChangeEvent(e) {
		let newText = null;
		if(((this.parentComponent) instanceof haxe_ui_components_TextArea)) {
			newText = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			newText = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
		if(newText != this._text) {
			this._text = newText;
			this.measureText();
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	onScroll(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	validateData() {
		if(this._text != null) {
			let html = this.normalizeText(this._text);
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		let hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		let vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	validateStyle() {
		let measureTextRequired = false;
		if(this._displayData.multiline == false && ((this.element) instanceof HTMLInputElement) == false || this._displayData.multiline == true && ((this.element) instanceof HTMLTextAreaElement) == false) {
			let newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			let inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(this.parentComponent.get_disabled() || this.parentComponent._interactivityDisabled == true) {
			this.element.style.cursor = "not-allowed";
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = true;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = true;
			}
		} else {
			this.element.style.cursor = null;
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = false;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = false;
			}
		}
		if(!super.validateStyle()) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	measureText() {
		if(((this.element) instanceof HTMLTextAreaElement)) {
			this._textWidth = (js_Boot.__cast(this.element , HTMLTextAreaElement)).scrollWidth;
			this._textHeight = (js_Boot.__cast(this.element , HTMLTextAreaElement)).scrollHeight;
		} else {
			super.measureText();
		}
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	createElement() {
		if(this.element != null) {
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
		}
		let el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "pre";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.padding = "0px";
			el.style.marginLeft = "-1px";
			el.style.marginTop = "-1px";
			el.spellcheck = false;
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.padding = "0px";
			el.style.margin = "0px";
			el.style.bottom = "0px";
			el.style.right = "0px";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "normal";
			el.id = "textArea";
			el.spellcheck = false;
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					let ta = js_Boot.__cast(el , HTMLTextAreaElement);
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = ta.selectionStart + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("input",$bind(this,this.onChangeEvent));
		el.addEventListener("propertychange",$bind(this,this.onChangeEvent));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	setTempDivData(div) {
		let t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.width = "";
		div.innerHTML = this.normalizeText(t);
	}
	normalizeText(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		return StringTools.replace(text,"\\n","\n");
	}
}
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
Object.assign(haxe_ui_backend_TextInputImpl.prototype, {
	__class__: haxe_ui_backend_TextInputImpl
});
class haxe_ui_backend_TimerImpl {
	constructor(delay,callback) {
		this._timer = new haxe_Timer(delay);
		this._timer.run = function() {
			callback();
		};
	}
	stop() {
		this._timer.stop();
	}
}
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
Object.assign(haxe_ui_backend_TimerImpl.prototype, {
	__class__: haxe_ui_backend_TimerImpl
	,_timer: null
});
class haxe_ui_backend_html5_EventMapper {
}
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = "haxe.ui.backend.html5.EventMapper";
class haxe_ui_validation_ValidationManager {
	constructor() {
		this._displayQueue = [];
		this._queue = [];
		this.isValidating = false;
		this.isPending = false;
	}
	registerEvent(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	dispatch(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	add(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		let queueLength = this._queue.length;
		if(this.isValidating == true) {
			let depth = object.get_depth();
			let min = 0;
			let max = queueLength;
			let i = 0;
			let otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	addDisplay(item,nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
		if(nextFrame == false) {
			this.process();
		}
	}
	process() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		let queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStart"));
		while(this._queue.length > 0) {
			let item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		let _g = 0;
		let _g1 = this._displayQueue.length;
		while(_g < _g1) this._displayQueue[_g++].updateComponentDisplay();
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStop"));
	}
	queueSortFunction(first,second) {
		let difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	static get_instance() {
		if(haxe_ui_validation_ValidationManager.instance == null) {
			haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
		}
		return haxe_ui_validation_ValidationManager.instance;
	}
}
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_validation_ValidationManager.prototype, {
	__class__: haxe_ui_validation_ValidationManager
	,isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
});
class haxe_ui_backend_html5_HtmlUtils {
	static color(value) {
		return "#" + StringTools.hex(value,6);
	}
	static rgba(value,alpha) {
		if(alpha == null) {
			alpha = 1;
		}
		return "rgba(" + (value >> 16 & 255) + ", " + (value >> 8 & 255) + ", " + (value & 255) + ", " + alpha + ")";
	}
	static escape(s) {
		s = StringTools.replace(s,"\"","&quot;");
		s = StringTools.replace(s,"'","&#39;");
		s = StringTools.replace(s,"<","&lt;");
		s = StringTools.replace(s,">","&gt;");
		return s;
	}
	static namedChild(el,child,index) {
		if(index == null) {
			index = 0;
		}
		if(child != null) {
			let list = el.getElementsByTagName(child);
			if(list.length == 0) {
				return null;
			}
			el = list.item(index);
		}
		return el;
	}
	static onValidationStop(e) {
	}
	static createDivHelper() {
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER = window.document.createElement("div");
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.position = "absolute";
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.top = "-99999px";
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.left = "-99999px";
			window.document.body.appendChild(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER);
		}
	}
	static measureText(text,addWidth,addHeight,fontSize,fontName) {
		if(fontSize == null) {
			fontSize = -1;
		}
		if(addHeight == null) {
			addHeight = 0;
		}
		if(addWidth == null) {
			addWidth = 0;
		}
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.width = "";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.height = "";
		if(fontSize > 0) {
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "" + fontSize + "px";
		} else {
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "";
		}
		if(fontName != null) {
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = fontName;
		} else {
			haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = "";
		}
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.innerHTML = text;
		return new haxe_ui_geom_Size(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientWidth + addWidth,haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientHeight + addHeight);
	}
	static get_dpi() {
		if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
			return haxe_ui_backend_html5_HtmlUtils._dpi;
		}
		let div = window.document.createElement("div");
		div.style.width = "1in";
		div.style.height = "1in";
		div.style.position = "absolute";
		div.style.top = "-99999px";
		div.style.left = "-99999px";
		window.document.body.appendChild(div);
		let devicePixelRatio = window.devicePixelRatio;
		if(devicePixelRatio == null) {
			devicePixelRatio = 1;
		}
		haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
		haxe_ui_backend_html5_HtmlUtils.removeElement(div);
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	static swapElements(el1,el2) {
		el2.parentElement.insertBefore(el2,el1);
	}
	static insertBefore(el,before) {
		before.parentElement.insertBefore(before,el);
	}
	static removeElement(el) {
		if(el != null && el.parentElement != null) {
			el.parentElement.removeChild(el);
		}
	}
	static isRetinaDisplay() {
		if(haxe_ui_backend_html5_HtmlUtils._isRetina == null) {
			if(window.matchMedia("(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)").matches) {
				haxe_ui_backend_html5_HtmlUtils._isRetina = true;
			} else {
				haxe_ui_backend_html5_HtmlUtils._isRetina = false;
			}
		}
		return haxe_ui_backend_html5_HtmlUtils._isRetina;
	}
}
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = "haxe.ui.backend.html5.HtmlUtils";
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi: "get_dpi"};
class haxe_ui_backend_html5_StyleHelper {
	static apply(component,width,height,style) {
		let css = component.element.style;
		let slice = null;
		if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
			slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
		}
		if(slice != null) {
			width = Math.round(width);
			height = Math.round(height);
		}
		css.width = "" + width + "px";
		css.height = "" + height + "px";
		let borderStyle = style.borderStyle;
		if(borderStyle == null) {
			borderStyle = "solid";
		}
		if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
			if(style.borderLeftSize > 0) {
				css.borderWidth = "" + style.borderLeftSize + "px";
				css.borderStyle = borderStyle;
			} else {
				css.removeProperty("border-width");
				css.removeProperty("border-style");
			}
		} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		} else {
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				css.borderTopWidth = "" + style.borderTopSize + "px";
				css.borderTopStyle = borderStyle;
			} else {
				css.removeProperty("border-top-width");
				css.removeProperty("border-top-style");
			}
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				css.borderLeftWidth = "" + style.borderLeftSize + "px";
				css.borderLeftStyle = borderStyle;
			} else {
				css.removeProperty("border-left-width");
				css.removeProperty("border-left-style");
			}
			if(style.borderBottomSize != null && style.borderBottomSize > 0) {
				css.borderBottomWidth = "" + style.borderBottomSize + "px";
				css.borderBottomStyle = borderStyle;
			} else {
				css.removeProperty("border-bottom-width");
				css.removeProperty("border-bottom-style");
			}
			if(style.borderRightSize != null && style.borderRightSize > 0) {
				css.borderRightWidth = "" + style.borderRightSize + "px";
				css.borderRightStyle = borderStyle;
			} else {
				css.removeProperty("border-right-width");
				css.removeProperty("border-right-style");
			}
		}
		if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
			if(style.borderOpacity == null) {
				css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
			} else {
				css.borderColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
			}
		} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
			css.removeProperty("border-color");
		} else {
			if(style.borderTopColor != null) {
				if(style.borderOpacity == null) {
					css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
				} else {
					css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderTopColor,style.borderOpacity);
				}
			} else {
				css.removeProperty("border-top-color");
			}
			if(style.borderLeftColor != null) {
				if(style.borderOpacity == null) {
					css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
				} else {
					css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
				}
			} else {
				css.removeProperty("border-left-color");
			}
			if(style.borderBottomColor != null) {
				if(style.borderOpacity == null) {
					css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
				} else {
					css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderBottomColor,style.borderOpacity);
				}
			} else {
				css.removeProperty("border-bottom-color");
			}
			if(style.borderRightColor != null) {
				if(style.borderOpacity == null) {
					css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
				} else {
					css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderRightColor,style.borderOpacity);
				}
			} else {
				css.removeProperty("border-right-color");
			}
		}
		let background = [];
		if(style.backgroundColor != null) {
			if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
				css.removeProperty("background-color");
				let gradientStyle = style.backgroundGradientStyle;
				if(gradientStyle == null) {
					gradientStyle = "vertical";
				}
				if(style.backgroundOpacity != null) {
					if(gradientStyle == "vertical") {
						background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
					} else if(gradientStyle == "horizontal") {
						background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
					}
				} else if(gradientStyle == "vertical") {
					background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
				} else if(gradientStyle == "horizontal") {
					background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
				}
			} else {
				css.removeProperty("background");
				if(style.backgroundOpacity != null) {
					css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
				} else {
					css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
				}
			}
		} else {
			css.removeProperty("background");
			css.removeProperty("background-color");
		}
		if(style.borderRadius != null && style.borderRadius > 0 && (style.borderRadiusTopLeft == null || style.borderRadiusTopLeft == style.borderRadius) && (style.borderRadiusTopRight == null || style.borderRadiusTopRight == style.borderRadius) && (style.borderRadiusBottomLeft == null || style.borderRadiusBottomLeft == style.borderRadius) && (style.borderRadiusBottomRight == null || style.borderRadiusBottomRight == style.borderRadius)) {
			css.borderRadius = "" + style.borderRadius + "px";
		} else if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0 || style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0 || style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0 || style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
			if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0) {
				css.borderTopLeftRadius = "" + style.borderRadiusTopLeft + "px";
			} else {
				css.removeProperty("border-top-left-radius");
			}
			if(style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0) {
				css.borderTopRightRadius = "" + style.borderRadiusTopRight + "px";
			} else {
				css.removeProperty("border-top-right-radius");
			}
			if(style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0) {
				css.borderBottomLeftRadius = "" + style.borderRadiusBottomLeft + "px";
			} else {
				css.removeProperty("border-bottom-left-radius");
			}
			if(style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
				css.borderBottomRightRadius = "" + style.borderRadiusBottomRight + "px";
			} else {
				css.removeProperty("border-bottom-right-radius");
			}
		} else {
			css.removeProperty("border-radius");
		}
		if(style.backgroundImage != null) {
			haxe_ui_Toolkit.get_assets().getImage(style.backgroundImage,function(imageInfo) {
				if(imageInfo == null) {
					return;
				}
				let imageRect = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
				if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
					imageRect = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
				}
				if(slice == null) {
					if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
						background.push("url(" + imageInfo.data.src + ")");
						if(style.backgroundImageRepeat == null) {
							css.backgroundRepeat = "no-repeat";
							css.removeProperty("background-size");
						} else if(style.backgroundImageRepeat == "repeat") {
							css.backgroundRepeat = "repeat";
							css.removeProperty("background-size");
						} else if(style.backgroundImageRepeat == "stretch") {
							css.backgroundRepeat = "no-repeat";
							css.backgroundSize = "100% 100%";
						}
						background.reverse();
						css.background = background.join(",");
					} else {
						let ctx = component.getCanvas(width,height).getContext("2d",null);
						ctx.clearRect(0,0,width,height);
						haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_geom_Rectangle(0,0,width,height));
					}
				} else {
					let rects = haxe_ui_geom_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
					let srcRects = rects.src;
					let dstRects = rects.dst;
					let ctx = component.getCanvas(width,height).getContext("2d",null);
					ctx.clearRect(0,0,width,height);
					ctx.imageSmoothingEnabled = false;
					let _g = 0;
					let _g1 = srcRects.length;
					while(_g < _g1) {
						let i = _g++;
						haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,new haxe_ui_geom_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height),dstRects[i]);
					}
				}
			});
		} else {
			component.removeCanvas();
			css.background = background[0];
		}
	}
	static paintBitmap(ctx,img,srcRect,dstRect) {
		if(srcRect.width == 0 || srcRect.height == 0) {
			return;
		}
		if(dstRect.width == 0 || dstRect.height == 0) {
			return;
		}
		ctx.drawImage(img,srcRect.left | 0,srcRect.top | 0,srcRect.width | 0,srcRect.height | 0,dstRect.left | 0,dstRect.top | 0,dstRect.width | 0,dstRect.height | 0);
	}
}
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = "haxe.ui.backend.html5.StyleHelper";
class haxe_ui_backend_html5_UserAgent {
	constructor() {
		this._unknown = false;
		this._msie = false;
		this._firefox = false;
		this._safari = false;
		this._chrome = false;
		this._opera = false;
		let ua = $global.navigator.userAgent;
		if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
			this._opera = true;
		} else if(ua.indexOf("Chrome") != -1) {
			this._chrome = true;
		} else if(ua.indexOf("Safari") != -1) {
			this._safari = true;
		} else if(ua.indexOf("Firefox") != -1) {
			this._firefox = true;
		} else if(ua.indexOf("MSIE") != -1) {
			this._msie = true;
		} else {
			this._unknown = true;
		}
	}
	get_chrome() {
		return this._chrome;
	}
	get_firefox() {
		return this._firefox;
	}
	static get_instance() {
		if(haxe_ui_backend_html5_UserAgent._instance == null) {
			haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
		}
		return haxe_ui_backend_html5_UserAgent._instance;
	}
}
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = "haxe.ui.backend.html5.UserAgent";
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_backend_html5_UserAgent.prototype, {
	__class__: haxe_ui_backend_html5_UserAgent
	,_opera: null
	,_chrome: null
	,chrome: null
	,_safari: null
	,_firefox: null
	,firefox: null
	,_msie: null
	,_unknown: null
	,__properties__: {get_firefox: "get_firefox",get_chrome: "get_chrome"}
});
class haxe_ui_backend_html5_native_NativeElement {
	constructor(component) {
		this.config = null;
		this._component = component;
	}
	create() {
		let nodeType = this.getConfigValue("nodeType","div");
		let el = window.document.createElement(nodeType);
		el.style.boxSizing = "border-box";
		let type = this.getConfigValue("type");
		if(type != null) {
			el.setAttribute("type",type);
		}
		let orient = this.getConfigValue("orient");
		if(orient != null) {
			el.setAttribute("orient",orient);
		}
		let style = this.getConfigValue("style");
		if(style != null) {
			let styles = style.split(";");
			let _g = 0;
			while(_g < styles.length) {
				let s = styles[_g];
				++_g;
				s = StringTools.trim(s);
				if(s.length == 0) {
					continue;
				}
				let parts = s.split(":");
				if(StringTools.trim(parts[0]).startsWith("-webkit") && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == false) {
					continue;
				}
				el.style.setProperty(StringTools.trim(parts[0]),StringTools.trim(parts[1]));
			}
		}
		return el;
	}
	getConfigValue(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
}
$hxClasses["haxe.ui.backend.html5.native.NativeElement"] = haxe_ui_backend_html5_native_NativeElement;
haxe_ui_backend_html5_native_NativeElement.__name__ = "haxe.ui.backend.html5.native.NativeElement";
Object.assign(haxe_ui_backend_html5_native_NativeElement.prototype, {
	__class__: haxe_ui_backend_html5_native_NativeElement
	,_component: null
	,config: null
});
class haxe_ui_backend_html5_native_LabeledInputElement extends haxe_ui_backend_html5_native_NativeElement {
	constructor(component) {
		super(component);
	}
	create() {
		let type = this.getConfigValue("type","button");
		let input = window.document.createElement("input");
		input.style.display = "inline";
		input.style.verticalAlign = "middle";
		input.style.margin = "0";
		input.style.marginRight = "2px";
		input.type = type;
		let label = window.document.createElement("label");
		label.appendChild(input);
		return label;
	}
}
$hxClasses["haxe.ui.backend.html5.native.LabeledInputElement"] = haxe_ui_backend_html5_native_LabeledInputElement;
haxe_ui_backend_html5_native_LabeledInputElement.__name__ = "haxe.ui.backend.html5.native.LabeledInputElement";
haxe_ui_backend_html5_native_LabeledInputElement.__super__ = haxe_ui_backend_html5_native_NativeElement;
Object.assign(haxe_ui_backend_html5_native_LabeledInputElement.prototype, {
	__class__: haxe_ui_backend_html5_native_LabeledInputElement
});
class haxe_ui_behaviours_Behaviour {
	constructor(component) {
		if(haxe_ui_behaviours_Behaviour._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(component);
	}
	_hx_constructor(component) {
		this.config = null;
		this._component = component;
	}
	set(value) {
	}
	setDynamic(value) {
		this.set(haxe_ui_util_Variant.fromDynamic(value));
	}
	detatch() {
	}
	get() {
		return null;
	}
	getDynamic() {
		return haxe_ui_util_Variant.toDynamic(this.get());
	}
	update() {
	}
	call(param) {
		return null;
	}
	getConfigValue(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	getConfigValueBool(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		let v = defaultValue;
		let s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
}
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
Object.assign(haxe_ui_behaviours_Behaviour.prototype, {
	__class__: haxe_ui_behaviours_Behaviour
	,config: null
	,_component: null
	,id: null
});
class haxe_ui_behaviours_ValueBehaviour extends haxe_ui_behaviours_Behaviour {
	_hx_constructor(component) {
		super._hx_constructor(component);
	}
	get() {
		return this._value;
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
	}
}
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_behaviours_ValueBehaviour.prototype, {
	__class__: haxe_ui_behaviours_ValueBehaviour
	,_value: null
});
class haxe_ui_behaviours_DataBehaviour extends haxe_ui_behaviours_ValueBehaviour {
	_hx_constructor(component) {
		super._hx_constructor(component);
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
	}
	validate() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	invalidateData() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data");
	}
	validateData() {
	}
}
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
Object.assign(haxe_ui_behaviours_DataBehaviour.prototype, {
	__class__: haxe_ui_behaviours_DataBehaviour
	,_dataInvalid: null
});
class haxe_ui_backend_html5_native_behaviours_ElementAttribute extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let el = this._component.element;
		let name = this.getConfigValue("name");
		if(name == null) {
			return;
		}
		el = haxe_ui_backend_html5_HtmlUtils.namedChild(el,this.getConfigValue("child"));
		if(this.getConfigValueBool("remove",false) == true) {
			if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
				el.removeAttribute(name);
			}
			return;
		}
		el.setAttribute(name,haxe_ui_util_Variant.toString(this._value));
		let removeIfNegative = this.getConfigValueBool("removeIfNegative",false);
		if((this._value == null || haxe_ui_util_Variant.get_isBool(this._value) == true && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) && removeIfNegative == true) {
			el.removeAttribute(name);
			return;
		}
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementAttribute"] = haxe_ui_backend_html5_native_behaviours_ElementAttribute;
haxe_ui_backend_html5_native_behaviours_ElementAttribute.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementAttribute";
haxe_ui_backend_html5_native_behaviours_ElementAttribute.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementAttribute.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementAttribute
});
class haxe_ui_backend_html5_native_behaviours_ElementDisabled extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		let el = this._component.element;
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(true))) {
			el.setAttribute("disabled","true");
			let _g = 0;
			let _g1 = el.children;
			while(_g < _g1.length) _g1[_g++].setAttribute("disabled","true");
		} else {
			el.removeAttribute("disabled");
			let _g = 0;
			let _g1 = el.children;
			while(_g < _g1.length) _g1[_g++].removeAttribute("disabled");
		}
	}
	get() {
		return haxe_ui_util_Variant.fromBool(this._component.element.getAttribute("disabled") == "true");
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementDisabled"] = haxe_ui_backend_html5_native_behaviours_ElementDisabled;
haxe_ui_backend_html5_native_behaviours_ElementDisabled.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementDisabled";
haxe_ui_backend_html5_native_behaviours_ElementDisabled.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementDisabled.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementDisabled
});
class haxe_ui_backend_html5_native_behaviours_ElementImage extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		let el = this._component.element;
		let img = null;
		let _gthis = this;
		let list = el.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		} else {
			img = window.document.createElement("img");
			img.style.display = "inline";
			img.style.verticalAlign = "middle";
			img.style.marginTop = "-1px";
			el.appendChild(img);
		}
		new haxe_ui_util_ImageLoader(this._value).load(function(imageInfo) {
			if(imageInfo != null) {
				img.src = imageInfo.data.src;
				let _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
		});
		haxe_ui_ToolkitAssets.get_instance().getImage(haxe_ui_util_Variant.toString(this._value),function(image) {
		});
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementImage"] = haxe_ui_backend_html5_native_behaviours_ElementImage;
haxe_ui_backend_html5_native_behaviours_ElementImage.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementImage";
haxe_ui_backend_html5_native_behaviours_ElementImage.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementImage.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementImage
});
class haxe_ui_backend_html5_native_behaviours_ElementPlaceholder extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		let el = this._component.element;
		if(((el) instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(el , HTMLTextAreaElement)).placeholder = haxe_ui_util_Variant.toString(value);
		} else if(((el) instanceof HTMLInputElement)) {
			(js_Boot.__cast(el , HTMLInputElement)).placeholder = haxe_ui_util_Variant.toString(value);
		}
	}
	get() {
		let el = this._component.element;
		if(((el) instanceof HTMLTextAreaElement)) {
			return haxe_ui_util_Variant.fromString((js_Boot.__cast(el , HTMLTextAreaElement)).placeholder);
		} else if(((el) instanceof HTMLInputElement)) {
			return haxe_ui_util_Variant.fromString((js_Boot.__cast(el , HTMLInputElement)).placeholder);
		} else {
			return null;
		}
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementPlaceholder"] = haxe_ui_backend_html5_native_behaviours_ElementPlaceholder;
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementPlaceholder";
haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementPlaceholder.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementPlaceholder
});
class haxe_ui_backend_html5_native_behaviours_ElementProperty extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		let el = this._component.element;
		let name = this.getConfigValue("name");
		if(name == null) {
			return;
		}
		el = haxe_ui_backend_html5_HtmlUtils.namedChild(el,this.getConfigValue("child"));
		Reflect.setProperty(el,name,haxe_ui_util_Variant.toString(value));
	}
	get() {
		let el = this._component.element;
		let name = this.getConfigValue("name");
		if(name == null) {
			return null;
		}
		el = haxe_ui_backend_html5_HtmlUtils.namedChild(el,this.getConfigValue("child"));
		return haxe_ui_util_Variant.fromDynamic(Reflect.getProperty(el,name));
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementProperty"] = haxe_ui_backend_html5_native_behaviours_ElementProperty;
haxe_ui_backend_html5_native_behaviours_ElementProperty.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementProperty";
haxe_ui_backend_html5_native_behaviours_ElementProperty.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementProperty.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementProperty
});
class haxe_ui_backend_html5_native_behaviours_ElementScrollLeft extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		this._component.element.scrollLeft = haxe_ui_util_Variant.toInt(value);
	}
	get() {
		return haxe_ui_util_Variant.fromInt(this._component.element.scrollLeft);
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementScrollLeft"] = haxe_ui_backend_html5_native_behaviours_ElementScrollLeft;
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementScrollLeft";
haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementScrollLeft.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementScrollLeft
});
class haxe_ui_backend_html5_native_behaviours_ElementScrollTop extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		this._component.element.scrollTop = haxe_ui_util_Variant.toInt(value);
	}
	get() {
		return haxe_ui_util_Variant.fromInt(this._component.element.scrollTop);
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementScrollTop"] = haxe_ui_backend_html5_native_behaviours_ElementScrollTop;
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementScrollTop";
haxe_ui_backend_html5_native_behaviours_ElementScrollTop.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementScrollTop.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementScrollTop
});
class haxe_ui_backend_html5_native_behaviours_ElementText extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		this._component.element.textContent = haxe_ui_util_Variant.toString(value);
	}
	get() {
		return haxe_ui_util_Variant.fromString(this._component.element.textContent);
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementText"] = haxe_ui_backend_html5_native_behaviours_ElementText;
haxe_ui_backend_html5_native_behaviours_ElementText.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementText";
haxe_ui_backend_html5_native_behaviours_ElementText.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementText.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementText
});
class haxe_ui_backend_html5_native_behaviours_ElementValue extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let el = this._component.element;
		if(((el) instanceof HTMLTextAreaElement)) {
			(js_Boot.__cast(el , HTMLTextAreaElement)).value = StringTools.replace(haxe_ui_util_Variant.toString(this._value),"\\n","\n");
		} else {
			el.setAttribute("value",haxe_ui_util_Variant.toString(this._value));
		}
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.ElementValue"] = haxe_ui_backend_html5_native_behaviours_ElementValue;
haxe_ui_backend_html5_native_behaviours_ElementValue.__name__ = "haxe.ui.backend.html5.native.behaviours.ElementValue";
haxe_ui_backend_html5_native_behaviours_ElementValue.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_ElementValue.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_ElementValue
});
class haxe_ui_backend_html5_native_behaviours_RadioGroup extends haxe_ui_backend_html5_native_behaviours_ElementAttribute {
	constructor(component) {
		super(component);
	}
	validateData() {
		super.validateData();
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.RadioGroup"] = haxe_ui_backend_html5_native_behaviours_RadioGroup;
haxe_ui_backend_html5_native_behaviours_RadioGroup.__name__ = "haxe.ui.backend.html5.native.behaviours.RadioGroup";
haxe_ui_backend_html5_native_behaviours_RadioGroup.__super__ = haxe_ui_backend_html5_native_behaviours_ElementAttribute;
Object.assign(haxe_ui_backend_html5_native_behaviours_RadioGroup.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_RadioGroup
});
class haxe_ui_backend_html5_native_behaviours_SelectDataSource extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		let ds = haxe_ui_util_Variant.toDataSource(value);
		let el = this._component.element;
		while(el.childElementCount > 0) el.removeChild(el.children[0]);
		if(ds != null) {
			let _g = 0;
			let _g1 = ds.get_size();
			while(_g < _g1) {
				let item = ds.get(_g++);
				if(item.text != null) {
					let option = window.document.createElement("option");
					option.text = item.text;
					el.appendChild(option);
				}
			}
		}
		this._component.set("dataSource",ds);
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectDataSource"] = haxe_ui_backend_html5_native_behaviours_SelectDataSource;
haxe_ui_backend_html5_native_behaviours_SelectDataSource.__name__ = "haxe.ui.backend.html5.native.behaviours.SelectDataSource";
haxe_ui_backend_html5_native_behaviours_SelectDataSource.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_SelectDataSource.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_SelectDataSource
});
class haxe_ui_backend_html5_native_behaviours_SelectedIndex extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._component.element.nodeName == "SELECT") {
			(js_Boot.__cast(this._component.element , HTMLSelectElement)).selectedIndex = haxe_ui_util_Variant.toInt(this._value);
		}
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectedIndex"] = haxe_ui_backend_html5_native_behaviours_SelectedIndex;
haxe_ui_backend_html5_native_behaviours_SelectedIndex.__name__ = "haxe.ui.backend.html5.native.behaviours.SelectedIndex";
haxe_ui_backend_html5_native_behaviours_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_SelectedIndex.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_SelectedIndex
});
class haxe_ui_backend_html5_native_behaviours_SelectedItem extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	getDynamic() {
		let data = null;
		if(this._component.element.nodeName == "SELECT") {
			if(this._component.has("dataSource") == true) {
				let selectElement = js_Boot.__cast(this._component.element , HTMLSelectElement);
				data = this._component.get("dataSource").get(selectElement.selectedIndex);
			}
		}
		return data;
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.SelectedItem"] = haxe_ui_backend_html5_native_behaviours_SelectedItem;
haxe_ui_backend_html5_native_behaviours_SelectedItem.__name__ = "haxe.ui.backend.html5.native.behaviours.SelectedItem";
haxe_ui_backend_html5_native_behaviours_SelectedItem.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_SelectedItem.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_SelectedItem
});
class haxe_ui_backend_html5_native_behaviours_SpanText extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let el = this._component.element;
		let span = this.getSpan(el);
		let checkbox = this.getInput(el,"checkbox");
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(span);
			if(checkbox != null) {
				checkbox.style.marginTop = "-15px";
			}
			return;
		}
		if(span == null) {
			span = window.document.createElement("span");
			span.style.display = "inline-block";
			span.style.verticalAlign = "middle";
			let style = this.getConfigValue("style");
			if(style != null) {
				let styles = style.split(";");
				let _g = 0;
				while(_g < styles.length) {
					let s = styles[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length == 0) {
						continue;
					}
					let parts = s.split(":");
					span.style.setProperty(StringTools.trim(parts[0]),StringTools.trim(parts[1]));
				}
			}
			if(checkbox != null) {
				checkbox.style.marginTop = "0";
			}
			el.appendChild(span);
		}
		let invalidate = false;
		if(this._component.get_autoWidth() == true) {
			this._component.element.style.width = null;
			invalidate = true;
		}
		if(this._component.get_autoHeight() == true) {
			this._component.element.style.height = null;
			invalidate = true;
		}
		span.textContent = haxe_ui_util_Variant.toString(this._value);
		if(invalidate == true) {
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
	}
	getSpan(el) {
		let span = null;
		let list = el.getElementsByTagName("span");
		if(list.length != 0) {
			span = list.item(0);
		}
		return span;
	}
	getInput(el,type) {
		let input = null;
		let list = el.getElementsByTagName("input");
		if(list.length != 0) {
			let _g = 0;
			let _g1 = list.length;
			while(_g < _g1) {
				let child = list.item(_g++);
				if(((child) instanceof HTMLInputElement) && (js_Boot.__cast(child , HTMLInputElement)).type == type) {
					input = child;
					break;
				}
			}
		}
		return input;
	}
}
$hxClasses["haxe.ui.backend.html5.native.behaviours.SpanText"] = haxe_ui_backend_html5_native_behaviours_SpanText;
haxe_ui_backend_html5_native_behaviours_SpanText.__name__ = "haxe.ui.backend.html5.native.behaviours.SpanText";
haxe_ui_backend_html5_native_behaviours_SpanText.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_backend_html5_native_behaviours_SpanText.prototype, {
	__class__: haxe_ui_backend_html5_native_behaviours_SpanText
});
class haxe_ui_core_CompositeBuilder {
	constructor(component) {
		if(haxe_ui_core_CompositeBuilder._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(component);
	}
	_hx_constructor(component) {
		this._component = component;
	}
	create() {
	}
	destroy() {
	}
	onInitialize() {
	}
	onReady() {
	}
	show() {
		return false;
	}
	hide() {
		return false;
	}
	get_numComponents() {
		return null;
	}
	get_cssName() {
		return null;
	}
	addComponent(child) {
		return null;
	}
	addComponentAt(child,index) {
		return null;
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	removeComponentAt(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	getComponentIndex(child) {
		return -2147483648;
	}
	setComponentIndex(child,index) {
		return null;
	}
	getComponentAt(index) {
		return null;
	}
	validateComponentLayout() {
		return false;
	}
	applyStyle(style) {
	}
	onComponentAdded(child) {
	}
	onComponentRemoved(child) {
	}
	findComponent(criteria,type,recursive,searchType) {
		let _g = 0;
		let _g1 = this.get_numComponents();
		while(_g < _g1) {
			let match = this.getComponentAt(_g++).findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
}
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
Object.assign(haxe_ui_core_CompositeBuilder.prototype, {
	__class__: haxe_ui_core_CompositeBuilder
	,_component: null
	,__properties__: {get_cssName: "get_cssName",get_numComponents: "get_numComponents"}
});
class haxe_ui_backend_html5_native_layouts_ButtonLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	calcAutoSize(exclusions) {
		let textSize = haxe_ui_backend_html5_HtmlUtils.measureText(this.get_component().get_text(),0,0,this.get_component().get_style().fontSize,this.get_component().get_style().fontName);
		let iconCX = this.getIconWidth();
		let iconCY = this.getIconHeight();
		let cx = textSize.width;
		let cy = textSize.height;
		let iconPosition = this.get_component().get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			if(iconCX > cx) {
				cx = iconCX;
			}
			cy += iconCY + this.get_component().get_style().verticalSpacing;
		} else {
			cx += iconCX + this.get_component().get_style().horizontalSpacing;
			if(iconCY > cy) {
				cy = iconCY;
			}
		}
		let size = new haxe_ui_geom_Size(cx,cy);
		size.width += this.get_paddingLeft() + this.get_paddingRight();
		size.height += this.get_paddingTop() + this.get_paddingBottom();
		return size;
	}
	repositionChildren() {
		let el = this.get_component().element;
		if(el.childElementCount == 2) {
			let first = el.firstElementChild;
			let last = el.lastElementChild;
			let _g = this.get_component().get_style().iconPosition;
			if(_g == null) {
				if(((first) instanceof HTMLImageElement) == false) {
					haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
				}
			} else {
				switch(_g) {
				case "bottom":case "right":
					if(((last) instanceof HTMLImageElement) == false) {
						haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
					}
					break;
				case "left":case "top":
					if(((first) instanceof HTMLImageElement) == false) {
						haxe_ui_backend_html5_HtmlUtils.swapElements(first,last);
					}
					break;
				default:
				}
			}
			let img = this.getIcon();
			if(img != null) {
				let _g = this.get_component().get_style().iconPosition;
				if(_g == null) {
					let tmp = "" + this._component.get_style().horizontalSpacing + "px";
					img.style.marginRight = tmp;
				} else {
					switch(_g) {
					case "bottom":
						let tmp = "" + this._component.get_style().verticalSpacing + "px";
						img.style.marginTop = tmp;
						break;
					case "left":
						let tmp1 = "" + this._component.get_style().horizontalSpacing + "px";
						img.style.marginRight = tmp1;
						break;
					case "right":
						let tmp2 = "" + this._component.get_style().horizontalSpacing + "px";
						img.style.marginLeft = tmp2;
						break;
					case "top":
						let tmp3 = "" + this._component.get_style().verticalSpacing + "px";
						img.style.marginBottom = tmp3;
						break;
					default:
						let tmp4 = "" + this._component.get_style().horizontalSpacing + "px";
						img.style.marginRight = tmp4;
					}
				}
			}
			let text = this.getText();
			if(text != null) {
				let _g = this.get_component().get_style().iconPosition;
				if(_g == null) {
					text.style.display = "inline-block";
				} else {
					switch(_g) {
					case "left":case "right":
						text.style.display = "inline-block";
						break;
					case "bottom":case "top":
						text.style.display = "block";
						break;
					default:
					}
				}
			}
		}
	}
	getIconWidth() {
		let cx = 0;
		let icon = this.getIcon();
		if(icon != null) {
			cx = icon.offsetWidth;
		}
		return cx;
	}
	getIconHeight() {
		let cy = 0;
		let icon = this.getIcon();
		if(icon != null) {
			cy = icon.offsetHeight;
		}
		return cy;
	}
	getIcon() {
		let img = null;
		let list = this.get_component().element.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		}
		return img;
	}
	getText() {
		let span = null;
		let list = this.get_component().element.getElementsByTagName("span");
		if(list != null && list.length == 1) {
			span = list.item(0);
		}
		return span;
	}
}
$hxClasses["haxe.ui.backend.html5.native.layouts.ButtonLayout"] = haxe_ui_backend_html5_native_layouts_ButtonLayout;
haxe_ui_backend_html5_native_layouts_ButtonLayout.__name__ = "haxe.ui.backend.html5.native.layouts.ButtonLayout";
haxe_ui_backend_html5_native_layouts_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_backend_html5_native_layouts_ButtonLayout.prototype, {
	__class__: haxe_ui_backend_html5_native_layouts_ButtonLayout
});
class haxe_ui_layouts_DelegateLayoutSize {
	constructor() {
	}
	get_width() {
		return 0;
	}
	get_height() {
		return 0;
	}
	get_usableWidthModifier() {
		return 0;
	}
	get_usableHeightModifier() {
		return 0;
	}
	getString(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	getInt(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		let v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	getBool(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		let v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
}
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
Object.assign(haxe_ui_layouts_DelegateLayoutSize.prototype, {
	__class__: haxe_ui_layouts_DelegateLayoutSize
	,component: null
	,config: null
	,width: null
	,height: null
	,usableWidthModifier: null
	,usableHeightModifier: null
	,__properties__: {get_usableHeightModifier: "get_usableHeightModifier",get_usableWidthModifier: "get_usableWidthModifier",get_height: "get_height",get_width: "get_width"}
});
class haxe_ui_backend_html5_native_size_ButtonSize extends haxe_ui_layouts_DelegateLayoutSize {
	constructor() {
		super();
	}
	get_width() {
		let size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,this.component.get_style().fontSize,this.component.get_style().fontName);
		let iconCX = this.getIconWidth();
		let cx = size.width;
		let iconPosition = this.component.get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			if(iconCX > cx) {
				cx = iconCX;
			}
		} else {
			cx += iconCX + this.component.get_style().horizontalSpacing;
		}
		return cx + this.getInt("incrementWidthBy");
	}
	get_height() {
		let size = haxe_ui_backend_html5_HtmlUtils.measureText(this.component.get_text(),0,0,this.component.get_style().fontSize,this.component.get_style().fontName);
		let iconCY = this.getIconHeight();
		let cy = size.height;
		let iconPosition = this.component.get_style().iconPosition;
		if(iconPosition == "top" || iconPosition == "bottom") {
			cy += iconCY + this.component.get_style().verticalSpacing;
		} else if(iconCY > cy) {
			cy = iconCY;
		}
		return cy + this.getInt("incrementHeightBy");
	}
	getIconWidth() {
		let cx = 0;
		let icon = this.getIcon();
		if(icon != null) {
			cx = icon.offsetWidth;
		}
		return cx;
	}
	getIconHeight() {
		let cy = 0;
		let icon = this.getIcon();
		if(icon != null) {
			cy = icon.offsetHeight;
		}
		return cy;
	}
	getIcon() {
		let img = null;
		let list = this.component.element.getElementsByTagName("img");
		if(list != null && list.length == 1) {
			img = list.item(0);
		}
		return img;
	}
}
$hxClasses["haxe.ui.backend.html5.native.size.ButtonSize"] = haxe_ui_backend_html5_native_size_ButtonSize;
haxe_ui_backend_html5_native_size_ButtonSize.__name__ = "haxe.ui.backend.html5.native.size.ButtonSize";
haxe_ui_backend_html5_native_size_ButtonSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
Object.assign(haxe_ui_backend_html5_native_size_ButtonSize.prototype, {
	__class__: haxe_ui_backend_html5_native_size_ButtonSize
});
class haxe_ui_backend_html5_native_size_ComponentSize extends haxe_ui_layouts_DelegateLayoutSize {
	constructor() {
		super();
	}
	get_width() {
		let w = this.component.get_componentWidth();
		if(w == null || w <= 0) {
			w = this.getInt("defaultWidth");
		}
		return w;
	}
	get_height() {
		let h = this.component.get_componentHeight();
		if(h == null || h <= 0) {
			h = this.getInt("defaultHeight");
		}
		return h;
	}
}
$hxClasses["haxe.ui.backend.html5.native.size.ComponentSize"] = haxe_ui_backend_html5_native_size_ComponentSize;
haxe_ui_backend_html5_native_size_ComponentSize.__name__ = "haxe.ui.backend.html5.native.size.ComponentSize";
haxe_ui_backend_html5_native_size_ComponentSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
Object.assign(haxe_ui_backend_html5_native_size_ComponentSize.prototype, {
	__class__: haxe_ui_backend_html5_native_size_ComponentSize
});
class haxe_ui_backend_html5_native_size_ElementSize extends haxe_ui_layouts_DelegateLayoutSize {
	constructor() {
		super();
	}
	get_width() {
		let w = this.component.element.offsetWidth;
		if(((this.component) instanceof haxe_ui_components_VerticalSlider)) {
			if(w == this.component.element.offsetHeight) {
				w = 21;
			}
		} else if(((this.component) instanceof haxe_ui_components_VerticalProgress)) {
			if(this.component.element.offsetWidth > this.component.element.offsetHeight) {
				w = this.component.element.offsetHeight;
			}
		}
		return w;
	}
	get_height() {
		let h = this.component.element.offsetHeight;
		if(((this.component) instanceof haxe_ui_components_VerticalProgress)) {
			if(this.component.element.offsetWidth > this.component.element.offsetHeight) {
				h = this.component.element.offsetWidth;
			}
		}
		return h;
	}
}
$hxClasses["haxe.ui.backend.html5.native.size.ElementSize"] = haxe_ui_backend_html5_native_size_ElementSize;
haxe_ui_backend_html5_native_size_ElementSize.__name__ = "haxe.ui.backend.html5.native.size.ElementSize";
haxe_ui_backend_html5_native_size_ElementSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
Object.assign(haxe_ui_backend_html5_native_size_ElementSize.prototype, {
	__class__: haxe_ui_backend_html5_native_size_ElementSize
});
class haxe_ui_backend_html5_native_size_FontHeight extends haxe_ui_layouts_DelegateLayoutSize {
	constructor() {
		super();
	}
	get_width() {
		return this.component.get_width();
	}
	get_height() {
		return haxe_ui_backend_html5_HtmlUtils.measureText("|").height + this.getInt("incrementBy");
	}
}
$hxClasses["haxe.ui.backend.html5.native.size.FontHeight"] = haxe_ui_backend_html5_native_size_FontHeight;
haxe_ui_backend_html5_native_size_FontHeight.__name__ = "haxe.ui.backend.html5.native.size.FontHeight";
haxe_ui_backend_html5_native_size_FontHeight.__super__ = haxe_ui_layouts_DelegateLayoutSize;
Object.assign(haxe_ui_backend_html5_native_size_FontHeight.prototype, {
	__class__: haxe_ui_backend_html5_native_size_FontHeight
});
class haxe_ui_backend_html5_native_size_TextSize extends haxe_ui_layouts_DelegateLayoutSize {
	constructor() {
		super();
	}
	get_width() {
		let text = this.component.get_text();
		if(text == null) {
			text = "";
		}
		return haxe_ui_backend_html5_HtmlUtils.measureText(text,0,0,this.component.get_style().fontSize,this.component.get_style().fontName).width + this.getInt("incrementWidthBy");
	}
	get_height() {
		let text = this.component.get_text();
		if(text == null) {
			text = "|";
		}
		return haxe_ui_backend_html5_HtmlUtils.measureText(text,0,0,this.component.get_style().fontSize,this.component.get_style().fontName).height + this.getInt("incrementHeightBy");
	}
}
$hxClasses["haxe.ui.backend.html5.native.size.TextSize"] = haxe_ui_backend_html5_native_size_TextSize;
haxe_ui_backend_html5_native_size_TextSize.__name__ = "haxe.ui.backend.html5.native.size.TextSize";
haxe_ui_backend_html5_native_size_TextSize.__super__ = haxe_ui_layouts_DelegateLayoutSize;
Object.assign(haxe_ui_backend_html5_native_size_TextSize.prototype, {
	__class__: haxe_ui_backend_html5_native_size_TextSize
});
class haxe_ui_backend_html5_util_FontDetect {
	static init() {
		if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
			return;
		}
		haxe_ui_backend_html5_util_FontDetect._initialized = true;
		let body = window.document.body;
		let firstChild = window.document.body.firstChild;
		let div = window.document.createElement("div");
		div.id = "fontdetectHelper";
		haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
		haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
		div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
		body.insertBefore(div,firstChild);
		div.style.position = "absolute";
		div.style.visibility = "hidden";
		div.style.top = "-200px";
		div.style.left = "-100000px";
		div.style.width = "100000px";
		div.style.height = "200px";
		div.style.fontSize = "100px";
	}
	static onFontLoaded(cssFontName,onLoad,onFail,options) {
		if(cssFontName == null) {
			return;
		}
		let msInterval = 10;
		if(options != null && options.msInterval != null) {
			msInterval = options.msInterval;
		}
		let msTimeout = 2000;
		if(options != null && options.msTimeout != null) {
			msTimeout = options.msTimeout;
		}
		if(onLoad == null && onFail == null) {
			return;
		}
		if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
			haxe_ui_backend_html5_util_FontDetect.init();
		}
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		}
		let utStart = new Date().getTime();
		let idInterval = 0;
		idInterval = window.setInterval(function() {
			if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
				window.clearInterval(idInterval);
				if(onLoad != null) {
					onLoad(cssFontName);
				}
				return;
			} else if(new Date().getTime() - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		},msInterval);
	}
	static isFontLoaded(cssFontName) {
		let wThisFont = 0;
		let wPrevFont = 0;
		if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
			haxe_ui_backend_html5_util_FontDetect.init();
		}
		let _g = 0;
		let _g1 = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
		while(_g < _g1) {
			let ix = _g++;
			haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
			wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
			if(ix > 0 && wThisFont != wPrevFont) {
				return false;
			}
			wPrevFont = wThisFont;
		}
		return true;
	}
}
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = "haxe.ui.backend.html5.util.FontDetect";
class haxe_ui_behaviours_DefaultBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return this._value;
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		super.set(value);
	}
}
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_behaviours_DefaultBehaviour.prototype, {
	__class__: haxe_ui_behaviours_DefaultBehaviour
	,_value: null
});
class haxe_ui_behaviours_InvalidatingBehaviour extends haxe_ui_behaviours_ValueBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return this._value;
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		super.set(value);
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
Object.assign(haxe_ui_behaviours_InvalidatingBehaviour.prototype, {
	__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
class haxe_ui_behaviours_LayoutBehaviour extends haxe_ui_behaviours_ValueBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.behaviours.LayoutBehaviour"] = haxe_ui_behaviours_LayoutBehaviour;
haxe_ui_behaviours_LayoutBehaviour.__name__ = "haxe.ui.behaviours.LayoutBehaviour";
haxe_ui_behaviours_LayoutBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
Object.assign(haxe_ui_behaviours_LayoutBehaviour.prototype, {
	__class__: haxe_ui_behaviours_LayoutBehaviour
});
class haxe_ui_binding_PropertyInfo {
	constructor() {
		this.objects = new haxe_ds_StringMap();
		this.languageBinding = false;
	}
	addObject(objectId,objectProp) {
		let array = this.objects.h[objectId];
		if(array == null) {
			array = [];
			this.objects.h[objectId] = array;
		}
		if(array.indexOf(objectProp) == -1) {
			array.push(objectProp);
		}
	}
	reset() {
		this.objects = new haxe_ds_StringMap();
	}
}
$hxClasses["haxe.ui.binding.PropertyInfo"] = haxe_ui_binding_PropertyInfo;
haxe_ui_binding_PropertyInfo.__name__ = "haxe.ui.binding.PropertyInfo";
Object.assign(haxe_ui_binding_PropertyInfo.prototype, {
	__class__: haxe_ui_binding_PropertyInfo
	,name: null
	,script: null
	,languageBinding: null
	,objects: null
});
class haxe_ui_binding_TargetInfo {
	constructor() {
		this.props = new haxe_ds_StringMap();
	}
	addBinding(sourceProp,target,targetProp) {
		let map = this.props.h[sourceProp];
		if(map == null) {
			map = new haxe_ds_ObjectMap();
			this.props.h[sourceProp] = map;
		}
		let array = map.h[target.__id__];
		if(array == null) {
			array = [];
			map.set(target,array);
		}
		array.push(targetProp);
	}
}
$hxClasses["haxe.ui.binding.TargetInfo"] = haxe_ui_binding_TargetInfo;
haxe_ui_binding_TargetInfo.__name__ = "haxe.ui.binding.TargetInfo";
Object.assign(haxe_ui_binding_TargetInfo.prototype, {
	__class__: haxe_ui_binding_TargetInfo
	,props: null
});
class haxe_ui_binding_BindingInfo {
	constructor() {
		this.props = new haxe_ds_StringMap();
	}
	addProp(name,script) {
		let p = this.props.h[name];
		if(p == null) {
			p = new haxe_ui_binding_PropertyInfo();
			p.name = name;
			p.script = script;
			this.props.h[name] = p;
		}
		return p;
	}
}
$hxClasses["haxe.ui.binding.BindingInfo"] = haxe_ui_binding_BindingInfo;
haxe_ui_binding_BindingInfo.__name__ = "haxe.ui.binding.BindingInfo";
Object.assign(haxe_ui_binding_BindingInfo.prototype, {
	__class__: haxe_ui_binding_BindingInfo
	,props: null
});
class haxe_ui_binding_BindingManager {
	constructor() {
		this.interp = new haxe_ui_scripting_ScriptInterp();
		this.addStaticClass("theme",haxe_ui_themes_ThemeManager.get_instance());
		this.addStaticClass("lookupLocaleString",($_=haxe_ui_locale_LocaleManager.get_instance(),$bind($_,$_.lookupString)));
	}
	refreshAll() {
		let c = haxe_ui_binding_BindingManager.bindingInfo.keys();
		while(c.hasNext()) this.refreshFor(c.next());
	}
	refreshFor(c) {
		if(haxe_ui_binding_BindingManager.bindingInfo.h.__keys__[c.__id__] != null == false) {
			return;
		}
		let info = haxe_ui_binding_BindingManager.bindingInfo.h[c.__id__];
		let propName_keys = Object.keys(info.props.h);
		let propName_length = propName_keys.length;
		let propName_current = 0;
		while(propName_current < propName_length) this.handleProp(c,info.props.h[propName_keys[propName_current++]]);
	}
	addStaticClass(name,c) {
		this.interp.variables.h[name] = c;
	}
	add(c,prop,script) {
		let _gthis = this;
		if(c.get_isReady() == false) {
			haxe_ui_Toolkit.callLater(function() {
				_gthis.add(c,prop,script);
			});
			return;
		}
		if(this.hasBindingInfo(c,prop,script) == true) {
			return;
		}
		let n1 = script.indexOf("${");
		while(n1 != -1) {
			let n2 = script.indexOf("}",n1);
			let scriptPart = HxOverrides.substr(script,n1 + 2,n2 - n1 - 2);
			let expr = new hscript_Parser().parseString(scriptPart);
			let info = haxe_ui_binding_BindingManager.bindingInfo.h[c.__id__];
			if(info == null) {
				info = new haxe_ui_binding_BindingInfo();
				haxe_ui_binding_BindingManager.bindingInfo.set(c,info);
			}
			let propInfo = info.addProp(prop,script);
			this.extractFields(expr,propInfo);
			let objectId_keys = Object.keys(propInfo.objects.h);
			let objectId_length = objectId_keys.length;
			let objectId_current = 0;
			while(objectId_current < objectId_length) {
				let objectId = objectId_keys[objectId_current++];
				let _g = 0;
				let _g1 = propInfo.objects.h[objectId];
				while(_g < _g1.length) {
					let fieldId = _g1[_g++];
					let targetInfo = haxe_ui_binding_BindingManager.targets.h[objectId];
					if(targetInfo == null) {
						targetInfo = new haxe_ui_binding_TargetInfo();
						haxe_ui_binding_BindingManager.targets.h[objectId] = targetInfo;
					}
					targetInfo.addBinding(fieldId,c,propInfo);
				}
			}
			this.handleProp(c,propInfo);
			n1 = script.indexOf("${",n2);
		}
	}
	findLanguageBinding(c,prop) {
		let info = haxe_ui_binding_BindingManager.bindingInfo.h[c.__id__];
		if(info == null) {
			return null;
		}
		return info.props.h[prop];
	}
	addLanguageBinding(c,prop,script,overwrite) {
		if(overwrite == null) {
			overwrite = true;
		}
		if(this.hasBindingInfo(c,prop,script) == true && overwrite == false) {
			return;
		}
		let n1 = script.indexOf("{{");
		while(n1 != -1) {
			let n2 = script.indexOf("}}",n1);
			let scriptPart = HxOverrides.substr(script,n1 + 2,n2 - n1 - 2);
			scriptPart = this.buildLocaleScript(scriptPart);
			let expr = new hscript_Parser().parseString(scriptPart);
			let info = haxe_ui_binding_BindingManager.bindingInfo.h[c.__id__];
			if(info == null) {
				info = new haxe_ui_binding_BindingInfo();
				haxe_ui_binding_BindingManager.bindingInfo.set(c,info);
			}
			let propInfo = info.props.h[prop];
			if(propInfo == null) {
				propInfo = info.addProp(prop,script);
			} else {
				propInfo.reset();
				propInfo.script = script;
			}
			propInfo.languageBinding = true;
			this.extractFields(expr,propInfo);
			let objectId_keys = Object.keys(propInfo.objects.h);
			let objectId_length = objectId_keys.length;
			let objectId_current = 0;
			while(objectId_current < objectId_length) {
				let objectId = objectId_keys[objectId_current++];
				let _g = 0;
				let _g1 = propInfo.objects.h[objectId];
				while(_g < _g1.length) {
					let fieldId = _g1[_g++];
					let targetInfo = haxe_ui_binding_BindingManager.targets.h[objectId];
					if(targetInfo == null) {
						targetInfo = new haxe_ui_binding_TargetInfo();
						haxe_ui_binding_BindingManager.targets.h[objectId] = targetInfo;
					}
					targetInfo.addBinding(fieldId,c,propInfo);
				}
			}
			this.handleProp(c,propInfo);
			n1 = script.indexOf("{{",n2);
		}
	}
	remove(c) {
		haxe_ui_binding_BindingManager.bindingInfo.remove(c);
	}
	cloneBinding(from,to) {
		let info = haxe_ui_binding_BindingManager.bindingInfo.h[from.__id__];
		if(info == null) {
			return;
		}
		let prop_keys = Object.keys(info.props.h);
		let prop_length = prop_keys.length;
		let prop_current = 0;
		while(prop_current < prop_length) {
			let prop = prop_keys[prop_current++];
			let propInfo = info.props.h[prop];
			if(propInfo.languageBinding == false) {
				this.add(to,prop,propInfo.script);
			} else {
				this.addLanguageBinding(to,prop,propInfo.script);
			}
		}
	}
	hasBindingInfo(c,prop,script) {
		let info = haxe_ui_binding_BindingManager.bindingInfo.h[c.__id__];
		if(info == null) {
			return false;
		}
		if(Object.prototype.hasOwnProperty.call(info.props.h,prop) == false) {
			return false;
		}
		return info.props.h[prop].script == script;
	}
	isLocaleString(script) {
		return haxe_ui_locale_LocaleManager.get_instance().hasString(StringTools.trim(script.split(",")[0]));
	}
	buildLocaleScript(script) {
		if(script == null) {
			return null;
		}
		if(script.length == 0) {
			return script;
		}
		if(script.startsWith("lookupLocaleString(")) {
			return script;
		}
		let params = script.split(",");
		script = "lookupLocaleString('" + params[0] + "'";
		params.shift();
		if(params.length > 0) {
			script += ",";
			script += params.join(",");
		}
		script += ")";
		return script;
	}
	componentPropChanged(c,prop) {
		if(c == null || c.get_id() == null) {
			return;
		}
		let this1 = haxe_ui_binding_BindingManager.targets;
		let key = c.get_id();
		let targetInfo = this1.h[key];
		if(targetInfo == null) {
			return;
		}
		let map = targetInfo.props.h[prop];
		if(map == null) {
			return;
		}
		let t = map.keys();
		while(t.hasNext()) {
			let t1 = t.next();
			let array = map.h[t1.__id__];
			let _g = 0;
			while(_g < array.length) this.handleProp(t1,array[_g++]);
		}
	}
	handleProp(t,prop) {
		let result = this.interpolate(prop.script,prop,t);
		let currentType = Type.typeof(Reflect.getProperty(t,prop.name));
		if(currentType == ValueType.TFloat) {
			result = parseFloat(Std.string(result));
		} else if(currentType == ValueType.TInt) {
			result = Std.parseInt(Std.string(result));
		} else if(currentType == ValueType.TBool) {
			result = Std.string(result) == "true";
		} else if(haxe_ui_core_TypeMap.getTypeInfo(t.get_className(),prop.name) == "Variant") {
			result = haxe_ui_util_Variant.fromDynamic(result);
		}
		Reflect.setProperty(t,prop.name,result);
	}
	interpolate(s,prop,t) {
		let copy = s;
		copy = StringTools.replace(s,"{{","${");
		copy = StringTools.replace(copy,"}}","}");
		let n1 = copy.indexOf("${");
		while(n1 != -1) {
			let n2 = copy.indexOf("}",n1);
			let before = HxOverrides.substr(copy,0,n1);
			let after = HxOverrides.substr(copy,n2 + 1,copy.length);
			let result = this.exec(HxOverrides.substr(copy,n1 + 2,n2 - n1 - 2),prop,t);
			copy = before + (result == null ? "null" : Std.string(result)) + after;
			n1 = copy.indexOf("${");
		}
		return copy;
	}
	exec(script,prop,t) {
		if(this.isLocaleString(script)) {
			script = this.buildLocaleScript(script);
		}
		let expr = new hscript_Parser().parseString(script);
		let root = this.findRoot(t);
		let objectId_keys = Object.keys(prop.objects.h);
		let objectId_length = objectId_keys.length;
		let objectId_current = 0;
		while(objectId_current < objectId_length) {
			let objectId = objectId_keys[objectId_current++];
			let object = root.findComponent(objectId);
			if(object != null) {
				this.interp.variables.h[objectId] = object;
			}
		}
		this.interp.variables.h["this"] = t;
		let result = null;
		try {
			result = this.interp.expr(expr);
		} catch( _g ) {
		}
		return result;
	}
	findRoot(c) {
		let root = c;
		let ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	extractFields(expr,propInfo) {
		switch(expr._hx_index) {
		case 0:
			break;
		case 1:
			propInfo.addObject(expr.v,"value");
			break;
		case 5:
			let _g = expr.e;
			let _g1 = expr.f;
			switch(_g._hx_index) {
			case 1:
				propInfo.addObject(_g.v,_g1);
				break;
			case 5:
				let _g2 = _g.e;
				if(_g2._hx_index == 1) {
					propInfo.addObject(_g2.v,_g.f);
				} else {
					haxe_Log.trace(expr,{ fileName : "haxe/ui/binding/BindingManager.hx", lineNumber : 403, className : "haxe.ui.binding.BindingManager", methodName : "extractFields"});
				}
				break;
			default:
				haxe_Log.trace(expr,{ fileName : "haxe/ui/binding/BindingManager.hx", lineNumber : 403, className : "haxe.ui.binding.BindingManager", methodName : "extractFields"});
			}
			break;
		case 6:
			this.extractFields(expr.e1,propInfo);
			this.extractFields(expr.e2,propInfo);
			break;
		case 7:
			this.extractFields(expr.e,propInfo);
			break;
		case 8:
			let _g3 = expr.params;
			let _g4 = 0;
			while(_g4 < _g3.length) this.extractFields(_g3[_g4++],propInfo);
			break;
		case 17:
			let _g5 = expr.e;
			let _g6 = 0;
			while(_g6 < _g5.length) this.extractFields(_g5[_g6++],propInfo);
			break;
		default:
			haxe_Log.trace(expr,{ fileName : "haxe/ui/binding/BindingManager.hx", lineNumber : 403, className : "haxe.ui.binding.BindingManager", methodName : "extractFields"});
		}
	}
	static get_instance() {
		if(haxe_ui_binding_BindingManager._instance == null) {
			haxe_ui_binding_BindingManager._instance = new haxe_ui_binding_BindingManager();
		}
		return haxe_ui_binding_BindingManager._instance;
	}
}
$hxClasses["haxe.ui.binding.BindingManager"] = haxe_ui_binding_BindingManager;
haxe_ui_binding_BindingManager.__name__ = "haxe.ui.binding.BindingManager";
haxe_ui_binding_BindingManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_binding_BindingManager.prototype, {
	__class__: haxe_ui_binding_BindingManager
	,interp: null
});
class haxe_ui_focus_IFocusable {
}
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
Object.assign(haxe_ui_focus_IFocusable.prototype, {
	__class__: haxe_ui_focus_IFocusable
	,get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,__properties__: {set_allowFocus: "set_allowFocus",get_allowFocus: "get_allowFocus",set_focus: "set_focus",get_focus: "get_focus"}
});
class haxe_ui_core_InteractiveComponent extends haxe_ui_core_Component {
	constructor() {
		if(haxe_ui_backend_ComponentSurface._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._allowFocus = true;
		this._focus = false;
		super._hx_constructor();
	}
	get_focus() {
		return this._focus;
	}
	set_focus(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		let eventType = null;
		if(this._focus == true) {
			this.addClass(":active");
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			let scrollview = this.findAncestor(null,haxe_ui_containers_ScrollView);
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			this.removeClass(":active");
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data");
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	get_allowFocus() {
		return this._allowFocus;
	}
	set_allowFocus(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		let _g = 0;
		let _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("allowInteraction",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
	}
	get_allowInteraction() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowInteraction"));
	}
	set_allowInteraction(value) {
		this.behaviours.set("allowInteraction",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"allowInteraction"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"allowInteraction");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_allowInteraction(this.get_allowInteraction());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_InteractiveComponent();
	}
}
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_core_InteractiveComponent.prototype, {
	__class__: haxe_ui_core_InteractiveComponent
	,_focus: null
	,_allowFocus: null
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_allowInteraction: "set_allowInteraction",get_allowInteraction: "get_allowInteraction",set_allowFocus: "set_allowFocus",get_allowFocus: "get_allowFocus",set_focus: "set_focus",get_focus: "get_focus"})
});
class haxe_ui_components_Button extends haxe_ui_core_InteractiveComponent {
	_hx_constructor() {
		super._hx_constructor();
	}
	applyStyle(style) {
		super.applyStyle(style);
		if(style.icon != null) {
			this.set_icon(haxe_ui_util_Variant.fromString(style.icon));
		}
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(50));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
	}
	get_repeater() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	set_repeater(value) {
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeater"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeater");
		return value;
	}
	get_repeatInterval() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	set_repeatInterval(value) {
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeatInterval"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeatInterval");
		return value;
	}
	get_easeInRepeater() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("easeInRepeater"));
	}
	set_easeInRepeater(value) {
		this.behaviours.set("easeInRepeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"easeInRepeater"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"easeInRepeater");
		return value;
	}
	get_remainPressed() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("remainPressed"));
	}
	set_remainPressed(value) {
		this.behaviours.set("remainPressed",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"remainPressed"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"remainPressed");
		return value;
	}
	get_toggle() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	set_toggle(value) {
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"toggle"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"toggle");
		return value;
	}
	get_selected() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	set_selected(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	get_icon() {
		return this.behaviours.get("icon");
	}
	set_icon(value) {
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"icon");
		return value;
	}
	get_value() {
		return this.get_text();
	}
	set_value(value) {
		this.set_text(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	set_iconPosition(value) {
		if(this.customStyle.iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		this.customStyle.iconPosition = value;
		this.invalidateComponent("style");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		return value;
	}
	get_textAlign() {
		if(this.customStyle.textAlign != null) {
			return this.customStyle.textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Button();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
}
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_Button.prototype, {
	__class__: haxe_ui_components_Button
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {get_textAlign: "get_textAlign",set_iconPosition: "set_iconPosition",set_icon: "set_icon",get_icon: "get_icon",set_selected: "set_selected",get_selected: "get_selected",set_toggle: "set_toggle",get_toggle: "get_toggle",set_remainPressed: "set_remainPressed",get_remainPressed: "get_remainPressed",set_easeInRepeater: "set_easeInRepeater",get_easeInRepeater: "get_easeInRepeater",set_repeatInterval: "set_repeatInterval",get_repeatInterval: "get_repeatInterval",set_repeater: "set_repeater",get_repeater: "get_repeater"})
});
class haxe_ui_components_ButtonLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	get_iconPosition() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	resizeChildren() {
		super.resizeChildren();
		let label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		let icon = this.get_component().findComponent("button-icon",null,false);
		if(this._component.get_autoWidth() == false) {
			let ucx = this.get_usableSize();
			if(label != null) {
				let cx = ucx.width;
				if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
					cx -= icon.get_width() + this.get_verticalSpacing();
				}
				label.set_width(cx);
			}
		}
	}
	repositionChildren() {
		super.repositionChildren();
		let label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		let icon = this.get_component().findComponent("button-icon",null,false);
		switch(this.get_iconPosition()) {
		case "far-left":
			if(label != null && icon != null) {
				let x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				let cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				let x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				let cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				let x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
					x += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				let cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				let y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	getTextAlignPos(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
}
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components_ButtonLayout.prototype, {
	__class__: haxe_ui_components_ButtonLayout
	,iconPosition: null
	,__properties__: Object.assign({}, haxe_ui_layouts_DefaultLayout.prototype.__properties__, {get_iconPosition: "get_iconPosition"})
});
class haxe_ui_components__$Button_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("button-label");
			label.scriptAccess = false;
			this._component.addComponent(label);
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Button_TextBehaviour.prototype, {
	__class__: haxe_ui_components__$Button_TextBehaviour
});
class haxe_ui_components__$Button_IconBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let icon = this._component.findComponent("button-icon",null,false);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.scriptAccess = false;
			this._component.addComponentAt(icon,0);
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		}
		icon.set_resource(this._value);
	}
}
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Button_IconBehaviour.prototype, {
	__class__: haxe_ui_components__$Button_IconBehaviour
});
class haxe_ui_components__$Button_ToggleBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return this._value;
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(this._value,value)) {
			return;
		}
		this._value = value;
		let button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
}
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Button_ToggleBehaviour.prototype, {
	__class__: haxe_ui_components__$Button_ToggleBehaviour
	,_value: null
});
class haxe_ui_components__$Button_SelectedBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			button.removeClass(":down",true,true);
		} else {
			button.addClass(":down",true,true);
		}
		let events = js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents);
		if(events.lastMouseEvent != null && button.hitTest(events.lastMouseEvent.screenX,events.lastMouseEvent.screenY)) {
			button.addClass(":hover",true,true);
			events.lastMouseEvent = null;
		} else {
			button.removeClass(":hover",true,true);
		}
		events.dispatchChanged();
	}
}
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Button_SelectedBehaviour.prototype, {
	__class__: haxe_ui_components__$Button_SelectedBehaviour
});
class haxe_ui_events_Events {
	constructor(target) {
		if(haxe_ui_events_Events._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(target);
	}
	_hx_constructor(target) {
		this._target = target;
	}
	register() {
	}
	unregister() {
	}
	registerEvent(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	hasEvent(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	unregisterEvent(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	dispatch(event) {
		this._target.dispatch(event);
	}
}
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
Object.assign(haxe_ui_events_Events.prototype, {
	__class__: haxe_ui_events_Events
	,_target: null
});
class haxe_ui_components_ButtonEvents extends haxe_ui_events_Events {
	constructor(button) {
		if(haxe_ui_events_Events._hx_skip_constructor) {
			super();
			return;
		}
		haxe_ui_events_Events._hx_skip_constructor = true;
		super();
		haxe_ui_events_Events._hx_skip_constructor = false;
		this._hx_constructor(button);
	}
	_hx_constructor(button) {
		this._lastScreenEvent = null;
		this.lastMouseEvent = null;
		this._repeatInterval = 0;
		this._repeater = false;
		this._down = false;
		super._hx_constructor(button);
		this._button = button;
	}
	register() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("move",$bind(this,this.onMove)) == false) {
			this.registerEvent("move",$bind(this,this.onMove));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick));
		}
	}
	unregister() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
		this.unregisterEvent("move",$bind(this,this.onMove));
	}
	onMouseOver(event) {
		if(this._button.get_toggle() == true && this._button.hasClass(":down")) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover",true,true);
		} else {
			this._button.addClass(":down",true,true);
		}
	}
	onMouseOut(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down",true,true);
		}
		this._button.removeClass(":hover",true,true);
	}
	onMouseDown(event) {
		if(haxe_ui_focus_FocusManager.get_instance().get_focusInfo() != null && haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus != null) {
			haxe_ui_focus_FocusManager.get_instance().get_focusInfo().currentFocus.set_focus(false);
		}
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down",true,true);
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		let _gthis = this;
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						let tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	onMouseUp(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._lastScreenEvent = event;
		this._button.removeClass(":down",true,true);
		let over = this._button.hitTest(event.screenX,event.screenY);
		if(event.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,true);
		} else if(over == false) {
			this._button.removeClass(":hover",true,true);
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	onMove(event) {
		if(this._lastScreenEvent == null) {
			return;
		}
		let over = this._button.hitTest(this._lastScreenEvent.screenX,this._lastScreenEvent.screenY);
		if(this._lastScreenEvent.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,true);
		} else if(over == false) {
			this._button.removeClass(":hover",true,true);
		}
		this._lastScreenEvent = null;
	}
	onRepeatTimer() {
		if(this._button.hasClass(":hover") && this._down == true) {
			this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
		}
	}
	onMouseClick(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down",true,true);
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover",true,true);
		}
	}
	dispatchChanged() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components_ButtonEvents.prototype, {
	__class__: haxe_ui_components_ButtonEvents
	,_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,lastMouseEvent: null
	,_lastScreenEvent: null
});
class haxe_ui_components_ButtonBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(button) {
		super(button);
		this._button = button;
	}
	applyStyle(style) {
		let label = this._button.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor || label.customStyle.textAlign != style.textAlign)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.customStyle.textAlign = style.textAlign;
			label.invalidateComponent("style");
		}
		let icon = this._button.findComponent("button-icon",null,false);
		if(icon != null && icon.customStyle.cursor != style.cursor) {
			icon.customStyle.cursor = style.cursor;
			icon.invalidateComponent("style");
		}
	}
}
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components_ButtonBuilder.prototype, {
	__class__: haxe_ui_components_ButtonBuilder
	,_button: null
});
class haxe_ui_events_UIEvent extends haxe_ui_backend_EventImpl {
	constructor(type,bubble,data) {
		super();
		if(haxe_ui_events_UIEvent._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(type,bubble,data);
	}
	_hx_constructor(type,bubble,data) {
		if(bubble == null) {
			bubble = false;
		}
		this.type = type;
		this.bubble = bubble;
		this.data = data;
		this.canceled = false;
	}
	cancel() {
		super.cancel();
		this.canceled = true;
	}
	clone() {
		let c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
Object.assign(haxe_ui_events_UIEvent.prototype, {
	__class__: haxe_ui_events_UIEvent
	,bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
});
class haxe_ui_components_CalendarEvent extends haxe_ui_events_UIEvent {
	constructor(type,bubble,data) {
		super(type,bubble,data);
	}
}
$hxClasses["haxe.ui.components.CalendarEvent"] = haxe_ui_components_CalendarEvent;
haxe_ui_components_CalendarEvent.__name__ = "haxe.ui.components.CalendarEvent";
haxe_ui_components_CalendarEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_components_CalendarEvent.prototype, {
	__class__: haxe_ui_components_CalendarEvent
});
class haxe_ui_containers_Grid extends haxe_ui_containers_Box {
	constructor() {
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._columns = -1;
		super._hx_constructor();
		if(this._columns == -1) {
			this.set_columns(2);
		}
	}
	get_columns() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	set_columns(value) {
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		this._columns = value;
		return value;
	}
	createDefaults() {
		super.createDefaults();
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_columns(this.get_columns());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Grid();
	}
}
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = "haxe.ui.containers.Grid";
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_Grid.prototype, {
	__class__: haxe_ui_containers_Grid
	,_columns: null
	,__properties__: Object.assign({}, haxe_ui_containers_Box.prototype.__properties__, {set_columns: "set_columns",get_columns: "get_columns"})
});
class haxe_ui_components_Calendar extends haxe_ui_containers_Grid {
	constructor() {
		super();
	}
	previousMonth() {
		return this.behaviours.call("previousMonth",null);
	}
	nextMonth() {
		return this.behaviours.call("nextMonth",null);
	}
	previousYear() {
		return this.behaviours.call("previousYear",null);
	}
	nextYear() {
		return this.behaviours.call("nextYear",null);
	}
	createDefaults() {
		super.createDefaults();
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components__$Calendar_Events;
		this._compositeBuilderClass = haxe_ui_components__$Calendar_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("date",haxe_ui_components__$Calendar_DateBehaviour);
		this.behaviours.register("selectedDate",haxe_ui_components__$Calendar_SelectedDateBehaviour);
		this.behaviours.register("previousMonth",haxe_ui_components__$Calendar_PreviousMonthBehaviour);
		this.behaviours.register("nextMonth",haxe_ui_components__$Calendar_NextMonthBehaviour);
		this.behaviours.register("previousYear",haxe_ui_components__$Calendar_PreviousYearBehaviour);
		this.behaviours.register("nextYear",haxe_ui_components__$Calendar_NextYearBehaviour);
	}
	get_date() {
		return haxe_ui_util_Variant.toDate(this.behaviours.get("date"));
	}
	set_date(value) {
		this.behaviours.set("date",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"date"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"date");
		return value;
	}
	get_selectedDate() {
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	set_selectedDate(value) {
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedDate"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedDate");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_date() != null) {
			c.set_date(this.get_date());
		}
		if(this.get_selectedDate() != null) {
			c.set_selectedDate(this.get_selectedDate());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Calendar();
	}
}
$hxClasses["haxe.ui.components.Calendar"] = haxe_ui_components_Calendar;
haxe_ui_components_Calendar.__name__ = "haxe.ui.components.Calendar";
haxe_ui_components_Calendar.__super__ = haxe_ui_containers_Grid;
Object.assign(haxe_ui_components_Calendar.prototype, {
	__class__: haxe_ui_components_Calendar
	,__properties__: Object.assign({}, haxe_ui_containers_Grid.prototype.__properties__, {set_selectedDate: "set_selectedDate",get_selectedDate: "get_selectedDate",set_date: "set_date",get_date: "get_date"})
});
class haxe_ui_components__$Calendar_PreviousMonthBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousMonth(calendar.get_date()));
		return null;
	}
}
$hxClasses["haxe.ui.components._Calendar.PreviousMonthBehaviour"] = haxe_ui_components__$Calendar_PreviousMonthBehaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousMonthBehaviour";
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Calendar_PreviousMonthBehaviour.prototype, {
	__class__: haxe_ui_components__$Calendar_PreviousMonthBehaviour
});
class haxe_ui_components__$Calendar_NextMonthBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextMonth(calendar.get_date()));
		return null;
	}
}
$hxClasses["haxe.ui.components._Calendar.NextMonthBehaviour"] = haxe_ui_components__$Calendar_NextMonthBehaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.__name__ = "haxe.ui.components._Calendar.NextMonthBehaviour";
haxe_ui_components__$Calendar_NextMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Calendar_NextMonthBehaviour.prototype, {
	__class__: haxe_ui_components__$Calendar_NextMonthBehaviour
});
class haxe_ui_components__$Calendar_PreviousYearBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousYear(calendar.get_date()));
		return null;
	}
}
$hxClasses["haxe.ui.components._Calendar.PreviousYearBehaviour"] = haxe_ui_components__$Calendar_PreviousYearBehaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousYearBehaviour";
haxe_ui_components__$Calendar_PreviousYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Calendar_PreviousYearBehaviour.prototype, {
	__class__: haxe_ui_components__$Calendar_PreviousYearBehaviour
});
class haxe_ui_components__$Calendar_NextYearBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextYear(calendar.get_date()));
		return null;
	}
}
$hxClasses["haxe.ui.components._Calendar.NextYearBehaviour"] = haxe_ui_components__$Calendar_NextYearBehaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.__name__ = "haxe.ui.components._Calendar.NextYearBehaviour";
haxe_ui_components__$Calendar_NextYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Calendar_NextYearBehaviour.prototype, {
	__class__: haxe_ui_components__$Calendar_NextYearBehaviour
});
class haxe_ui_components__$Calendar_SelectedDateBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		super.set(value);
		let date = haxe_ui_util_Variant.toDate(value);
		this._component.invalidateComponent("data");
		(js_Boot.__cast(this._component , haxe_ui_components_Calendar)).set_date(date);
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._Calendar.SelectedDateBehaviour"] = haxe_ui_components__$Calendar_SelectedDateBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.__name__ = "haxe.ui.components._Calendar.SelectedDateBehaviour";
haxe_ui_components__$Calendar_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$Calendar_SelectedDateBehaviour.prototype, {
	__class__: haxe_ui_components__$Calendar_SelectedDateBehaviour
});
class haxe_ui_components__$Calendar_DateBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let date = haxe_ui_util_Variant.toDate(this._value);
		if(date == null) {
			return;
		}
		let year = date.getFullYear();
		let month = date.getMonth();
		let startDay = new Date(year,month,1,0,0,0).getDay();
		let endDay = haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year);
		let _g = 0;
		let _this = this._component;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			child.set_opacity(.3);
			child.removeClass("calendar-off-day");
			child.removeClass("calendar-day");
			child.removeClass("calendar-day-selected");
			child.removeClass(":hover");
		}
		let prevMonth = haxe_ui_components__$Calendar_DateUtils.previousMonth(date);
		let last = haxe_ui_components__$Calendar_DateUtils.getEndDay(prevMonth.getMonth(),prevMonth.getFullYear());
		let n = startDay - 1;
		let _g2 = 0;
		while(_g2 < startDay) {
			++_g2;
			let _this = this._component;
			let item = (_this._children == null ? [] : _this._children)[n];
			item.addClass("calendar-off-day");
			--n;
			item.set_text("" + last);
			--last;
		}
		let selectedDate = (js_Boot.__cast(this._component , haxe_ui_components_Calendar)).get_selectedDate();
		if(selectedDate == null) {
			selectedDate = new Date();
		}
		let _g3 = 0;
		while(_g3 < endDay) {
			let i = _g3++;
			let _this = this._component;
			let item = (_this._children == null ? [] : _this._children)[i + startDay];
			item.addClass("calendar-day");
			item.set_opacity(1);
			item.set_hidden(false);
			item.set_text("" + (i + 1));
			if(i + 1 == selectedDate.getDate() && month == selectedDate.getMonth() && year == selectedDate.getFullYear()) {
				item.addClass("calendar-day-selected");
			}
			last = i + startDay;
		}
		++last;
		let n1 = 0;
		let _g4 = last;
		let _this1 = this._component;
		let _g5 = (_this1._children == null ? [] : _this1._children).length;
		while(_g4 < _g5) {
			let i = _g4++;
			let _this = this._component;
			let item = (_this._children == null ? [] : _this._children)[i];
			item.addClass("calendar-off-day");
			item.set_text("" + (n1 + 1));
			++n1;
		}
		this._component.registerInternalEvents(null,true);
		this._component.dispatch(new haxe_ui_components_CalendarEvent("datechange"));
	}
}
$hxClasses["haxe.ui.components._Calendar.DateBehaviour"] = haxe_ui_components__$Calendar_DateBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.__name__ = "haxe.ui.components._Calendar.DateBehaviour";
haxe_ui_components__$Calendar_DateBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Calendar_DateBehaviour.prototype, {
	__class__: haxe_ui_components__$Calendar_DateBehaviour
});
class haxe_ui_components__$Calendar_DateUtils {
	static getEndDay(month,year) {
		let endDay = -1;
		switch(month) {
		case 1:
			if(year % 400 == 0 || year % 100 != 0 && year % 4 == 0) {
				endDay = 29;
			} else {
				endDay = 28;
			}
			break;
		case 3:case 5:case 8:case 10:
			endDay = 30;
			break;
		default:
			endDay = 31;
		}
		return endDay;
	}
	static previousMonth(date) {
		let year = date.getFullYear();
		let month = date.getMonth();
		let day = date.getDate();
		--month;
		if(month < 0) {
			month = 11;
			--year;
		}
		day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
		date = new Date(year,month,day,0,0,0);
		return date;
	}
	static nextMonth(date) {
		let year = date.getFullYear();
		let month = date.getMonth();
		let day = date.getDate();
		++month;
		if(month > 11) {
			month = 0;
			++year;
		}
		day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
		date = new Date(year,month,day,0,0,0);
		return date;
	}
	static previousYear(date) {
		let year = date.getFullYear();
		let month = date.getMonth();
		let day = date.getDate();
		--year;
		day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
		date = new Date(year,month,day,0,0,0);
		return date;
	}
	static nextYear(date) {
		let year = date.getFullYear();
		let month = date.getMonth();
		let day = date.getDate();
		++year;
		day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
		date = new Date(year,month,day,0,0,0);
		return date;
	}
}
$hxClasses["haxe.ui.components._Calendar.DateUtils"] = haxe_ui_components__$Calendar_DateUtils;
haxe_ui_components__$Calendar_DateUtils.__name__ = "haxe.ui.components._Calendar.DateUtils";
class haxe_ui_components__$Calendar_Events extends haxe_ui_events_Events {
	constructor(target) {
		super(target);
	}
	register() {
		this.unregister();
		let _g = 0;
		let _this = this._target;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.hasEvent("click",$bind(this,this.onDayClicked)) == false && child.hasClass("calendar-day")) {
				child.registerEvent("click",$bind(this,this.onDayClicked));
			}
		}
	}
	unregister() {
		let _g = 0;
		let _this = this._target;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) _g1[_g++].unregisterEvent("click",$bind(this,this.onDayClicked));
	}
	onDayClicked(event) {
		let calendar = js_Boot.__cast(this._target , haxe_ui_components_Calendar);
		let day = Std.parseInt(event.target.get_text());
		let month = calendar.get_date().getMonth();
		calendar.set_selectedDate(new Date(calendar.get_date().getFullYear(),month,day,0,0,0));
	}
}
$hxClasses["haxe.ui.components._Calendar.Events"] = haxe_ui_components__$Calendar_Events;
haxe_ui_components__$Calendar_Events.__name__ = "haxe.ui.components._Calendar.Events";
haxe_ui_components__$Calendar_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$Calendar_Events.prototype, {
	__class__: haxe_ui_components__$Calendar_Events
});
class haxe_ui_components__$Calendar_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(calendar) {
		super(calendar);
		this._calendar = calendar;
	}
	create() {
		this._calendar.set_columns(7);
		let item = new haxe_ui_components_Button();
		item.scriptAccess = false;
		this._calendar.addComponent(item);
		let item1 = new haxe_ui_components_Button();
		item1.scriptAccess = false;
		this._calendar.addComponent(item1);
		let item2 = new haxe_ui_components_Button();
		item2.scriptAccess = false;
		this._calendar.addComponent(item2);
		let item3 = new haxe_ui_components_Button();
		item3.scriptAccess = false;
		this._calendar.addComponent(item3);
		let item4 = new haxe_ui_components_Button();
		item4.scriptAccess = false;
		this._calendar.addComponent(item4);
		let item5 = new haxe_ui_components_Button();
		item5.scriptAccess = false;
		this._calendar.addComponent(item5);
		let item6 = new haxe_ui_components_Button();
		item6.scriptAccess = false;
		this._calendar.addComponent(item6);
		let item7 = new haxe_ui_components_Button();
		item7.scriptAccess = false;
		this._calendar.addComponent(item7);
		let item8 = new haxe_ui_components_Button();
		item8.scriptAccess = false;
		this._calendar.addComponent(item8);
		let item9 = new haxe_ui_components_Button();
		item9.scriptAccess = false;
		this._calendar.addComponent(item9);
		let item10 = new haxe_ui_components_Button();
		item10.scriptAccess = false;
		this._calendar.addComponent(item10);
		let item11 = new haxe_ui_components_Button();
		item11.scriptAccess = false;
		this._calendar.addComponent(item11);
		let item12 = new haxe_ui_components_Button();
		item12.scriptAccess = false;
		this._calendar.addComponent(item12);
		let item13 = new haxe_ui_components_Button();
		item13.scriptAccess = false;
		this._calendar.addComponent(item13);
		let item14 = new haxe_ui_components_Button();
		item14.scriptAccess = false;
		this._calendar.addComponent(item14);
		let item15 = new haxe_ui_components_Button();
		item15.scriptAccess = false;
		this._calendar.addComponent(item15);
		let item16 = new haxe_ui_components_Button();
		item16.scriptAccess = false;
		this._calendar.addComponent(item16);
		let item17 = new haxe_ui_components_Button();
		item17.scriptAccess = false;
		this._calendar.addComponent(item17);
		let item18 = new haxe_ui_components_Button();
		item18.scriptAccess = false;
		this._calendar.addComponent(item18);
		let item19 = new haxe_ui_components_Button();
		item19.scriptAccess = false;
		this._calendar.addComponent(item19);
		let item20 = new haxe_ui_components_Button();
		item20.scriptAccess = false;
		this._calendar.addComponent(item20);
		let item21 = new haxe_ui_components_Button();
		item21.scriptAccess = false;
		this._calendar.addComponent(item21);
		let item22 = new haxe_ui_components_Button();
		item22.scriptAccess = false;
		this._calendar.addComponent(item22);
		let item23 = new haxe_ui_components_Button();
		item23.scriptAccess = false;
		this._calendar.addComponent(item23);
		let item24 = new haxe_ui_components_Button();
		item24.scriptAccess = false;
		this._calendar.addComponent(item24);
		let item25 = new haxe_ui_components_Button();
		item25.scriptAccess = false;
		this._calendar.addComponent(item25);
		let item26 = new haxe_ui_components_Button();
		item26.scriptAccess = false;
		this._calendar.addComponent(item26);
		let item27 = new haxe_ui_components_Button();
		item27.scriptAccess = false;
		this._calendar.addComponent(item27);
		let item28 = new haxe_ui_components_Button();
		item28.scriptAccess = false;
		this._calendar.addComponent(item28);
		let item29 = new haxe_ui_components_Button();
		item29.scriptAccess = false;
		this._calendar.addComponent(item29);
		let item30 = new haxe_ui_components_Button();
		item30.scriptAccess = false;
		this._calendar.addComponent(item30);
		let item31 = new haxe_ui_components_Button();
		item31.scriptAccess = false;
		this._calendar.addComponent(item31);
		let item32 = new haxe_ui_components_Button();
		item32.scriptAccess = false;
		this._calendar.addComponent(item32);
		let item33 = new haxe_ui_components_Button();
		item33.scriptAccess = false;
		this._calendar.addComponent(item33);
		let item34 = new haxe_ui_components_Button();
		item34.scriptAccess = false;
		this._calendar.addComponent(item34);
		let item35 = new haxe_ui_components_Button();
		item35.scriptAccess = false;
		this._calendar.addComponent(item35);
		let item36 = new haxe_ui_components_Button();
		item36.scriptAccess = false;
		this._calendar.addComponent(item36);
		let item37 = new haxe_ui_components_Button();
		item37.scriptAccess = false;
		this._calendar.addComponent(item37);
		let item38 = new haxe_ui_components_Button();
		item38.scriptAccess = false;
		this._calendar.addComponent(item38);
		let item39 = new haxe_ui_components_Button();
		item39.scriptAccess = false;
		this._calendar.addComponent(item39);
		let item40 = new haxe_ui_components_Button();
		item40.scriptAccess = false;
		this._calendar.addComponent(item40);
		let item41 = new haxe_ui_components_Button();
		item41.scriptAccess = false;
		this._calendar.addComponent(item41);
		this._calendar.set_date(new Date());
	}
}
$hxClasses["haxe.ui.components._Calendar.Builder"] = haxe_ui_components__$Calendar_Builder;
haxe_ui_components__$Calendar_Builder.__name__ = "haxe.ui.components._Calendar.Builder";
haxe_ui_components__$Calendar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$Calendar_Builder.prototype, {
	__class__: haxe_ui_components__$Calendar_Builder
	,_calendar: null
});
class haxe_ui_layouts_VerticalGridLayout extends haxe_ui_layouts_Layout {
	constructor() {
		haxe_ui_layouts_Layout._hx_skip_constructor = true;
		super();
		haxe_ui_layouts_Layout._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._columns = 1;
		super._hx_constructor();
	}
	get_columns() {
		return this._columns;
	}
	set_columns(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let columnWidths = this.calcColumnWidths(size,false);
		let rowHeights = this.calcRowHeights(size,false);
		let _g = 0;
		while(_g < columnWidths.length) size.width -= columnWidths[_g++];
		let _g1 = 0;
		while(_g1 < rowHeights.length) size.height -= rowHeights[_g1++];
		let _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			let _this = this.get_component();
			let rows = Math.ceil((_this._children == null ? [] : _this._children).length / this.get_columns());
			let c = this.get_columns();
			let _this1 = this.get_component();
			let c1 = Math.min(c,(_this1._children == null ? [] : _this1._children).length);
			size.width -= this.get_horizontalSpacing() * (c1 - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	resizeChildren() {
		let size = this.get_usableSize();
		let columnWidths = this.calcColumnWidths(size,true);
		let rowHeights = this.calcRowHeights(size,true);
		let explicitWidths = this.calcExplicitWidths();
		let explicitHeights = this.calcExplicitHeights();
		let rowIndex = 0;
		let columnIndex = 0;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let cx = null;
			let cy = null;
			if(child.get_percentWidth() != null) {
				let ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				let ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	repositionChildren() {
		let size = this.get_usableSize();
		let columnWidths = this.calcColumnWidths(size,true);
		let rowHeights = this.calcRowHeights(size,true);
		let rowIndex = 0;
		let columnIndex = 0;
		let xpos = this.get_paddingLeft();
		let ypos = this.get_paddingTop();
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let halign = this.horizontalAlign(child);
			let valign = this.verticalAlign(child);
			let xposChild = 0;
			let yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	calcColumnWidths(usableSize,includePercentage) {
		let columnWidths = [];
		let _g = 0;
		let _g1 = this._columns;
		while(_g < _g1) {
			++_g;
			columnWidths.push(0);
		}
		let rowIndex = 0;
		let columnIndex = 0;
		let _g2 = 0;
		let _this = this.get_component();
		let _g3 = _this._children == null ? [] : _this._children;
		while(_g2 < _g3.length) {
			let child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			let fullWidthsCounts = [0];
			let _g = 0;
			let _this = this.get_component();
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					fullWidthsCounts[rowIndex]++;
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					fullWidthsCounts.push(0);
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			let _g2 = 0;
			let _this1 = this.get_component();
			let _g3 = _this1._children == null ? [] : _this1._children;
			while(_g2 < _g3.length) {
				let child = _g3[_g2];
				++_g2;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					let childPercentWidth = child.get_percentWidth();
					if(childPercentWidth == 100 && fullWidthsCounts[rowIndex] != 0) {
						let f = fullWidthsCounts[rowIndex];
						if(rowIndex > 0 && fullWidthsCounts[rowIndex - 1] != 0) {
							f = fullWidthsCounts[rowIndex - 1];
						}
						childPercentWidth = 100 / f;
					}
					let cx = usableSize.width * childPercentWidth / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	calcRowHeights(usableSize,includePercentage) {
		let _this = this.get_component();
		let visibleChildren = (_this._children == null ? [] : _this._children).length;
		let _g = 0;
		let _this1 = this.get_component();
		let _g1 = _this1._children == null ? [] : _this1._children;
		while(_g < _g1.length) if(_g1[_g++].get_includeInLayout() == false) {
			--visibleChildren;
		}
		let rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		let rowHeights = [];
		let _g2 = 0;
		let _g3 = rowCount;
		while(_g2 < _g3) {
			++_g2;
			rowHeights.push(0);
		}
		let rowIndex = 0;
		let columnIndex = 0;
		let _g4 = 0;
		let _this2 = this.get_component();
		let _g5 = _this2._children == null ? [] : _this2._children;
		while(_g4 < _g5.length) {
			let child = _g5[_g4];
			++_g4;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			let newRow = true;
			let fullHeightRowCount = 0;
			let _g = 0;
			let _this = this.get_component();
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					if(newRow == true) {
						newRow = false;
						++fullHeightRowCount;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					newRow = true;
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			let _g2 = 0;
			let _this1 = this.get_component();
			let _g3 = _this1._children == null ? [] : _this1._children;
			while(_g2 < _g3.length) {
				let child = _g3[_g2];
				++_g2;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					let childPercentHeight = child.get_percentHeight();
					if(childPercentHeight == 100 && fullHeightRowCount > 1) {
						childPercentHeight = 100 / fullHeightRowCount;
					}
					let cy = usableSize.height * childPercentHeight / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	calcExplicitWidths() {
		let explicitWidths = [];
		let _g = 0;
		let _g1 = this._columns;
		while(_g < _g1) {
			++_g;
			explicitWidths.push(false);
		}
		let columnIndex = 0;
		let _g2 = 0;
		let _this = this.get_component();
		let _g3 = _this._children == null ? [] : _this._children;
		while(_g2 < _g3.length) {
			let child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
			}
		}
		return explicitWidths;
	}
	calcExplicitHeights() {
		let _this = this.get_component();
		let visibleChildren = (_this._children == null ? [] : _this._children).length;
		let _g = 0;
		let _this1 = this.get_component();
		let _g1 = _this1._children == null ? [] : _this1._children;
		while(_g < _g1.length) if(_g1[_g++].get_includeInLayout() == false) {
			--visibleChildren;
		}
		let rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		let explicitHeights = [];
		let _g2 = 0;
		let _g3 = rowCount;
		while(_g2 < _g3) {
			++_g2;
			explicitHeights.push(false);
		}
		let columnIndex = 0;
		let _g4 = 0;
		let _this2 = this.get_component();
		let _g5 = _this2._children == null ? [] : _this2._children;
		while(_g4 < _g5.length) {
			let child = _g5[_g4];
			++_g4;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
			}
		}
		return explicitHeights;
	}
}
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
Object.assign(haxe_ui_layouts_VerticalGridLayout.prototype, {
	__class__: haxe_ui_layouts_VerticalGridLayout
	,_columns: null
	,__properties__: Object.assign({}, haxe_ui_layouts_Layout.prototype.__properties__, {set_columns: "set_columns",get_columns: "get_columns"})
});
class haxe_ui_components__$Calendar_Layout extends haxe_ui_layouts_VerticalGridLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		let max = 0;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_layout() == null) {
				continue;
			}
			if(child.get_width() > child.get_layout().get_paddingLeft() + child.get_layout().get_paddingRight() && child.get_width() > max) {
				max = child.get_width();
			}
			if(child.get_width() > child.get_layout().get_paddingTop() + child.get_layout().get_paddingBottom() && child.get_height() > max) {
				max = child.get_height();
			}
		}
		if(max > 0) {
			let _g = 0;
			let _this = this.get_component();
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				child.set_width(max);
				child.set_height(max);
			}
		}
	}
}
$hxClasses["haxe.ui.components._Calendar.Layout"] = haxe_ui_components__$Calendar_Layout;
haxe_ui_components__$Calendar_Layout.__name__ = "haxe.ui.components._Calendar.Layout";
haxe_ui_components__$Calendar_Layout.__super__ = haxe_ui_layouts_VerticalGridLayout;
Object.assign(haxe_ui_components__$Calendar_Layout.prototype, {
	__class__: haxe_ui_components__$Calendar_Layout
});
class haxe_ui_components_CheckBox extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_components__$CheckBox_TextBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$CheckBox_SelectedBehaviour);
	}
	get_selected() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	set_selected(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	get_value() {
		return this.get_selected();
	}
	set_value(value) {
		this.set_selected(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_CheckBox();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components__$CheckBox_Events;
		this._compositeBuilderClass = haxe_ui_components_CheckBoxBuilder;
		this._defaultLayoutClass = haxe_ui_components__$CheckBox_CheckBoxLayout;
	}
}
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = "haxe.ui.components.CheckBox";
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_CheckBox.prototype, {
	__class__: haxe_ui_components_CheckBox
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {set_selected: "set_selected",get_selected: "get_selected"})
});
class haxe_ui_components_CheckBoxValue extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	onReady() {
		this.createIcon();
	}
	applyStyle(style) {
		super.applyStyle(style);
		let icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(haxe_ui_util_Variant.fromString(style.icon));
		}
	}
	createIcon() {
		let icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon == null && this.parentComponent != null) {
			icon = new haxe_ui_components_Image();
			icon.set_id("" + this.parentComponent.get_cssName() + "-icon");
			icon.addClass("" + this.parentComponent.get_cssName() + "-icon");
			if(this.get_style() != null && this.get_style().icon != null) {
				icon.set_resource(haxe_ui_util_Variant.fromString(this.get_style().icon));
			}
			this.addComponent(icon);
		}
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_CheckBoxValue();
	}
}
$hxClasses["haxe.ui.components.CheckBoxValue"] = haxe_ui_components_CheckBoxValue;
haxe_ui_components_CheckBoxValue.__name__ = "haxe.ui.components.CheckBoxValue";
haxe_ui_components_CheckBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_CheckBoxValue.prototype, {
	__class__: haxe_ui_components_CheckBoxValue
});
class haxe_ui_components__$CheckBox_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("" + this._component.get_cssName() + "-label");
			label.addClass("" + this._component.get_cssName() + "-label");
			label.scriptAccess = false;
			this._component.addComponent(label);
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.components._CheckBox.TextBehaviour"] = haxe_ui_components__$CheckBox_TextBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.__name__ = "haxe.ui.components._CheckBox.TextBehaviour";
haxe_ui_components__$CheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$CheckBox_TextBehaviour.prototype, {
	__class__: haxe_ui_components__$CheckBox_TextBehaviour
});
class haxe_ui_components__$CheckBox_SelectedBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let valueComponent = this._component.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			valueComponent.addClass(":selected");
		} else {
			valueComponent.removeClass(":selected");
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._CheckBox.SelectedBehaviour"] = haxe_ui_components__$CheckBox_SelectedBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.__name__ = "haxe.ui.components._CheckBox.SelectedBehaviour";
haxe_ui_components__$CheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$CheckBox_SelectedBehaviour.prototype, {
	__class__: haxe_ui_components__$CheckBox_SelectedBehaviour
});
class haxe_ui_components__$CheckBox_Events extends haxe_ui_events_Events {
	constructor(checkbox) {
		super(checkbox);
		this._checkbox = checkbox;
	}
	register() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("click",$bind(this,this.onClick)) == false) {
			this.registerEvent("click",$bind(this,this.onClick));
		}
	}
	unregister() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("click",$bind(this,this.onClick));
	}
	onMouseOver(event) {
		this._target.addClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).addClass(":hover");
	}
	onMouseOut(event) {
		this._target.removeClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).removeClass(":hover");
	}
	onClick(event) {
		this._checkbox.set_selected(!this._checkbox.get_selected());
	}
}
$hxClasses["haxe.ui.components._CheckBox.Events"] = haxe_ui_components__$CheckBox_Events;
haxe_ui_components__$CheckBox_Events.__name__ = "haxe.ui.components._CheckBox.Events";
haxe_ui_components__$CheckBox_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$CheckBox_Events.prototype, {
	__class__: haxe_ui_components__$CheckBox_Events
	,_checkbox: null
});
class haxe_ui_components_CheckBoxBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(checkbox) {
		super(checkbox);
		this._checkbox = checkbox;
	}
	create() {
		if(this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue) == null) {
			let value = new haxe_ui_components_CheckBoxValue();
			value.set_id("" + this._checkbox.get_cssName() + "-value");
			value.addClass("" + this._checkbox.get_cssName() + "-value");
			value.scriptAccess = false;
			this._checkbox.addComponent(value);
		}
	}
	applyStyle(style) {
		let label = this._checkbox.findComponent(null,haxe_ui_components_Label);
		if(label != null && (label.customStyle.color != style.color || label.customStyle.fontName != style.fontName || label.customStyle.fontSize != style.fontSize || label.customStyle.cursor != style.cursor)) {
			label.customStyle.color = style.color;
			label.customStyle.fontName = style.fontName;
			label.customStyle.fontSize = style.fontSize;
			label.customStyle.cursor = style.cursor;
			label.invalidateComponent("style");
		}
	}
	get_cssName() {
		return "checkbox";
	}
}
$hxClasses["haxe.ui.components.CheckBoxBuilder"] = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_CheckBoxBuilder.__name__ = "haxe.ui.components.CheckBoxBuilder";
haxe_ui_components_CheckBoxBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components_CheckBoxBuilder.prototype, {
	__class__: haxe_ui_components_CheckBoxBuilder
	,_checkbox: null
});
class haxe_ui_components__$CheckBox_CheckBoxLayout extends haxe_ui_layouts_HorizontalLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		super.repositionChildren();
		let icon = this._component.findComponent(null,haxe_ui_components_Image,true);
		if(icon != null) {
			icon.set_left(Math.round(icon.get_left()));
			icon.set_top(Math.round(icon.get_top()));
		}
	}
}
$hxClasses["haxe.ui.components._CheckBox.CheckBoxLayout"] = haxe_ui_components__$CheckBox_CheckBoxLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.__name__ = "haxe.ui.components._CheckBox.CheckBoxLayout";
haxe_ui_components__$CheckBox_CheckBoxLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
Object.assign(haxe_ui_components__$CheckBox_CheckBoxLayout.prototype, {
	__class__: haxe_ui_components__$CheckBox_CheckBoxLayout
});
class haxe_ui_components_Column extends haxe_ui_components_Button {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Column();
	}
}
$hxClasses["haxe.ui.components.Column"] = haxe_ui_components_Column;
haxe_ui_components_Column.__name__ = "haxe.ui.components.Column";
haxe_ui_components_Column.__super__ = haxe_ui_components_Button;
Object.assign(haxe_ui_components_Column.prototype, {
	__class__: haxe_ui_components_Column
});
class haxe_ui_core_IDataComponent {
}
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = "haxe.ui.core.IDataComponent";
haxe_ui_core_IDataComponent.__isInterface__ = true;
Object.assign(haxe_ui_core_IDataComponent.prototype, {
	__class__: haxe_ui_core_IDataComponent
	,get_dataSource: null
	,__properties__: {get_dataSource: "get_dataSource"}
});
class haxe_ui_components_DropDown extends haxe_ui_components_Button {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components_DropDownEvents;
		this._compositeBuilderClass = haxe_ui_components_DropDownBuilder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("handlerStyleNames",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dataSource",haxe_ui_components__$DropDown_DataSourceBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("list"));
		this.behaviours.register("virtual",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("dropdownWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownSize",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("selectedIndex",haxe_ui_components__$DropDown_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_components__$DropDown_SelectedItemBehaviour);
		this.behaviours.register("hideDropDown",haxe_ui_components__$DropDown_HideDropDown);
	}
	get_handlerStyleNames() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("handlerStyleNames"));
	}
	set_handlerStyleNames(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"handlerStyleNames",value);
					return value;
				}
			}
		}
		this.behaviours.set("handlerStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"handlerStyleNames"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"handlerStyleNames");
		return value;
	}
	get_dataSource() {
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	set_dataSource(value) {
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dataSource"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dataSource");
		return value;
	}
	get_type() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("type"));
	}
	set_type(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"type",value);
					return value;
				}
			}
		}
		this.behaviours.set("type",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"type"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"type");
		return value;
	}
	get_virtual() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	get_dropdownWidth() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownWidth"));
	}
	get_dropdownHeight() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownHeight"));
	}
	get_dropdownSize() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("dropdownSize"));
	}
	get_selectedIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	set_selectedIndex(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	get_selectedItem() {
		return this.behaviours.getDynamic("selectedItem");
	}
	set_selectedItem(value) {
		this.behaviours.setDynamic("selectedItem",value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedItem"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItem");
		return value;
	}
	get_value() {
		return this.get_selectedItem();
	}
	set_value(value) {
		this.set_selectedItem(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedItem");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_DropDown();
	}
}
$hxClasses["haxe.ui.components.DropDown"] = haxe_ui_components_DropDown;
haxe_ui_components_DropDown.__name__ = "haxe.ui.components.DropDown";
haxe_ui_components_DropDown.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_DropDown.__super__ = haxe_ui_components_Button;
Object.assign(haxe_ui_components_DropDown.prototype, {
	__class__: haxe_ui_components_DropDown
	,__properties__: Object.assign({}, haxe_ui_components_Button.prototype.__properties__, {set_selectedItem: "set_selectedItem",get_selectedItem: "get_selectedItem",set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex",get_dropdownSize: "get_dropdownSize",get_dropdownHeight: "get_dropdownHeight",get_dropdownWidth: "get_dropdownWidth",get_virtual: "get_virtual",set_type: "set_type",get_type: "get_type",set_dataSource: "set_dataSource",get_dataSource: "get_dataSource",set_handlerStyleNames: "set_handlerStyleNames",get_handlerStyleNames: "get_handlerStyleNames"})
});
class haxe_ui_components__$DropDown_HideDropDown extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		(js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		return null;
	}
}
$hxClasses["haxe.ui.components._DropDown.HideDropDown"] = haxe_ui_components__$DropDown_HideDropDown;
haxe_ui_components__$DropDown_HideDropDown.__name__ = "haxe.ui.components._DropDown.HideDropDown";
haxe_ui_components__$DropDown_HideDropDown.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$DropDown_HideDropDown.prototype, {
	__class__: haxe_ui_components__$DropDown_HideDropDown
});
class haxe_ui_components__$DropDown_DataSourceBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value) == true) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
		}
		return this._value;
	}
	set(value) {
		super.set(value);
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().reset();
		if(this._component.get_text() == null && this._component.get_isReady()) {
			(js_Boot.__cast(this._component , haxe_ui_components_DropDown)).set_selectedIndex(0);
		}
	}
}
$hxClasses["haxe.ui.components._DropDown.DataSourceBehaviour"] = haxe_ui_components__$DropDown_DataSourceBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.__name__ = "haxe.ui.components._DropDown.DataSourceBehaviour";
haxe_ui_components__$DropDown_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$DropDown_DataSourceBehaviour.prototype, {
	__class__: haxe_ui_components__$DropDown_DataSourceBehaviour
});
class haxe_ui_components__$DropDown_SelectedIndexBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	get() {
		if(this._component.get_isReady() == false) {
			return super.get();
		}
		return haxe_ui_util_Variant.fromInt((js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().get_selectedIndex());
	}
	set(value) {
		if(this._component.get_isReady() == false) {
			super.set(value);
			return;
		}
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
}
$hxClasses["haxe.ui.components._DropDown.SelectedIndexBehaviour"] = haxe_ui_components__$DropDown_SelectedIndexBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedIndexBehaviour";
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$DropDown_SelectedIndexBehaviour.prototype, {
	__class__: haxe_ui_components__$DropDown_SelectedIndexBehaviour
});
class haxe_ui_components__$DropDown_SelectedItemBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().set_selectedItem(this._value);
	}
	getDynamic() {
		return (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().get_selectedItem();
	}
	set(value) {
		if(this._component.get_isReady() == false) {
			super.set(value);
			return;
		}
		if(haxe_ui_util_Variant.eq(value,this.getDynamic())) {
			return;
		}
		this._value = value;
		this.invalidateData();
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().set_selectedItem(value);
	}
}
$hxClasses["haxe.ui.components._DropDown.SelectedItemBehaviour"] = haxe_ui_components__$DropDown_SelectedItemBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedItemBehaviour";
haxe_ui_components__$DropDown_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$DropDown_SelectedItemBehaviour.prototype, {
	__class__: haxe_ui_components__$DropDown_SelectedItemBehaviour
});
class haxe_ui_components_IDropDownHandler {
}
$hxClasses["haxe.ui.components.IDropDownHandler"] = haxe_ui_components_IDropDownHandler;
haxe_ui_components_IDropDownHandler.__name__ = "haxe.ui.components.IDropDownHandler";
haxe_ui_components_IDropDownHandler.__isInterface__ = true;
Object.assign(haxe_ui_components_IDropDownHandler.prototype, {
	__class__: haxe_ui_components_IDropDownHandler
	,get_component: null
	,get_selectedIndex: null
	,set_selectedIndex: null
	,get_selectedItem: null
	,set_selectedItem: null
	,component: null
	,prepare: null
	,reset: null
	,applyDefault: null
	,__properties__: {set_selectedItem: "set_selectedItem",get_selectedItem: "get_selectedItem",set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex",get_component: "get_component"}
});
class haxe_ui_components_DropDownHandler {
	constructor(dropdown) {
		if(haxe_ui_components_DropDownHandler._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(dropdown);
	}
	_hx_constructor(dropdown) {
		this._dropdown = dropdown;
	}
	get_component() {
		return null;
	}
	prepare(wrapper) {
	}
	reset() {
	}
	get_selectedIndex() {
		return -1;
	}
	set_selectedIndex(value) {
		return value;
	}
	get_selectedItem() {
		return null;
	}
	set_selectedItem(value) {
		return value;
	}
	applyDefault() {
	}
}
$hxClasses["haxe.ui.components.DropDownHandler"] = haxe_ui_components_DropDownHandler;
haxe_ui_components_DropDownHandler.__name__ = "haxe.ui.components.DropDownHandler";
haxe_ui_components_DropDownHandler.__interfaces__ = [haxe_ui_components_IDropDownHandler];
Object.assign(haxe_ui_components_DropDownHandler.prototype, {
	__class__: haxe_ui_components_DropDownHandler
	,_dropdown: null
	,component: null
	,__properties__: {set_selectedItem: "set_selectedItem",get_selectedItem: "get_selectedItem",set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex",get_component: "get_component"}
});
class haxe_ui_components_ListDropDownHandler extends haxe_ui_components_DropDownHandler {
	constructor(dropdown) {
		haxe_ui_components_DropDownHandler._hx_skip_constructor = true;
		super();
		haxe_ui_components_DropDownHandler._hx_skip_constructor = false;
		this._hx_constructor(dropdown);
	}
	_hx_constructor(dropdown) {
		this._cachedSelectedItem = null;
		this._cachedSelectedIndex = -1;
		super._hx_constructor(dropdown);
	}
	get_component() {
		this.createListView();
		return this._listview;
	}
	reset() {
		if(this._listview != null) {
			this._listview.set_dataSource(this._dropdown.get_dataSource());
		}
	}
	prepare(wrapper) {
		let itemCount = 4;
		if(this._dropdown.get_dropdownSize() != null) {
			itemCount = this._dropdown.get_dropdownSize();
		}
		if(this._listview.get_dataSource() != null && this._listview.get_dataSource().get_size() < itemCount) {
			itemCount = this._listview.get_dataSource().get_size();
		}
		if(itemCount > 0) {
			this._listview.set_itemCount(itemCount);
		}
		if(this._dropdown.get_dropdownWidth() == null) {
			wrapper.syncComponentValidation();
			this._listview.set_width(this._dropdown.get_width() - (wrapper.get_layout().get_paddingLeft() + wrapper.get_layout().get_paddingRight()));
		} else {
			this._listview.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._listview.set_height(this._dropdown.get_dropdownHeight());
		}
		let selectedIndex = this._dropdown.get_selectedIndex();
		if(this._dropdown.get_dataSource() != null && this._dropdown.get_text() != null && selectedIndex < 0) {
			let itemIndex = this.indexOfItem(this._dropdown.get_text());
			if(itemIndex != -1) {
				selectedIndex = itemIndex;
			}
		}
		this._listview.unregisterEvent("change",$bind(this,this.onListChange));
		this._listview.set_selectedIndex(selectedIndex);
		this._listview.syncComponentValidation();
		this._listview.registerEvent("change",$bind(this,this.onListChange));
	}
	get_selectedIndex() {
		if(this._listview == null) {
			return this._cachedSelectedIndex;
		}
		return this._listview.get_selectedIndex();
	}
	set_selectedIndex(value) {
		if(this._listview != null && this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			this._listview.set_selectedIndex(value);
		} else if(this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			let data = null;
			if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
				data = this._dropdown.get_dataSource().get(value);
			}
			this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,data));
		}
		if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
			let data = this._dropdown.get_dataSource().get(value);
			let text = null;
			if(Type.typeof(data) == ValueType.TObject) {
				text = data.text;
				if(text == null) {
					text = data.value;
				}
			} else {
				text = Std.string(data);
			}
			this._dropdown.set_text(text);
		}
		return value;
	}
	indexOfItem(text) {
		let index = -1;
		if(this._dropdown.get_dataSource() != null) {
			let _g = 0;
			let _g1 = this._dropdown.get_dataSource().get_size();
			while(_g < _g1) {
				let i = _g++;
				let item = this._dropdown.get_dataSource().get(i);
				if(item == text || item.value == text || item.text == text) {
					index = i;
				}
			}
		}
		if(index == -1 && this._dropdown.get_dataSource() != null) {
			let info = haxe_ui_binding_BindingManager.get_instance().findLanguageBinding(this._dropdown,"text");
			if(info != null && info.script != null) {
				text = info.script;
				let _g = 0;
				let _g1 = this._dropdown.get_dataSource().get_size();
				while(_g < _g1) {
					let i = _g++;
					let item = this._dropdown.get_dataSource().get(i);
					if(item == text || item.value == text || item.text == text) {
						index = i;
					}
				}
			}
		}
		return index;
	}
	get_selectedItem() {
		if(this._listview == null) {
			if(this._cachedSelectedIndex >= 0 && this._cachedSelectedIndex < this._dropdown.get_dataSource().get_size()) {
				return this._dropdown.get_dataSource().get(this._cachedSelectedIndex);
			} else {
				return this._cachedSelectedItem;
			}
		}
		return this._listview.get_selectedItem();
	}
	set_selectedItem(value) {
		this.set_selectedIndex(this.indexOfItem(haxe_ui_util_Variant.toString(value)));
		return value;
	}
	createListView() {
		if(this._listview == null) {
			this._listview = new haxe_ui_containers_ListView();
			this._listview.set_virtual(this._dropdown.get_virtual());
			this._listview.set_dataSource(this._dropdown.get_dataSource());
		}
	}
	onListChange(event) {
		if(this._listview.get_selectedItem() == null) {
			return;
		}
		let currentHover = this._listview.findComponent(":hover",null,true,"css");
		if(currentHover != null) {
			currentHover.removeClass(":hover");
		}
		let selectedItem = this._listview.get_selectedItem();
		let text = null;
		if(Type.typeof(selectedItem) == ValueType.TObject) {
			text = this._listview.get_selectedItem().text;
			if(text == null) {
				text = this._listview.get_selectedItem().value;
			}
		} else {
			text = Std.string(selectedItem);
		}
		this._dropdown.set_text(text);
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,selectedItem));
	}
	applyDefault() {
		let indexToSelect = 0;
		if(this._cachedSelectedItem != null) {
			let index = this.indexOfItem(haxe_ui_util_Variant.toString(this._cachedSelectedItem));
			if(index != -1) {
				indexToSelect = index;
			}
		}
		this._dropdown.set_selectedIndex(indexToSelect);
	}
}
$hxClasses["haxe.ui.components.ListDropDownHandler"] = haxe_ui_components_ListDropDownHandler;
haxe_ui_components_ListDropDownHandler.__name__ = "haxe.ui.components.ListDropDownHandler";
haxe_ui_components_ListDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
Object.assign(haxe_ui_components_ListDropDownHandler.prototype, {
	__class__: haxe_ui_components_ListDropDownHandler
	,_listview: null
	,_cachedSelectedIndex: null
	,_cachedSelectedItem: null
});
class haxe_ui_components_CalendarDropDownHandler extends haxe_ui_components_DropDownHandler {
	constructor(dropdown) {
		haxe_ui_components_DropDownHandler._hx_skip_constructor = true;
		super();
		haxe_ui_components_DropDownHandler._hx_skip_constructor = false;
		this._hx_constructor(dropdown);
	}
	_hx_constructor(dropdown) {
		this._cachedSelectedDate = null;
		super._hx_constructor(dropdown);
	}
	get_component() {
		if(this._calendar == null) {
			this._calendar = new haxe_ui_containers_CalendarView();
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		return this._calendar;
	}
	prepare(wrapper) {
		if(this._dropdown.get_dropdownWidth() != null) {
			this._calendar.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._calendar.set_height(this._dropdown.get_dropdownHeight());
		}
		if(this._cachedSelectedDate != null) {
			this._calendar.unregisterEvent("change",$bind(this,this.onCalendarChange));
			this._calendar.set_selectedDate(this._cachedSelectedDate);
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this._calendar.syncComponentValidation();
	}
	get_selectedItem() {
		if(this._calendar == null) {
			return this._cachedSelectedDate;
		}
		return this._calendar.get_selectedDate();
	}
	set_selectedItem(value) {
		if(value == null) {
			return value;
		}
		let v = value;
		let date = null;
		if(haxe_ui_util_Variant.get_isString(v) == true) {
			date = HxOverrides.strDate(haxe_ui_util_Variant.toString(v));
		} else if(haxe_ui_util_Variant.get_isDate(v)) {
			date = haxe_ui_util_Variant.toDate(v);
		}
		if(this._calendar != null && date != null) {
			if(HxOverrides.dateStr(date) == HxOverrides.dateStr(this._calendar.get_selectedDate())) {
				this._dropdown.set_text(DateTools.format(date,haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT));
				return value;
			}
			this._cachedSelectedDate = date;
			this._calendar.set_selectedDate(date);
		} else if(date != null) {
			this._cachedSelectedDate = date;
			this._dropdown.set_text(DateTools.format(this._cachedSelectedDate,haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT));
		}
		return value;
	}
	onCalendarChange(event) {
		if(this._calendar.get_selectedDate() == null) {
			return;
		}
		this._cachedSelectedDate = this._calendar.get_selectedDate();
		this._dropdown.set_text(DateTools.format(this._calendar.get_selectedDate(),haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT));
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,this._calendar.get_selectedDate()));
	}
	applyDefault() {
		let now = new Date();
		this._dropdown.set_selectedItem(now);
	}
}
$hxClasses["haxe.ui.components.CalendarDropDownHandler"] = haxe_ui_components_CalendarDropDownHandler;
haxe_ui_components_CalendarDropDownHandler.__name__ = "haxe.ui.components.CalendarDropDownHandler";
haxe_ui_components_CalendarDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
Object.assign(haxe_ui_components_CalendarDropDownHandler.prototype, {
	__class__: haxe_ui_components_CalendarDropDownHandler
	,_calendar: null
	,_cachedSelectedDate: null
});
class haxe_ui_components_DropDownEvents extends haxe_ui_components_ButtonEvents {
	constructor(dropdown) {
		haxe_ui_events_Events._hx_skip_constructor = true;
		super();
		haxe_ui_events_Events._hx_skip_constructor = false;
		this._hx_constructor(dropdown);
	}
	_hx_constructor(dropdown) {
		this._wrapper = null;
		this._overlay = null;
		super._hx_constructor(dropdown);
		this._dropdown = dropdown;
	}
	register() {
		super.register();
		this.registerEvent("mousedown",$bind(this,this.onClick));
	}
	unregister() {
		super.unregister();
		this.unregisterEvent("mousedown",$bind(this,this.onClick));
	}
	onClick(event) {
		this._dropdown.set_selected(!this._dropdown.get_selected());
		if(this._dropdown.get_selected() == true) {
			this.showDropDown();
		} else {
			this.hideDropDown();
		}
	}
	onMouseClick(event) {
	}
	showDropDown() {
		let handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper == null) {
			this._wrapper = new haxe_ui_containers_Box();
			this._wrapper.addClass("popup");
			this._wrapper.addClass("dropdown-popup");
			this._wrapper.set_styleNames(this._dropdown.get_handlerStyleNames());
			this._wrapper.addComponent(handler.get_component());
			let filler = new haxe_ui_core_Component();
			filler.set_horizontalAlign("right");
			filler.set_includeInLayout(false);
			filler.addClass("dropdown-filler");
			filler.set_id("dropdown-filler");
			this._wrapper.addComponent(filler);
		}
		let componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.get_style().mode != null && this._dropdown.get_style().mode == "mobile") {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			}
			haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			handler.prepare(this._wrapper);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			this._wrapper.set_left(haxe_ui_core_Screen.get_instance().get_width() / 2 - this._wrapper.get_actualComponentWidth() / 2);
			this._wrapper.set_top(haxe_ui_core_Screen.get_instance().get_height() / 2 - this._wrapper.get_actualComponentHeight() / 2);
		} else {
			this._wrapper.set_left(this._dropdown.get_screenLeft() + componentOffset.x);
			this._wrapper.set_top(this._dropdown.get_screenTop() + (this._dropdown.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			handler.prepare(this._wrapper);
			this._wrapper.syncComponentValidation();
			let cx = this._wrapper.get_width() - this._dropdown.get_width();
			let filler = this._wrapper.findComponent("dropdown-filler",null,false);
			if(cx > 0 && filler != null) {
				this._wrapper.addClass("dropdown-popup-expanded");
				cx += 2;
				filler.set_width(cx);
				filler.set_left(this._wrapper.get_width() - cx);
				filler.set_hidden(false);
			} else if(filler != null) {
				filler.set_hidden(true);
				this._wrapper.removeClass("dropdown-popup-expanded");
			}
			if(this._wrapper.get_screenLeft() + this._wrapper.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_width()) {
				this._wrapper.set_left(this._wrapper.get_screenLeft() - this._wrapper.get_actualComponentWidth() + this._dropdown.get_actualComponentWidth());
			}
			if(this._wrapper.get_screenTop() + this._wrapper.get_actualComponentHeight() > haxe_ui_core_Screen.get_instance().get_height()) {
				this._wrapper.set_top(this._dropdown.get_screenTop() - this._wrapper.get_actualComponentHeight());
			}
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	hideDropDown() {
		if((js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler() == null) {
			return;
		}
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		this._dropdown.set_selected(false);
		if(this._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._wrapper);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	onScreenMouseDown(event) {
		if((js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler().get_component().hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		let componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		this.hideDropDown();
	}
	dispatchChanged() {
	}
}
$hxClasses["haxe.ui.components.DropDownEvents"] = haxe_ui_components_DropDownEvents;
haxe_ui_components_DropDownEvents.__name__ = "haxe.ui.components.DropDownEvents";
haxe_ui_components_DropDownEvents.__super__ = haxe_ui_components_ButtonEvents;
Object.assign(haxe_ui_components_DropDownEvents.prototype, {
	__class__: haxe_ui_components_DropDownEvents
	,_dropdown: null
	,_overlay: null
	,_wrapper: null
});
class haxe_ui_components_DropDownBuilder extends haxe_ui_components_ButtonBuilder {
	constructor(dropdown) {
		super(dropdown);
		this._dropdown = dropdown;
		let this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
		let value = haxe_ui_components_ListDropDownHandler.__name__;
		this1.h["list"] = value;
		let this2 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
		let value1 = haxe_ui_components_CalendarDropDownHandler.__name__;
		this2.h["date"] = value1;
	}
	get_handler() {
		if(this._handler == null) {
			let this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
			let key = this._dropdown.get_type();
			let handlerClass = this1.h[key];
			if(handlerClass == null) {
				handlerClass = this._dropdown.get_type();
			}
			this._handler = Type.createInstance($hxClasses[handlerClass],[this._dropdown]);
		}
		return this._handler;
	}
	onReady() {
		super.onReady();
		if(this._dropdown.get_text() == null) {
			this.get_handler().applyDefault();
		}
	}
	create() {
		this._dropdown.set_toggle(true);
	}
	destroy() {
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		if(this._handler != null && this._handler.get_component() != null) {
			this._handler.get_component().destroyComponent();
		}
	}
}
$hxClasses["haxe.ui.components.DropDownBuilder"] = haxe_ui_components_DropDownBuilder;
haxe_ui_components_DropDownBuilder.__name__ = "haxe.ui.components.DropDownBuilder";
haxe_ui_components_DropDownBuilder.__super__ = haxe_ui_components_ButtonBuilder;
Object.assign(haxe_ui_components_DropDownBuilder.prototype, {
	__class__: haxe_ui_components_DropDownBuilder
	,_dropdown: null
	,_handler: null
	,handler: null
	,__properties__: Object.assign({}, haxe_ui_components_ButtonBuilder.prototype.__properties__, {get_handler: "get_handler"})
});
class haxe_ui_components_HGrid extends haxe_ui_core_Component {
	constructor() {
		super();
		this.set_rows(1);
	}
	createDefaults() {
		super.createDefaults();
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalGridLayout;
	}
	get_rows() {
		return this._rows;
	}
	set_rows(value) {
		if(this._rows != value) {
			this._rows = value;
			(js_Boot.__cast(this.get_layout() , haxe_ui_layouts_HorizontalGridLayout)).set_rows(value);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_rows(this.get_rows());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_HGrid();
	}
}
$hxClasses["haxe.ui.components.HGrid"] = haxe_ui_components_HGrid;
haxe_ui_components_HGrid.__name__ = "haxe.ui.components.HGrid";
haxe_ui_components_HGrid.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_HGrid.prototype, {
	__class__: haxe_ui_components_HGrid
	,_rows: null
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_rows: "set_rows",get_rows: "get_rows"})
});
class haxe_ui_core_IDirectionalComponent {
}
$hxClasses["haxe.ui.core.IDirectionalComponent"] = haxe_ui_core_IDirectionalComponent;
haxe_ui_core_IDirectionalComponent.__name__ = "haxe.ui.core.IDirectionalComponent";
haxe_ui_core_IDirectionalComponent.__isInterface__ = true;
class haxe_ui_components_Range extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	get_cssName() {
		return "range";
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("min",haxe_ui_components__$Range_RangeMin,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Range_RangeMax,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("start",haxe_ui_components__$Range_RangeStart,null);
		this.behaviours.register("end",haxe_ui_components__$Range_RangeEnd,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("precision",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_InvalidatingBehaviour);
		this.behaviours.register("allowInteraction",haxe_ui_components__$Range_AllowInteraction,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("posFromCoord",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_min() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	set_min(value) {
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	get_max() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	set_max(value) {
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	get_start() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("start"));
	}
	set_start(value) {
		this.behaviours.set("start",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"start"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"start");
		return value;
	}
	get_end() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("end"));
	}
	set_end(value) {
		this.behaviours.set("end",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"end"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"end");
		return value;
	}
	get_precision() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	set_precision(value) {
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"precision"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	get_step() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	set_step(value) {
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"step"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"step");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_precision(this.get_precision());
		c.set_step(this.get_step());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Range();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_components__$Range_Builder;
	}
}
$hxClasses["haxe.ui.components.Range"] = haxe_ui_components_Range;
haxe_ui_components_Range.__name__ = "haxe.ui.components.Range";
haxe_ui_components_Range.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Range.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_Range.prototype, {
	__class__: haxe_ui_components_Range
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {set_step: "set_step",get_step: "get_step",set_precision: "set_precision",get_precision: "get_precision",set_end: "set_end",get_end: "get_end",set_start: "set_start",get_start: "get_start",set_max: "set_max",get_max: "get_max",set_min: "set_min",get_min: "get_min"})
});
class haxe_ui_components_Progress extends haxe_ui_components_Range {
	constructor() {
		super();
		this.behaviours.set_updateOrder(["min","max","pos","indeterminate"]);
	}
	get_cssName() {
		return "progress";
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("indeterminate",haxe_ui_components__$Progress_Indeterminate);
		this.behaviours.register("pos",haxe_ui_components__$Progress_Pos);
		this.behaviours.register("min",haxe_ui_components__$Progress_Min);
	}
	get_indeterminate() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("indeterminate"));
	}
	set_indeterminate(value) {
		this.behaviours.set("indeterminate",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"indeterminate"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"indeterminate");
		return value;
	}
	get_pos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	set_pos(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	get_value() {
		return this.get_pos();
	}
	set_value(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_indeterminate(this.get_indeterminate());
		c.set_pos(this.get_pos());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Progress();
	}
}
$hxClasses["haxe.ui.components.Progress"] = haxe_ui_components_Progress;
haxe_ui_components_Progress.__name__ = "haxe.ui.components.Progress";
haxe_ui_components_Progress.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Progress.__super__ = haxe_ui_components_Range;
Object.assign(haxe_ui_components_Progress.prototype, {
	__class__: haxe_ui_components_Progress
	,__properties__: Object.assign({}, haxe_ui_components_Range.prototype.__properties__, {set_pos: "set_pos",get_pos: "get_pos",set_indeterminate: "set_indeterminate",get_indeterminate: "get_indeterminate"})
});
class haxe_ui_components_HorizontalProgress extends haxe_ui_components_Progress {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("posFromCoord",haxe_ui_components_HorizontalRangePosFromCoord);
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_HorizontalProgress();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components_HorizontalRangeLayout;
	}
}
$hxClasses["haxe.ui.components.HorizontalProgress"] = haxe_ui_components_HorizontalProgress;
haxe_ui_components_HorizontalProgress.__name__ = "haxe.ui.components.HorizontalProgress";
haxe_ui_components_HorizontalProgress.__super__ = haxe_ui_components_Progress;
Object.assign(haxe_ui_components_HorizontalProgress.prototype, {
	__class__: haxe_ui_components_HorizontalProgress
});
class haxe_ui_components_HorizontalRange extends haxe_ui_components_Range {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components_HorizontalRangeLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("posFromCoord",haxe_ui_components_HorizontalRangePosFromCoord);
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_HorizontalRange();
	}
}
$hxClasses["haxe.ui.components.HorizontalRange"] = haxe_ui_components_HorizontalRange;
haxe_ui_components_HorizontalRange.__name__ = "haxe.ui.components.HorizontalRange";
haxe_ui_components_HorizontalRange.__super__ = haxe_ui_components_Range;
Object.assign(haxe_ui_components_HorizontalRange.prototype, {
	__class__: haxe_ui_components_HorizontalRange
});
class haxe_ui_components_HorizontalRangePosFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(pos) {
		let range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		let p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		let xpos = (p.x -= this._component.getComponentOffset().x) - range.get_layout().get_paddingLeft();
		let ucx = range.get_layout().get_usableWidth();
		if(xpos >= ucx) {
			xpos = ucx;
		}
		let d = ucx / (range.get_max() - range.get_min());
		return haxe_ui_util_Variant.fromFloat((xpos + range.get_start() * d) / d);
	}
}
$hxClasses["haxe.ui.components.HorizontalRangePosFromCoord"] = haxe_ui_components_HorizontalRangePosFromCoord;
haxe_ui_components_HorizontalRangePosFromCoord.__name__ = "haxe.ui.components.HorizontalRangePosFromCoord";
haxe_ui_components_HorizontalRangePosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components_HorizontalRangePosFromCoord.prototype, {
	__class__: haxe_ui_components_HorizontalRangePosFromCoord
});
class haxe_ui_components_HorizontalRangeLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		super.resizeChildren();
		let range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		let value = this.findComponent("" + range.get_cssName() + "-value");
		if(value != null) {
			let ucx = this.get_usableWidth();
			let d = ucx / (range.get_max() - range.get_min());
			let startInPixels = range.get_start() * d - range.get_min() * d;
			let cx = Math.round(range.get_end() * d - range.get_min() * d - startInPixels);
			if(cx < 0) {
				cx = 0;
			} else if(cx > ucx) {
				cx = ucx;
			}
			if(cx == 0) {
				value.set_width(0);
				value.set_hidden(true);
			} else {
				value.set_width(cx);
				value.set_hidden(false);
			}
		}
	}
	repositionChildren() {
		super.repositionChildren();
		let range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		let value = this.findComponent("" + range.get_cssName() + "-value");
		let d = this.get_usableWidth() / (range.get_max() - range.get_min());
		let startInPixels = range.get_start() * d - range.get_min() * d;
		value.set_left(this.get_paddingLeft() + startInPixels);
		value.set_top(this.get_paddingTop());
	}
}
$hxClasses["haxe.ui.components.HorizontalRangeLayout"] = haxe_ui_components_HorizontalRangeLayout;
haxe_ui_components_HorizontalRangeLayout.__name__ = "haxe.ui.components.HorizontalRangeLayout";
haxe_ui_components_HorizontalRangeLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components_HorizontalRangeLayout.prototype, {
	__class__: haxe_ui_components_HorizontalRangeLayout
});
class haxe_ui_components_Rule extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Rule();
	}
}
$hxClasses["haxe.ui.components.Rule"] = haxe_ui_components_Rule;
haxe_ui_components_Rule.__name__ = "haxe.ui.components.Rule";
haxe_ui_components_Rule.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Rule.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_Rule.prototype, {
	__class__: haxe_ui_components_Rule
});
class haxe_ui_components_HorizontalRule extends haxe_ui_components_Rule {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_HorizontalRule();
	}
}
$hxClasses["haxe.ui.components.HorizontalRule"] = haxe_ui_components_HorizontalRule;
haxe_ui_components_HorizontalRule.__name__ = "haxe.ui.components.HorizontalRule";
haxe_ui_components_HorizontalRule.__super__ = haxe_ui_components_Rule;
Object.assign(haxe_ui_components_HorizontalRule.prototype, {
	__class__: haxe_ui_components_HorizontalRule
});
class haxe_ui_components_Scroll extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	applyPageFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("applyPageFromCoord",coord));
	}
	createChildren() {
		this.createButton("deinc").set_repeater(true);
		this.createButton("inc").set_repeater(true);
		this.createButton("thumb").set_remainPressed(true);
		this.registerInternalEvents(haxe_ui_components__$Scroll_Events);
	}
	createButton(type) {
		let b = this.findComponent("scroll-" + type + "-button",haxe_ui_components_Button);
		if(b == null) {
			b = new haxe_ui_components_Button();
			b.scriptAccess = false;
			b.customStyle.native = false;
			b.set_id("scroll-" + type + "-button");
			b.addClass(type);
			b.set_allowFocus(false);
			this.addComponent(b);
		}
		return b;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("min",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("pageSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("increment",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(20));
	}
	get_min() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	get_max() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	set_max(value) {
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	get_pageSize() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pageSize"));
	}
	set_pageSize(value) {
		this.behaviours.set("pageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pageSize"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageSize");
		return value;
	}
	get_pos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	set_pos(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	get_increment() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("increment"));
	}
	set_increment(value) {
		this.behaviours.set("increment",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"increment"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"increment");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Scroll();
	}
}
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = "haxe.ui.components.Scroll";
haxe_ui_components_Scroll.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_Scroll.prototype, {
	__class__: haxe_ui_components_Scroll
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {set_increment: "set_increment",get_increment: "get_increment",set_pos: "set_pos",get_pos: "get_pos",set_pageSize: "set_pageSize",get_pageSize: "get_pageSize",set_max: "set_max",get_max: "get_max",get_min: "get_min"})
});
class haxe_ui_components_HorizontalScroll extends haxe_ui_components_Scroll {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("posFromCoord",haxe_ui_components__$HorizontalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord);
	}
	createChildren() {
		super.createChildren();
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
	}
	createDefaults() {
		super.createDefaults();
		this._defaultLayoutClass = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_HorizontalScroll();
	}
}
$hxClasses["haxe.ui.components.HorizontalScroll"] = haxe_ui_components_HorizontalScroll;
haxe_ui_components_HorizontalScroll.__name__ = "haxe.ui.components.HorizontalScroll";
haxe_ui_components_HorizontalScroll.__super__ = haxe_ui_components_Scroll;
Object.assign(haxe_ui_components_HorizontalScroll.prototype, {
	__class__: haxe_ui_components_HorizontalScroll
});
class haxe_ui_components__$HorizontalScroll_PosFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(pos) {
		let scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		let deinc = this._component.findComponent("scroll-deinc-button");
		let thumb = this._component.findComponent("scroll-thumb-button");
		let xpos = (js_Boot.__cast(pos , haxe_ui_geom_Point)).x;
		let minX = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minX = deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		let maxX = scroll.get_layout().get_usableWidth() - thumb.get_width();
		if(deinc != null && deinc.get_hidden() == false) {
			maxX += deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		let ucx = scroll.get_layout().get_usableWidth();
		ucx -= thumb.get_width();
		let m = scroll.get_max() - scroll.get_min() | 0;
		return haxe_ui_util_Variant.fromFloat(scroll.get_min() + (xpos - minX) / ucx * m);
	}
}
$hxClasses["haxe.ui.components._HorizontalScroll.PosFromCoord"] = haxe_ui_components__$HorizontalScroll_PosFromCoord;
haxe_ui_components__$HorizontalScroll_PosFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.PosFromCoord";
haxe_ui_components__$HorizontalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$HorizontalScroll_PosFromCoord.prototype, {
	__class__: haxe_ui_components__$HorizontalScroll_PosFromCoord
});
class haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(pos) {
		let p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		let scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		let thumb = this._component.findComponent("scroll-thumb-button");
		if(p.x < thumb.get_screenLeft()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.x > thumb.get_screenLeft() + thumb.get_width()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
}
$hxClasses["haxe.ui.components._HorizontalScroll.ApplyPageFromCoord"] = haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.ApplyPageFromCoord";
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.prototype, {
	__class__: haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord
});
class haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		super.resizeChildren();
		let scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		let thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			let m = scroll.get_max() - scroll.get_min();
			let ucx = this.get_usableWidth();
			let thumbWidth = scroll.get_pageSize() / m * ucx;
			if(thumbWidth < this.get_innerHeight()) {
				thumbWidth = this.get_innerHeight();
			} else if(thumbWidth > ucx) {
				thumbWidth = ucx;
			}
			if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
				thumb.set_width(thumbWidth);
			}
		}
	}
	repositionChildren() {
		super.repositionChildren();
		let deinc = this.get_component().findComponent("scroll-deinc-button");
		let inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_width() - inc.get_width() - this.get_paddingRight());
		}
		let scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		let thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			let m = scroll.get_max() - scroll.get_min();
			let u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			let x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_width() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
			thumb.set_top(Math.round(thumb.get_top()));
		}
	}
	get_usableWidth() {
		let ucx = this.get_innerWidth();
		let deinc = this.get_component().findComponent("scroll-deinc-button");
		let inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_width() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_width() + this.get_horizontalSpacing();
		}
		return ucx;
	}
}
$hxClasses["haxe.ui.components._HorizontalScroll.HorizontalScrollLayout"] = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__name__ = "haxe.ui.components._HorizontalScroll.HorizontalScrollLayout";
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.prototype, {
	__class__: haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout
});
class haxe_ui_components_Slider extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("min",haxe_ui_components__$Slider_MinBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Slider_MaxBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("start",haxe_ui_components__$Slider_StartBehaviour,null);
		this.behaviours.register("end",haxe_ui_components__$Slider_EndBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Slider_PosBehaviour);
		this.behaviours.register("posFromCoord",haxe_ui_components__$Slider_PosFromCoord);
	}
	get_min() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	set_min(value) {
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	get_max() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	set_max(value) {
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	get_precision() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	set_precision(value) {
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"precision"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	get_start() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("start"));
	}
	set_start(value) {
		this.behaviours.set("start",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"start"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"start");
		return value;
	}
	get_end() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("end"));
	}
	set_end(value) {
		this.behaviours.set("end",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"end"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"end");
		return value;
	}
	get_pos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	set_pos(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	get_value() {
		return this.get_pos();
	}
	set_value(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_min(this.get_min());
		c.set_max(this.get_max());
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		if(this.get_start() != null) {
			c.set_start(this.get_start());
		}
		c.set_end(this.get_end());
		c.set_pos(this.get_pos());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Slider();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_components_SliderBuilder;
	}
}
$hxClasses["haxe.ui.components.Slider"] = haxe_ui_components_Slider;
haxe_ui_components_Slider.__name__ = "haxe.ui.components.Slider";
haxe_ui_components_Slider.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Slider.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_Slider.prototype, {
	__class__: haxe_ui_components_Slider
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {set_pos: "set_pos",get_pos: "get_pos",set_end: "set_end",get_end: "get_end",set_start: "set_start",get_start: "get_start",set_precision: "set_precision",get_precision: "get_precision",set_max: "set_max",get_max: "get_max",set_min: "set_min",get_min: "get_min"})
});
class haxe_ui_components_HorizontalSlider extends haxe_ui_components_Slider {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components_HorizontalSliderLayout;
		this._compositeBuilderClass = haxe_ui_components__$HorizontalSlider_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_HorizontalSlider();
	}
}
$hxClasses["haxe.ui.components.HorizontalSlider"] = haxe_ui_components_HorizontalSlider;
haxe_ui_components_HorizontalSlider.__name__ = "haxe.ui.components.HorizontalSlider";
haxe_ui_components_HorizontalSlider.__super__ = haxe_ui_components_Slider;
Object.assign(haxe_ui_components_HorizontalSlider.prototype, {
	__class__: haxe_ui_components_HorizontalSlider
});
class haxe_ui_components_HorizontalSliderLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		super.repositionChildren();
		let range = this.findComponent(null,haxe_ui_components_Range);
		let rangeValue = range.findComponent("range-value");
		let startThumb = this.findComponent("start-thumb");
		let endThumb = this.findComponent("end-thumb");
		if(startThumb != null) {
			startThumb.set_left(range.get_left() + rangeValue.get_left() - startThumb.get_width() / 2);
		}
		let cx = rangeValue.get_width();
		if(rangeValue.get_hidden() == true) {
			cx = 0;
		}
		endThumb.set_left(range.get_left() + rangeValue.get_left() + cx - endThumb.get_width() / 2);
	}
}
$hxClasses["haxe.ui.components.HorizontalSliderLayout"] = haxe_ui_components_HorizontalSliderLayout;
haxe_ui_components_HorizontalSliderLayout.__name__ = "haxe.ui.components.HorizontalSliderLayout";
haxe_ui_components_HorizontalSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components_HorizontalSliderLayout.prototype, {
	__class__: haxe_ui_components_HorizontalSliderLayout
});
class haxe_ui_components_SliderBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(component) {
		super(component);
	}
	create() {
		if(this._component.findComponent("range") == null) {
			let v = this.createValueComponent();
			v.scriptAccess = false;
			v.set_id("range");
			v.addClass("slider-value");
			v.set_start(v.set_end(0));
			this._component.addComponent(v);
		}
		this.createThumb("end-thumb");
	}
	getStartOffset() {
		return 0;
	}
	createValueComponent() {
		return null;
	}
	createThumb(id) {
		if(this._component.findComponent(id) != null) {
			return;
		}
		let b = new haxe_ui_components_Button();
		b.scriptAccess = false;
		b.set_id(id);
		b.addClass(id);
		b.set_remainPressed(true);
		this._component.addComponent(b);
		this._component.registerInternalEvents(haxe_ui_components__$Slider_Events,true);
	}
}
$hxClasses["haxe.ui.components.SliderBuilder"] = haxe_ui_components_SliderBuilder;
haxe_ui_components_SliderBuilder.__name__ = "haxe.ui.components.SliderBuilder";
haxe_ui_components_SliderBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components_SliderBuilder.prototype, {
	__class__: haxe_ui_components_SliderBuilder
});
class haxe_ui_components__$HorizontalSlider_Builder extends haxe_ui_components_SliderBuilder {
	constructor(slider) {
		super(slider);
		this._slider = slider;
	}
	createValueComponent() {
		return new haxe_ui_components_HorizontalRange();
	}
	getStartOffset() {
		let start = 0;
		if(this._slider.get_start() != null) {
			start = this._slider.get_start();
		}
		return start;
	}
}
$hxClasses["haxe.ui.components._HorizontalSlider.Builder"] = haxe_ui_components__$HorizontalSlider_Builder;
haxe_ui_components__$HorizontalSlider_Builder.__name__ = "haxe.ui.components._HorizontalSlider.Builder";
haxe_ui_components__$HorizontalSlider_Builder.__super__ = haxe_ui_components_SliderBuilder;
Object.assign(haxe_ui_components__$HorizontalSlider_Builder.prototype, {
	__class__: haxe_ui_components__$HorizontalSlider_Builder
	,_slider: null
});
class haxe_ui_components__$Image_ImageLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	get_imageScaleMode() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	resizeChildren() {
		if(this.get_component().hasImageDisplay()) {
			let image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			let imageDisplay = image.getImageDisplay();
			let maxWidth = this.get_usableSize().width;
			let maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			let scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			let scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			if(this.get_imageScaleMode() != "fill") {
				let scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	repositionChildren() {
		if(this.get_component().hasImageDisplay()) {
			let image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			let imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	calcAutoSize(exclusions) {
		let size = super.calcAutoSize(exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	refresh() {
		super.refresh();
		this.updateClipRect();
	}
	updateClipRect() {
		if(this.get_component().hasImageDisplay()) {
			let usz = this.get_usableSize();
			let imageDisplay = this.get_component().getImageDisplay();
			let rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
}
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$Image_ImageLayout.prototype, {
	__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: Object.assign({}, haxe_ui_layouts_DefaultLayout.prototype.__properties__, {get_imageScaleMode: "get_imageScaleMode"})
});
class haxe_ui_components__$Image_ResourceBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		let _gthis = this;
		new haxe_ui_util_ImageLoader(this._value).load(function(imageInfo) {
			if(imageInfo != null) {
				if(_gthis._value == null || haxe_ui_util_Variant.get_isNull(_gthis._value)) {
					_gthis._component.removeImageDisplay();
					_gthis._component.invalidateComponent();
					return;
				}
				let image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
				let display = image.getImageDisplay();
				if(display != null) {
					display.set_imageInfo(imageInfo);
					image.set_originalWidth(imageInfo.width);
					image.set_originalHeight(imageInfo.height);
					if(image.autoSize() == true && image.parentComponent != null) {
						let _this = image.parentComponent;
						if(!(_this._layout == null || _this._layoutLocked == true)) {
							_this.invalidateComponent("layout");
						}
					}
					image.invalidateComponent();
					display.validateComponent();
				}
			}
		});
	}
}
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Image_ResourceBehaviour.prototype, {
	__class__: haxe_ui_components__$Image_ResourceBehaviour
});
class haxe_ui_components__$Image_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(image) {
		super(image);
		this._image = image;
	}
	applyStyle(style) {
		if(style.resource != null) {
			this._image.set_resource(haxe_ui_util_Variant.fromString(style.resource));
		}
	}
}
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$Image_Builder.prototype, {
	__class__: haxe_ui_components__$Image_Builder
	,_image: null
});
class haxe_ui_components__$Label_LabelLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			this.get_component().getTextDisplay().set_wordWrap(true);
		} else {
			this.get_component().getTextDisplay().set_width(this.get_component().getTextDisplay().get_textWidth());
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	repositionChildren() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	calcAutoSize(exclusions) {
		let size = super.calcAutoSize(exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
}
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$Label_LabelLayout.prototype, {
	__class__: haxe_ui_components__$Label_LabelLayout
});
class haxe_ui_components__$Label_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		}
		this._component.getTextDisplay().set_text("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
	}
}
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Label_TextBehaviour.prototype, {
	__class__: haxe_ui_components__$Label_TextBehaviour
});
class haxe_ui_components__$Label_HtmlTextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		}
		this._component.getTextDisplay().set_htmlText("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
	}
}
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Label_HtmlTextBehaviour.prototype, {
	__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
class haxe_ui_components__$Label_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(label) {
		super(label);
		this._label = label;
	}
	applyStyle(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
			let tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._label.getTextDisplay().get_supportsHtml()) {
				let v = Std.string(this._component.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._label.set_htmlText(this._label.get_text());
			}
		}
	}
}
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$Label_Builder.prototype, {
	__class__: haxe_ui_components__$Label_Builder
	,_label: null
});
class haxe_ui_components_NumberStepper extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("pos",haxe_ui_components__$NumberStepper_PosBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("step",haxe_ui_components__$NumberStepper_StepBehaviour,haxe_ui_util_Variant.fromInt(1));
		this.behaviours.register("min",haxe_ui_components__$NumberStepper_MinBehaviour,null);
		this.behaviours.register("max",haxe_ui_components__$NumberStepper_MaxBehaviour,null);
		this.behaviours.register("precision",haxe_ui_components__$NumberStepper_PrecisionBehaviour,null);
	}
	get_pos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	set_pos(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	get_step() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	set_step(value) {
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"step"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"step");
		return value;
	}
	get_min() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	set_min(value) {
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	get_max() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	set_max(value) {
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	get_precision() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	set_precision(value) {
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"precision"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	get_value() {
		return this.get_pos();
	}
	set_value(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_NumberStepper();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components__$NumberStepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$NumberStepper_Builder;
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
}
$hxClasses["haxe.ui.components.NumberStepper"] = haxe_ui_components_NumberStepper;
haxe_ui_components_NumberStepper.__name__ = "haxe.ui.components.NumberStepper";
haxe_ui_components_NumberStepper.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_NumberStepper.prototype, {
	__class__: haxe_ui_components_NumberStepper
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {set_precision: "set_precision",get_precision: "get_precision",set_max: "set_max",get_max: "get_max",set_min: "set_min",get_min: "get_min",set_step: "set_step",get_step: "get_step",set_pos: "set_pos",get_pos: "get_pos"})
});
class haxe_ui_components__$NumberStepper_PosBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let step = this._component.findComponent("stepper-step",haxe_ui_components_Stepper);
		let preciseValue = haxe_ui_util_Variant.toFloat(this._value);
		if(step.get_precision() != null) {
			let precision = step.get_precision();
			if(precision == null) {
				precision = 0;
			}
			preciseValue = Math.round(preciseValue * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		let v = preciseValue;
		let min = step.get_min();
		let max = step.get_max();
		if(v == null || isNaN(v)) {
			preciseValue = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			preciseValue = v;
		}
		step.set_pos(preciseValue);
		this._component.findComponent("stepper-textfield",haxe_ui_components_TextField).set_text(haxe_ui_util_StringUtil.padDecimal(preciseValue,step.get_precision()));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._NumberStepper.PosBehaviour"] = haxe_ui_components__$NumberStepper_PosBehaviour;
haxe_ui_components__$NumberStepper_PosBehaviour.__name__ = "haxe.ui.components._NumberStepper.PosBehaviour";
haxe_ui_components__$NumberStepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$NumberStepper_PosBehaviour.prototype, {
	__class__: haxe_ui_components__$NumberStepper_PosBehaviour
});
class haxe_ui_components__$NumberStepper_StepBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromFloat(this._component.findComponent("stepper-step",haxe_ui_components_Stepper).get_step());
	}
	set(value) {
		this._component.findComponent("stepper-step",haxe_ui_components_Stepper).set_step(haxe_ui_util_Variant.toFloat(value));
	}
}
$hxClasses["haxe.ui.components._NumberStepper.StepBehaviour"] = haxe_ui_components__$NumberStepper_StepBehaviour;
haxe_ui_components__$NumberStepper_StepBehaviour.__name__ = "haxe.ui.components._NumberStepper.StepBehaviour";
haxe_ui_components__$NumberStepper_StepBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$NumberStepper_StepBehaviour.prototype, {
	__class__: haxe_ui_components__$NumberStepper_StepBehaviour
});
class haxe_ui_components__$NumberStepper_MinBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromFloat(this._component.findComponent("stepper-step",haxe_ui_components_Stepper).get_min());
	}
	set(value) {
		this._component.findComponent("stepper-step",haxe_ui_components_Stepper).set_min(haxe_ui_util_Variant.toFloat(value));
	}
}
$hxClasses["haxe.ui.components._NumberStepper.MinBehaviour"] = haxe_ui_components__$NumberStepper_MinBehaviour;
haxe_ui_components__$NumberStepper_MinBehaviour.__name__ = "haxe.ui.components._NumberStepper.MinBehaviour";
haxe_ui_components__$NumberStepper_MinBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$NumberStepper_MinBehaviour.prototype, {
	__class__: haxe_ui_components__$NumberStepper_MinBehaviour
});
class haxe_ui_components__$NumberStepper_MaxBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromFloat(this._component.findComponent("stepper-step",haxe_ui_components_Stepper).get_max());
	}
	set(value) {
		this._component.findComponent("stepper-step",haxe_ui_components_Stepper).set_max(haxe_ui_util_Variant.toFloat(value));
	}
}
$hxClasses["haxe.ui.components._NumberStepper.MaxBehaviour"] = haxe_ui_components__$NumberStepper_MaxBehaviour;
haxe_ui_components__$NumberStepper_MaxBehaviour.__name__ = "haxe.ui.components._NumberStepper.MaxBehaviour";
haxe_ui_components__$NumberStepper_MaxBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$NumberStepper_MaxBehaviour.prototype, {
	__class__: haxe_ui_components__$NumberStepper_MaxBehaviour
});
class haxe_ui_components__$NumberStepper_PrecisionBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromInt(this._component.findComponent("stepper-step",haxe_ui_components_Stepper).get_precision());
	}
	set(value) {
		this._component.findComponent("stepper-step",haxe_ui_components_Stepper).set_precision(haxe_ui_util_Variant.toInt(value));
	}
}
$hxClasses["haxe.ui.components._NumberStepper.PrecisionBehaviour"] = haxe_ui_components__$NumberStepper_PrecisionBehaviour;
haxe_ui_components__$NumberStepper_PrecisionBehaviour.__name__ = "haxe.ui.components._NumberStepper.PrecisionBehaviour";
haxe_ui_components__$NumberStepper_PrecisionBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$NumberStepper_PrecisionBehaviour.prototype, {
	__class__: haxe_ui_components__$NumberStepper_PrecisionBehaviour
});
class haxe_ui_components__$NumberStepper_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(stepper) {
		super(stepper);
		this._stepper = stepper;
	}
	create() {
		this._stepper.addClass("textfield");
		let textfield = new haxe_ui_components_TextField();
		textfield.addClass("stepper-textfield");
		textfield.set_id("stepper-textfield");
		textfield.set_restrictChars("0-9\\-\\.\\,");
		this._stepper.addComponent(textfield);
		let step = new haxe_ui_components_Stepper();
		step.addClass("stepper-step");
		step.set_id("stepper-step");
		this._stepper.addComponent(step);
	}
	applyStyle(style) {
		let textfield = this._stepper.findComponent(null,haxe_ui_components_TextField);
		if(textfield != null && (textfield.customStyle.color != style.color || textfield.customStyle.fontName != style.fontName || textfield.customStyle.fontSize != style.fontSize || textfield.customStyle.cursor != style.cursor || textfield.customStyle.textAlign != style.textAlign)) {
			textfield.customStyle.color = style.color;
			textfield.customStyle.fontName = style.fontName;
			textfield.customStyle.fontSize = style.fontSize;
			textfield.customStyle.cursor = style.cursor;
			textfield.customStyle.textAlign = style.textAlign;
			textfield.invalidateComponent("style");
		}
	}
}
$hxClasses["haxe.ui.components._NumberStepper.Builder"] = haxe_ui_components__$NumberStepper_Builder;
haxe_ui_components__$NumberStepper_Builder.__name__ = "haxe.ui.components._NumberStepper.Builder";
haxe_ui_components__$NumberStepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$NumberStepper_Builder.prototype, {
	__class__: haxe_ui_components__$NumberStepper_Builder
	,_stepper: null
});
class haxe_ui_components__$NumberStepper_Events extends haxe_ui_events_Events {
	constructor(stepper) {
		super(stepper);
		this._stepper = stepper;
	}
	register() {
		if(!this.hasEvent("mousewheel",$bind(this,this.onMouseWheel))) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(!this._stepper.hasEvent("keydown",$bind(this,this.onKeyDown))) {
			this._stepper.registerEvent("keydown",$bind(this,this.onKeyDown));
		}
		let textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		if(!textfield.hasEvent("keyup",$bind(this,this.onTextFieldKeyUp))) {
			textfield.registerEvent("keyup",$bind(this,this.onTextFieldKeyUp));
		}
		if(!textfield.hasEvent("focusin",$bind(this,this.onTextFieldFocusIn))) {
			textfield.registerEvent("focusin",$bind(this,this.onTextFieldFocusIn));
		}
		if(!textfield.hasEvent("focusout",$bind(this,this.onTextFieldFocusOut))) {
			textfield.registerEvent("focusout",$bind(this,this.onTextFieldFocusOut));
		}
		if(!textfield.hasEvent("change",$bind(this,this.onTextFieldChange))) {
			textfield.registerEvent("change",$bind(this,this.onTextFieldChange));
		}
		let step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		if(!step.hasEvent("change",$bind(this,this.onStepChange))) {
			step.registerEvent("change",$bind(this,this.onStepChange));
		}
		if(!step.hasEvent("mousedown",$bind(this,this.onStepMouseDown))) {
			step.registerEvent("mousedown",$bind(this,this.onStepMouseDown));
		}
	}
	unregister() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this._stepper.unregisterEvent("keydown",$bind(this,this.onKeyDown));
		let textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		textfield.unregisterEvent("keyup",$bind(this,this.onTextFieldKeyUp));
		textfield.unregisterEvent("focusin",$bind(this,this.onTextFieldFocusIn));
		textfield.unregisterEvent("focusout",$bind(this,this.onTextFieldFocusOut));
		textfield.unregisterEvent("change",$bind(this,this.onTextFieldChange));
		let step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		step.unregisterEvent("change",$bind(this,this.onStepChange));
		step.unregisterEvent("mousedown",$bind(this,this.onStepMouseDown));
	}
	onKeyDown(event) {
		let step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		if(event.keyCode == 38 || event.keyCode == 39 || event.keyCode == 107) {
			step.increment();
		}
		if(event.keyCode == 40 || event.keyCode == 37 || event.keyCode == 109) {
			step.deincrement();
		}
		if(event.keyCode == 36) {
			step.set_pos(step.get_min());
		}
		if(event.keyCode == 35) {
			step.set_pos(step.get_max());
		}
	}
	onMouseWheel(event) {
		event.cancel();
		this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField).set_focus(true);
		let step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		if(event.delta > 0) {
			step.increment();
		} else {
			step.deincrement();
		}
	}
	onStepChange(event) {
		let step = this._stepper.findComponent("stepper-step",haxe_ui_components_Stepper);
		this._stepper.set_pos(step.get_pos());
	}
	onStepMouseDown(event) {
		this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField).set_focus(true);
	}
	onTextFieldKeyUp(event) {
		if(event.keyCode == 13) {
			this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField).set_focus(false);
		}
		event.cancel();
	}
	onTextFieldFocusIn(event) {
		this._stepper.addClass(":active");
	}
	onTextFieldFocusOut(event) {
		this._stepper.removeClass(":active");
		let textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		if(textfield != null) {
			let tmp = this._stepper;
			let v = parseFloat(textfield.get_text());
			let min = this._stepper.get_min();
			let max = this._stepper.get_max();
			let tmp1;
			if(v == null || isNaN(v)) {
				tmp1 = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				tmp1 = v;
			}
			tmp.set_pos(tmp1);
			textfield.set_text(Std.string(this._stepper.get_pos()));
		} else {
			event.cancel();
		}
	}
	onTextFieldChange(event) {
		let textfield = this._stepper.findComponent("stepper-textfield",haxe_ui_components_TextField);
		let lastChar = textfield.get_text().charAt(textfield.get_text().length - 1);
		let maxCappedVal = Math.min(parseFloat(textfield.get_text()),this._stepper.get_max());
		textfield.set_text(maxCappedVal == null ? "null" : "" + maxCappedVal);
		if(Std.parseInt(lastChar) == null) {
			textfield.set_text(textfield.get_text() + lastChar);
		}
	}
}
$hxClasses["haxe.ui.components._NumberStepper.Events"] = haxe_ui_components__$NumberStepper_Events;
haxe_ui_components__$NumberStepper_Events.__name__ = "haxe.ui.components._NumberStepper.Events";
haxe_ui_components__$NumberStepper_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$NumberStepper_Events.prototype, {
	__class__: haxe_ui_components__$NumberStepper_Events
	,_stepper: null
});
class haxe_ui_components_OptionBox extends haxe_ui_components_CheckBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_components_OptionBoxBuilder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("componentGroup",haxe_ui_components__$OptionBox_GroupBehaviour,haxe_ui_util_Variant.fromString("defaultGroup"));
		this.behaviours.register("selected",haxe_ui_components__$OptionBox_SelectedBehaviour);
		this.behaviours.register("selectedOption",haxe_ui_components__$OptionBox_SelectedOptionBehaviour);
	}
	get_componentGroup() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	set_componentGroup(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"componentGroup",value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"componentGroup"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"componentGroup");
		return value;
	}
	get_selectedOption() {
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedOption"));
	}
	set_selectedOption(value) {
		this.behaviours.set("selectedOption",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedOption"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedOption");
		return value;
	}
	get_value() {
		return this.get_selected();
	}
	set_value(value) {
		this.set_selected(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if(this.get_selectedOption() != null) {
			c.set_selectedOption(this.get_selectedOption());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_OptionBox();
	}
}
$hxClasses["haxe.ui.components.OptionBox"] = haxe_ui_components_OptionBox;
haxe_ui_components_OptionBox.__name__ = "haxe.ui.components.OptionBox";
haxe_ui_components_OptionBox.__super__ = haxe_ui_components_CheckBox;
Object.assign(haxe_ui_components_OptionBox.prototype, {
	__class__: haxe_ui_components_OptionBox
	,__properties__: Object.assign({}, haxe_ui_components_CheckBox.prototype.__properties__, {set_selectedOption: "set_selectedOption",get_selectedOption: "get_selectedOption",set_componentGroup: "set_componentGroup",get_componentGroup: "get_componentGroup"})
});
class haxe_ui_components__$OptionBox_GroupBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
}
$hxClasses["haxe.ui.components._OptionBox.GroupBehaviour"] = haxe_ui_components__$OptionBox_GroupBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.__name__ = "haxe.ui.components._OptionBox.GroupBehaviour";
haxe_ui_components__$OptionBox_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$OptionBox_GroupBehaviour.prototype, {
	__class__: haxe_ui_components__$OptionBox_GroupBehaviour
});
class haxe_ui_components__$OptionBox_SelectedBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		if(optionbox.get_componentGroup() != null && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			let arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			let hasSelection = false;
			if(arr != null) {
				let _g = 0;
				while(_g < arr.length) {
					let option = arr[_g];
					++_g;
					if(option != this._component && option.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false) {
				this._value = haxe_ui_util_Variant.fromBool(true);
				return;
			}
		}
		if(optionbox.get_componentGroup() != null && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			let arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			if(arr != null) {
				let _g = 0;
				while(_g < arr.length) {
					let option = arr[_g];
					++_g;
					if(option != this._component) {
						option.set_selected(false);
					}
				}
			}
		}
		let valueComponent = this._component.findComponent("optionbox-value",haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			valueComponent.addClass(":selected");
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		} else {
			valueComponent.removeClass(":selected");
		}
	}
}
$hxClasses["haxe.ui.components._OptionBox.SelectedBehaviour"] = haxe_ui_components__$OptionBox_SelectedBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedBehaviour";
haxe_ui_components__$OptionBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$OptionBox_SelectedBehaviour.prototype, {
	__class__: haxe_ui_components__$OptionBox_SelectedBehaviour
});
class haxe_ui_components__$OptionBox_SelectedOptionBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		let arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
		let selectionOption = null;
		if(arr != null) {
			let _g = 0;
			while(_g < arr.length) {
				let test = arr[_g];
				++_g;
				if(test.get_selected() == true) {
					selectionOption = test;
					break;
				}
			}
		}
		return haxe_ui_util_Variant.fromComponent(selectionOption);
	}
}
$hxClasses["haxe.ui.components._OptionBox.SelectedOptionBehaviour"] = haxe_ui_components__$OptionBox_SelectedOptionBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedOptionBehaviour";
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$OptionBox_SelectedOptionBehaviour.prototype, {
	__class__: haxe_ui_components__$OptionBox_SelectedOptionBehaviour
});
class haxe_ui_components_OptionBoxBuilder extends haxe_ui_components_CheckBoxBuilder {
	constructor(checkbox) {
		super(checkbox);
	}
	get_cssName() {
		return "optionbox";
	}
}
$hxClasses["haxe.ui.components.OptionBoxBuilder"] = haxe_ui_components_OptionBoxBuilder;
haxe_ui_components_OptionBoxBuilder.__name__ = "haxe.ui.components.OptionBoxBuilder";
haxe_ui_components_OptionBoxBuilder.__super__ = haxe_ui_components_CheckBoxBuilder;
Object.assign(haxe_ui_components_OptionBoxBuilder.prototype, {
	__class__: haxe_ui_components_OptionBoxBuilder
});
class haxe_ui_components_OptionBoxGroups {
	constructor() {
		this._groups = new haxe_ds_StringMap();
	}
	get(name) {
		return this._groups.h[name];
	}
	set(name,options) {
		this._groups.h[name] = options;
	}
	add(name,optionbox) {
		let arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(optionbox) == -1) {
			arr.push(optionbox);
		}
		this.set(name,arr);
	}
	static get_instance() {
		if(haxe_ui_components_OptionBoxGroups._instance == null) {
			haxe_ui_components_OptionBoxGroups._instance = new haxe_ui_components_OptionBoxGroups();
		}
		return haxe_ui_components_OptionBoxGroups._instance;
	}
}
$hxClasses["haxe.ui.components.OptionBoxGroups"] = haxe_ui_components_OptionBoxGroups;
haxe_ui_components_OptionBoxGroups.__name__ = "haxe.ui.components.OptionBoxGroups";
haxe_ui_components_OptionBoxGroups.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_components_OptionBoxGroups.prototype, {
	__class__: haxe_ui_components_OptionBoxGroups
	,_groups: null
});
class haxe_ui_components__$Progress_Pos extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromFloat((js_Boot.__cast(this._component , haxe_ui_components_Progress)).get_end());
	}
	set(value) {
		(js_Boot.__cast(this._component , haxe_ui_components_Progress)).set_end(haxe_ui_util_Variant.toFloat(value));
	}
}
$hxClasses["haxe.ui.components._Progress.Pos"] = haxe_ui_components__$Progress_Pos;
haxe_ui_components__$Progress_Pos.__name__ = "haxe.ui.components._Progress.Pos";
haxe_ui_components__$Progress_Pos.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$Progress_Pos.prototype, {
	__class__: haxe_ui_components__$Progress_Pos
});
class haxe_ui_components__$Progress_Min extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		(js_Boot.__cast(this._component , haxe_ui_components_Progress)).set_start(haxe_ui_util_Variant.toFloat(value));
	}
}
$hxClasses["haxe.ui.components._Progress.Min"] = haxe_ui_components__$Progress_Min;
haxe_ui_components__$Progress_Min.__name__ = "haxe.ui.components._Progress.Min";
haxe_ui_components__$Progress_Min.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$Progress_Min.prototype, {
	__class__: haxe_ui_components__$Progress_Min
});
class haxe_ui_components__$Progress_Indeterminate extends haxe_ui_behaviours_ValueBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return this._value;
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		super.set(value);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeClass(":indeterminate");
		} else {
			this._component.addClass(":indeterminate");
		}
	}
	detatch() {
		super.detatch();
		this._component.removeClass(":indeterminate");
	}
}
$hxClasses["haxe.ui.components._Progress.Indeterminate"] = haxe_ui_components__$Progress_Indeterminate;
haxe_ui_components__$Progress_Indeterminate.__name__ = "haxe.ui.components._Progress.Indeterminate";
haxe_ui_components__$Progress_Indeterminate.__super__ = haxe_ui_behaviours_ValueBehaviour;
Object.assign(haxe_ui_components__$Progress_Indeterminate.prototype, {
	__class__: haxe_ui_components__$Progress_Indeterminate
});
class haxe_ui_components__$Range_RangeMin extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_min(haxe_ui_util_Variant.toFloat(this._value));
		if(range.get_start() < range.get_min()) {
			range.set_start(range.get_min());
		}
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._Range.RangeMin"] = haxe_ui_components__$Range_RangeMin;
haxe_ui_components__$Range_RangeMin.__name__ = "haxe.ui.components._Range.RangeMin";
haxe_ui_components__$Range_RangeMin.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Range_RangeMin.prototype, {
	__class__: haxe_ui_components__$Range_RangeMin
});
class haxe_ui_components__$Range_RangeMax extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		range.set_max(haxe_ui_util_Variant.toFloat(this._value));
		if(range.get_end() > range.get_max()) {
			range.set_end(range.get_max());
		}
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._Range.RangeMax"] = haxe_ui_components__$Range_RangeMax;
haxe_ui_components__$Range_RangeMax.__name__ = "haxe.ui.components._Range.RangeMax";
haxe_ui_components__$Range_RangeMax.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Range_RangeMax.prototype, {
	__class__: haxe_ui_components__$Range_RangeMax
});
class haxe_ui_components__$Range_RangeStart extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_max());
		}
		range.set_start(haxe_ui_util_Variant.toFloat(this._value));
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._Range.RangeStart"] = haxe_ui_components__$Range_RangeStart;
haxe_ui_components__$Range_RangeStart.__name__ = "haxe.ui.components._Range.RangeStart";
haxe_ui_components__$Range_RangeStart.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Range_RangeStart.prototype, {
	__class__: haxe_ui_components__$Range_RangeStart
});
class haxe_ui_components__$Range_RangeEnd extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(range.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_min());
		} else if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(range.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(range.get_max());
		}
		range.set_end(haxe_ui_util_Variant.toFloat(this._value));
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._Range.RangeEnd"] = haxe_ui_components__$Range_RangeEnd;
haxe_ui_components__$Range_RangeEnd.__name__ = "haxe.ui.components._Range.RangeEnd";
haxe_ui_components__$Range_RangeEnd.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Range_RangeEnd.prototype, {
	__class__: haxe_ui_components__$Range_RangeEnd
});
class haxe_ui_components__$Range_AllowInteraction extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromBool(this._component._internalEvents != null);
	}
	set(value) {
		if(this._component.get_native() == true) {
			return;
		}
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(true))) {
			this._component.registerInternalEvents(haxe_ui_components__$Range_Events);
		} else {
			this._component.unregisterInternalEvents();
		}
	}
}
$hxClasses["haxe.ui.components._Range.AllowInteraction"] = haxe_ui_components__$Range_AllowInteraction;
haxe_ui_components__$Range_AllowInteraction.__name__ = "haxe.ui.components._Range.AllowInteraction";
haxe_ui_components__$Range_AllowInteraction.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_components__$Range_AllowInteraction.prototype, {
	__class__: haxe_ui_components__$Range_AllowInteraction
});
class haxe_ui_components__$Range_Events extends haxe_ui_events_Events {
	constructor(range) {
		super(range);
		this._range = range;
		this.register();
	}
	register() {
		this._range.registerEvent("mousedown",$bind(this,this.onMouseDown));
	}
	unregister() {
		this._range.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	onMouseDown(e) {
		let pt = new haxe_ui_geom_Point(e.get_localX(),e.get_localY());
		this.applyPos(this._range.posFromCoord(pt));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	onScreenMouseUp(e) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	onScreenMouseMove(e) {
		let pt = new haxe_ui_geom_Point(e.screenX - this._range.get_screenLeft(),e.screenY - this._range.get_screenTop());
		this.applyPos(this._range.posFromCoord(pt));
	}
	applyPos(pos) {
		let precision = this._range.get_precision();
		if(precision == null) {
			precision = 0;
		}
		pos = Math.round(pos * Math.pow(10,precision)) / Math.pow(10,precision);
		if(this._range.get_step() > 0) {
			pos = Math.ceil(pos / this._range.get_step()) * this._range.get_step();
		}
		if(((this._range) instanceof haxe_ui_components_Progress)) {
			(js_Boot.__cast(this._range , haxe_ui_components_Progress)).set_pos(pos);
			return;
		}
		let d1 = this._range.get_end() - this._range.get_start();
		let d2 = pos - this._range.get_start();
		if(d2 < d1 / 2) {
			this._range.set_start(pos);
		} else if(d2 >= d1 / 2) {
			this._range.set_end(pos);
		} else if(pos > this._range.get_start()) {
			this._range.set_end(pos);
		} else if(pos < this._range.get_end()) {
			this._range.set_start(pos);
		}
	}
}
$hxClasses["haxe.ui.components._Range.Events"] = haxe_ui_components__$Range_Events;
haxe_ui_components__$Range_Events.__name__ = "haxe.ui.components._Range.Events";
haxe_ui_components__$Range_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$Range_Events.prototype, {
	__class__: haxe_ui_components__$Range_Events
	,_range: null
});
class haxe_ui_components__$Range_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(component) {
		super(component);
	}
	create() {
		super.create();
		if(this._component.findComponent("${_component.cssName}-value") == null) {
			let v = new haxe_ui_core_Component();
			v.set_id("" + this._component.get_cssName() + "-value");
			v.addClass("" + this._component.get_cssName() + "-value",false);
			this._component.addComponent(v);
		}
	}
}
$hxClasses["haxe.ui.components._Range.Builder"] = haxe_ui_components__$Range_Builder;
haxe_ui_components__$Range_Builder.__name__ = "haxe.ui.components._Range.Builder";
haxe_ui_components__$Range_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$Range_Builder.prototype, {
	__class__: haxe_ui_components__$Range_Builder
});
class haxe_ui_components__$Scroll_Events extends haxe_ui_events_Events {
	constructor(scroll) {
		super(scroll);
		this._scroll = scroll;
		this._deincButton = this._scroll.findComponent("scroll-deinc-button");
		this._incButton = this._scroll.findComponent("scroll-inc-button");
		this._thumb = this._scroll.findComponent("scroll-thumb-button");
	}
	register() {
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._deincButton != null && this._deincButton.hasEvent("click",$bind(this,this.onDeinc)) == false) {
			this._deincButton.registerEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null && this._incButton.hasEvent("click",$bind(this,this.onInc)) == false) {
			this._incButton.registerEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null && this._thumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._thumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	unregister() {
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		if(this._deincButton != null) {
			this._deincButton.unregisterEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null) {
			this._incButton.unregisterEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null) {
			this._thumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	onMouseDown(event) {
		let componentOffset = this._scroll.getComponentOffset();
		if(this._deincButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false && this._incButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false) {
			this._scroll.applyPageFromCoord(new haxe_ui_geom_Point(event.screenX - componentOffset.x,event.screenY - componentOffset.y));
		}
	}
	onDeinc(event) {
		let fh = this._scroll;
		fh.set_pos(fh.get_pos() - this._scroll.get_increment());
	}
	onInc(event) {
		let fh = this._scroll;
		fh.set_pos(fh.get_pos() + this._scroll.get_increment());
	}
	onThumbMouseDown(event) {
		event.cancel();
		this._mouseDownOffset = new haxe_ui_geom_Point();
		let tmp = event.screenX - this._thumb.get_left();
		let tmp1 = this._scroll.get_layout().get_paddingLeft();
		this._mouseDownOffset.x = tmp + tmp1;
		let tmp2 = event.screenY - this._thumb.get_top();
		let tmp3 = this._scroll.get_layout().get_paddingTop();
		this._mouseDownOffset.y = tmp2 + tmp3;
		this._scroll.get_screen().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	onScreenMouseUp(event) {
		this._mouseDownOffset = null;
		this._scroll.get_screen().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	onScreenMouseMove(event) {
		if(this._mouseDownOffset == null) {
			return;
		}
		this._scroll.set_pos(this._scroll.posFromCoord(new haxe_ui_geom_Point(event.screenX - this._mouseDownOffset.x,event.screenY - this._mouseDownOffset.y)));
	}
}
$hxClasses["haxe.ui.components._Scroll.Events"] = haxe_ui_components__$Scroll_Events;
haxe_ui_components__$Scroll_Events.__name__ = "haxe.ui.components._Scroll.Events";
haxe_ui_components__$Scroll_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$Scroll_Events.prototype, {
	__class__: haxe_ui_components__$Scroll_Events
	,_scroll: null
	,_deincButton: null
	,_incButton: null
	,_thumb: null
	,_mouseDownOffset: null
});
class haxe_ui_components__$Scroll_ScrollValueBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		super.set(value);
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	validateData() {
		let scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		let pos = scroll.get_pos();
		let min = scroll.get_min();
		let max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		scroll.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._Scroll.ScrollValueBehaviour"] = haxe_ui_components__$Scroll_ScrollValueBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollValueBehaviour";
haxe_ui_components__$Scroll_ScrollValueBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Scroll_ScrollValueBehaviour.prototype, {
	__class__: haxe_ui_components__$Scroll_ScrollValueBehaviour
});
class haxe_ui_components__$Slider_StartBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._component.findComponent("start-thumb") == null) {
			builder.createThumb("start-thumb");
		}
		let slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			let v = haxe_ui_util_Variant.toFloat(this._value);
			let precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util_Variant.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_start(haxe_ui_util_Variant.toFloat(this._value));
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._Slider.StartBehaviour"] = haxe_ui_components__$Slider_StartBehaviour;
haxe_ui_components__$Slider_StartBehaviour.__name__ = "haxe.ui.components._Slider.StartBehaviour";
haxe_ui_components__$Slider_StartBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Slider_StartBehaviour.prototype, {
	__class__: haxe_ui_components__$Slider_StartBehaviour
});
class haxe_ui_components__$Slider_EndBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let slider = js_Boot.__cast(this._component , haxe_ui_components_Slider);
		if(this._value != null && haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_min()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_min());
		}
		if(this._value != null && haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromFloat(slider.get_max()))) {
			this._value = haxe_ui_util_Variant.fromFloat(slider.get_max());
		}
		if(slider.get_precision() != null) {
			let v = haxe_ui_util_Variant.toFloat(this._value);
			let precision = slider.get_precision();
			if(precision == null) {
				precision = 0;
			}
			this._value = haxe_ui_util_Variant.fromFloat(Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_end(haxe_ui_util_Variant.toFloat(this._value));
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_pos(haxe_ui_util_Variant.toFloat(this._value));
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._Slider.EndBehaviour"] = haxe_ui_components__$Slider_EndBehaviour;
haxe_ui_components__$Slider_EndBehaviour.__name__ = "haxe.ui.components._Slider.EndBehaviour";
haxe_ui_components__$Slider_EndBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Slider_EndBehaviour.prototype, {
	__class__: haxe_ui_components__$Slider_EndBehaviour
});
class haxe_ui_components__$Slider_MinBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_start() == null) {
			this._component.findComponent(null,haxe_ui_components_Range).set_start(haxe_ui_util_Variant.toFloat(this._value));
		}
		this._component.findComponent(null,haxe_ui_components_Range).set_min(haxe_ui_util_Variant.toFloat(this._value));
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._Slider.MinBehaviour"] = haxe_ui_components__$Slider_MinBehaviour;
haxe_ui_components__$Slider_MinBehaviour.__name__ = "haxe.ui.components._Slider.MinBehaviour";
haxe_ui_components__$Slider_MinBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Slider_MinBehaviour.prototype, {
	__class__: haxe_ui_components__$Slider_MinBehaviour
});
class haxe_ui_components__$Slider_MaxBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		this._component.findComponent(null,haxe_ui_components_Range).set_max(haxe_ui_util_Variant.toFloat(this._value));
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._Slider.MaxBehaviour"] = haxe_ui_components__$Slider_MaxBehaviour;
haxe_ui_components__$Slider_MaxBehaviour.__name__ = "haxe.ui.components._Slider.MaxBehaviour";
haxe_ui_components__$Slider_MaxBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Slider_MaxBehaviour.prototype, {
	__class__: haxe_ui_components__$Slider_MaxBehaviour
});
class haxe_ui_components__$Slider_PosBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromFloat((js_Boot.__cast(this._component , haxe_ui_components_Slider)).get_end());
	}
	validateData() {
		(js_Boot.__cast(this._component , haxe_ui_components_Slider)).set_end(haxe_ui_util_Variant.toFloat(this._value));
	}
}
$hxClasses["haxe.ui.components._Slider.PosBehaviour"] = haxe_ui_components__$Slider_PosBehaviour;
haxe_ui_components__$Slider_PosBehaviour.__name__ = "haxe.ui.components._Slider.PosBehaviour";
haxe_ui_components__$Slider_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Slider_PosBehaviour.prototype, {
	__class__: haxe_ui_components__$Slider_PosBehaviour
});
class haxe_ui_components__$Slider_PosFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(coord) {
		return haxe_ui_util_Variant.fromFloat(this._component.findComponent(null,haxe_ui_components_Range).posFromCoord(coord));
	}
}
$hxClasses["haxe.ui.components._Slider.PosFromCoord"] = haxe_ui_components__$Slider_PosFromCoord;
haxe_ui_components__$Slider_PosFromCoord.__name__ = "haxe.ui.components._Slider.PosFromCoord";
haxe_ui_components__$Slider_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Slider_PosFromCoord.prototype, {
	__class__: haxe_ui_components__$Slider_PosFromCoord
});
class haxe_ui_components__$Slider_Events extends haxe_ui_events_Events {
	constructor(slider) {
		haxe_ui_events_Events._hx_skip_constructor = true;
		super();
		haxe_ui_events_Events._hx_skip_constructor = false;
		this._hx_constructor(slider);
	}
	_hx_constructor(slider) {
		this._offset = null;
		super._hx_constructor(slider);
		this._slider = slider;
		this._range = slider.findComponent(null,haxe_ui_components_Range);
	}
	register() {
		this._startThumb = this._slider.findComponent("start-thumb");
		if(this._startThumb != null && this._startThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._startThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		this._endThumb = this._slider.findComponent("end-thumb");
		if(this._endThumb != null && this._endThumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._endThumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._range.hasEvent("mousedown",$bind(this,this.onRangeMouseDown)) == false) {
			this._range.registerEvent("mousedown",$bind(this,this.onRangeMouseDown));
		}
		if(this._range.hasEvent("change",$bind(this,this.onRangeChange)) == false) {
			this._range.registerEvent("change",$bind(this,this.onRangeChange));
		}
	}
	unregister() {
		if(this._startThumb != null) {
			this._startThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		if(this._endThumb != null) {
			this._endThumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
		this._range.unregisterEvent("mousedown",$bind(this,this.onRangeMouseDown));
		this._range.unregisterEvent("change",$bind(this,this.onRangeChange));
	}
	onRangeChange(e) {
		this._slider.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	onRangeMouseDown(e) {
		if(this._startThumb != null && this._startThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		if(this._endThumb != null && this._endThumb.hitTest(e.screenX,e.screenY) == true) {
			return;
		}
		e.cancel();
		let coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._slider.get_paddingLeft();
		coord.y = e.screenY - this._slider.get_screenTop() - this._slider.get_paddingTop();
		let pos = this._slider.posFromCoord(coord);
		if(this._startThumb == null) {
			this._slider.set_pos(pos);
			this.startDrag(this._endThumb,this._endThumb.get_width() / 2,this._endThumb.get_height() / 2);
			return;
		}
		let builder = js_Boot.__cast(this._slider._compositeBuilder , haxe_ui_components_SliderBuilder);
		let d1 = this._slider.get_end() - this._slider.get_start();
		let d2 = pos - this._slider.get_start();
		if(d2 < d1 / 2) {
			pos -= builder.getStartOffset();
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_width() / 2,this._startThumb.get_height() / 2);
		} else if(d2 >= d1 / 2) {
			pos -= builder.getStartOffset();
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_width() / 2,this._endThumb.get_height() / 2);
		} else if(pos > this._slider.get_start()) {
			this._slider.set_end(pos);
			this.startDrag(this._endThumb,this._endThumb.get_width() / 2,this._endThumb.get_height() / 2);
		} else if(pos < this._slider.get_end()) {
			this._slider.set_start(pos);
			this.startDrag(this._startThumb,this._startThumb.get_width() / 2,this._startThumb.get_height() / 2);
		}
	}
	onThumbMouseDown(e) {
		e.cancel();
		this.startDrag(js_Boot.__cast(e.target , haxe_ui_components_Button),e.get_localX(),e.get_localY());
	}
	startDrag(thumb,offsetX,offsetY) {
		this._offset = new haxe_ui_geom_Point(offsetX,offsetY);
		this._activeThumb = thumb;
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	onScreenMouseUp(e) {
		this._activeThumb = null;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	onScreenMouseMove(e) {
		let coord = new haxe_ui_geom_Point();
		coord.x = e.screenX - this._slider.get_screenLeft() - this._offset.x - this._slider.get_paddingLeft() + this._activeThumb.get_width() / 2;
		coord.y = e.screenY - this._slider.get_screenTop() - this._offset.y - this._slider.get_paddingTop() + this._activeThumb.get_height() / 2;
		let pos = this._slider.posFromCoord(coord);
		let builder = js_Boot.__cast(this._slider._compositeBuilder , haxe_ui_components_SliderBuilder);
		if(this._activeThumb == this._startThumb) {
			pos -= builder.getStartOffset();
			if(pos > this._slider.get_end()) {
				pos = this._slider.get_end();
			}
			this._slider.set_start(pos);
		} else if(this._activeThumb == this._endThumb) {
			pos -= builder.getStartOffset();
			this._slider.set_end(pos);
		}
	}
}
$hxClasses["haxe.ui.components._Slider.Events"] = haxe_ui_components__$Slider_Events;
haxe_ui_components__$Slider_Events.__name__ = "haxe.ui.components._Slider.Events";
haxe_ui_components__$Slider_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$Slider_Events.prototype, {
	__class__: haxe_ui_components__$Slider_Events
	,_slider: null
	,_endThumb: null
	,_startThumb: null
	,_range: null
	,_activeThumb: null
	,_offset: null
});
class haxe_ui_components_Spacer extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Spacer();
	}
}
$hxClasses["haxe.ui.components.Spacer"] = haxe_ui_components_Spacer;
haxe_ui_components_Spacer.__name__ = "haxe.ui.components.Spacer";
haxe_ui_components_Spacer.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_Spacer.prototype, {
	__class__: haxe_ui_components_Spacer
});
class haxe_ui_components_Stepper extends haxe_ui_containers_VBox {
	constructor() {
		super();
	}
	increment() {
		return this.behaviours.call("increment",null);
	}
	deincrement() {
		return this.behaviours.call("deincrement",null);
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components__$Stepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$Stepper_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("pos",haxe_ui_components__$Stepper_PosBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
		this.behaviours.register("min",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("max",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("increment",haxe_ui_components__$Stepper_IncBehaviour);
		this.behaviours.register("deincrement",haxe_ui_components__$Stepper_DeincBehaviour);
	}
	get_pos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	set_pos(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	get_step() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	set_step(value) {
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"step"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"step");
		return value;
	}
	get_min() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	set_min(value) {
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"min");
		return value;
	}
	get_max() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	set_max(value) {
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"max");
		return value;
	}
	get_precision() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	set_precision(value) {
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"precision"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"precision");
		return value;
	}
	get_repeater() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	set_repeater(value) {
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeater"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeater");
		return value;
	}
	get_repeatInterval() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	set_repeatInterval(value) {
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeatInterval"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"repeatInterval");
		return value;
	}
	get_value() {
		return this.get_pos();
	}
	set_value(value) {
		this.set_pos(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pos");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Stepper();
	}
}
$hxClasses["haxe.ui.components.Stepper"] = haxe_ui_components_Stepper;
haxe_ui_components_Stepper.__name__ = "haxe.ui.components.Stepper";
haxe_ui_components_Stepper.__super__ = haxe_ui_containers_VBox;
Object.assign(haxe_ui_components_Stepper.prototype, {
	__class__: haxe_ui_components_Stepper
	,__properties__: Object.assign({}, haxe_ui_containers_VBox.prototype.__properties__, {set_repeatInterval: "set_repeatInterval",get_repeatInterval: "get_repeatInterval",set_repeater: "set_repeater",get_repeater: "get_repeater",set_precision: "set_precision",get_precision: "get_precision",set_max: "set_max",get_max: "get_max",set_min: "set_min",get_min: "get_min",set_step: "set_step",get_step: "get_step",set_pos: "set_pos",get_pos: "get_pos"})
});
class haxe_ui_components__$Stepper_PosBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		let v = haxe_ui_util_Variant.toFloat(this._value);
		let min = stepper.get_min();
		let max = stepper.get_max();
		let v1;
		if(v == null || isNaN(v)) {
			v1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			v1 = v;
		}
		stepper.set_pos(v1);
		this._value = haxe_ui_util_Variant.fromFloat(v1);
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.components._Stepper.PosBehaviour"] = haxe_ui_components__$Stepper_PosBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.__name__ = "haxe.ui.components._Stepper.PosBehaviour";
haxe_ui_components__$Stepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Stepper_PosBehaviour.prototype, {
	__class__: haxe_ui_components__$Stepper_PosBehaviour
});
class haxe_ui_components__$Stepper_IncBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		let newPos = stepper.get_pos();
		newPos += stepper.get_step();
		if(stepper.get_max() != null && newPos > stepper.get_max()) {
			newPos = stepper.get_max();
		}
		if(stepper.get_precision() != null) {
			let precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
}
$hxClasses["haxe.ui.components._Stepper.IncBehaviour"] = haxe_ui_components__$Stepper_IncBehaviour;
haxe_ui_components__$Stepper_IncBehaviour.__name__ = "haxe.ui.components._Stepper.IncBehaviour";
haxe_ui_components__$Stepper_IncBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Stepper_IncBehaviour.prototype, {
	__class__: haxe_ui_components__$Stepper_IncBehaviour
});
class haxe_ui_components__$Stepper_DeincBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		let newPos = stepper.get_pos();
		newPos -= stepper.get_step();
		if(stepper.get_min() != null && newPos < stepper.get_min()) {
			newPos = stepper.get_min();
		}
		if(stepper.get_precision() != null) {
			let precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
}
$hxClasses["haxe.ui.components._Stepper.DeincBehaviour"] = haxe_ui_components__$Stepper_DeincBehaviour;
haxe_ui_components__$Stepper_DeincBehaviour.__name__ = "haxe.ui.components._Stepper.DeincBehaviour";
haxe_ui_components__$Stepper_DeincBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$Stepper_DeincBehaviour.prototype, {
	__class__: haxe_ui_components__$Stepper_DeincBehaviour
});
class haxe_ui_components__$Stepper_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(stepper) {
		super(stepper);
		this._stepper = stepper;
	}
	create() {
		let button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-inc");
		button.set_id("stepper-inc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
		let button1 = new haxe_ui_components_Button();
		button1.set_styleNames("stepper-button stepper-deinc");
		button1.set_id("stepper-deinc");
		button1.set_repeater(this._stepper.get_repeater());
		button1.set_easeInRepeater(true);
		button1.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button1);
	}
}
$hxClasses["haxe.ui.components._Stepper.Builder"] = haxe_ui_components__$Stepper_Builder;
haxe_ui_components__$Stepper_Builder.__name__ = "haxe.ui.components._Stepper.Builder";
haxe_ui_components__$Stepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$Stepper_Builder.prototype, {
	__class__: haxe_ui_components__$Stepper_Builder
	,_stepper: null
});
class haxe_ui_components__$Stepper_Events extends haxe_ui_events_Events {
	constructor(stepper) {
		super(stepper);
		this._stepper = stepper;
	}
	register() {
		let button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onInc))) {
			button.registerEvent("click",$bind(this,this.onInc));
		}
		let button1 = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		if(!button1.hasEvent("click",$bind(this,this.onDeinc))) {
			button1.registerEvent("click",$bind(this,this.onDeinc));
		}
	}
	unregister() {
		this._stepper.findComponent("stepper-inc",haxe_ui_components_Button).unregisterEvent("click",$bind(this,this.onInc));
		this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button).unregisterEvent("click",$bind(this,this.onDeinc));
	}
	onInc(event) {
		this._stepper.increment();
	}
	onDeinc(event) {
		this._stepper.deincrement();
	}
}
$hxClasses["haxe.ui.components._Stepper.Events"] = haxe_ui_components__$Stepper_Events;
haxe_ui_components__$Stepper_Events.__name__ = "haxe.ui.components._Stepper.Events";
haxe_ui_components__$Stepper_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$Stepper_Events.prototype, {
	__class__: haxe_ui_components__$Stepper_Events
	,_stepper: null
});
class haxe_ui_components_Switch extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_components__$Switch_Builder;
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("selected",haxe_ui_components__$Switch_SelectedBehaviour);
		this.behaviours.register("value",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Switch_TextBehaviour);
		this.behaviours.register("textOn",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("textOff",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_selected() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	set_selected(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	get_textOn() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("textOn"));
	}
	set_textOn(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"textOn",value);
					return value;
				}
			}
		}
		this.behaviours.set("textOn",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"textOn"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"textOn");
		return value;
	}
	get_textOff() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("textOff"));
	}
	set_textOff(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"textOff",value);
					return value;
				}
			}
		}
		this.behaviours.set("textOff",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"textOff"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"textOff");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_selected(this.get_selected());
		if(this.get_textOn() != null) {
			c.set_textOn(this.get_textOn());
		}
		if(this.get_textOff() != null) {
			c.set_textOff(this.get_textOff());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Switch();
	}
}
$hxClasses["haxe.ui.components.Switch"] = haxe_ui_components_Switch;
haxe_ui_components_Switch.__name__ = "haxe.ui.components.Switch";
haxe_ui_components_Switch.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_Switch.prototype, {
	__class__: haxe_ui_components_Switch
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_textOff: "set_textOff",get_textOff: "get_textOff",set_textOn: "set_textOn",get_textOn: "get_textOn",set_selected: "set_selected",get_selected: "get_selected"})
});
class haxe_ui_components__$Switch_SelectedBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		this._component.findComponent(null,haxe_ui_components__$Switch_SwitchButtonSub).set_selected(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.components._Switch.SelectedBehaviour"] = haxe_ui_components__$Switch_SelectedBehaviour;
haxe_ui_components__$Switch_SelectedBehaviour.__name__ = "haxe.ui.components._Switch.SelectedBehaviour";
haxe_ui_components__$Switch_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Switch_SelectedBehaviour.prototype, {
	__class__: haxe_ui_components__$Switch_SelectedBehaviour
});
class haxe_ui_components__$Switch_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_styleNames("switch-label");
			label.set_id("switch-label");
			label.scriptAccess = false;
			this._component.addComponentAt(label,0);
			let spacer = new haxe_ui_components_Spacer();
			spacer.set_percentWidth(100);
			this._component.addComponentAt(spacer,1);
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.components._Switch.TextBehaviour"] = haxe_ui_components__$Switch_TextBehaviour;
haxe_ui_components__$Switch_TextBehaviour.__name__ = "haxe.ui.components._Switch.TextBehaviour";
haxe_ui_components__$Switch_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$Switch_TextBehaviour.prototype, {
	__class__: haxe_ui_components__$Switch_TextBehaviour
});
class haxe_ui_components__$Switch_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(s) {
		super(s);
		this._switch = s;
	}
	create() {
		let _gthis = this;
		if(this._button == null) {
			this._button = new haxe_ui_components__$Switch_SwitchButtonSub();
			this._button.set_onChange(function(e) {
				_gthis._switch.set_selected(_gthis._button.get_selected());
				_gthis._switch.dispatch(new haxe_ui_events_UIEvent("change"));
			});
			this._component.addComponent(this._button);
		}
	}
}
$hxClasses["haxe.ui.components._Switch.Builder"] = haxe_ui_components__$Switch_Builder;
haxe_ui_components__$Switch_Builder.__name__ = "haxe.ui.components._Switch.Builder";
haxe_ui_components__$Switch_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$Switch_Builder.prototype, {
	__class__: haxe_ui_components__$Switch_Builder
	,_switch: null
	,_button: null
});
class haxe_ui_components__$Switch_SwitchButtonSub extends haxe_ui_core_InteractiveComponent {
	constructor() {
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._pos = 0;
		this._unselectedText = "";
		this._selectedText = "";
		this._selected = false;
		super._hx_constructor();
	}
	createChildren() {
		super.createChildren();
		let _gthis = this;
		if(this._button == null) {
			this._label = new haxe_ui_components_Label();
			this._label.set_id("switch-label");
			this._label.addClass("switch-label");
			this._label.set_text(this._unselectedText);
			this.addComponent(this._label);
			this._button = new haxe_ui_components_Button();
			this._button.set_id("switch-button");
			this._button.addClass("switch-button");
			this.addComponent(this._button);
			this.set_onClick(function(e) {
				_gthis.set_selected(!_gthis.get_selected());
			});
			let component = new haxe_ui_core_Component();
			component.addClass("switch-button-sub-extra");
			this.addComponentAt(component,0);
		}
	}
	get_selected() {
		return this._selected;
	}
	set_selected(value) {
		if(value == this._selected) {
			return value;
		}
		this.invalidateComponent("data");
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout");
		}
		this._selected = value;
		if(this._selected == false) {
			this._label.set_text(this._unselectedText);
			this._label.removeClass(":selected");
			this.removeClass(":selected",true,true);
			this.addClass(":unselected",true,true);
		} else {
			this._label.set_text(this._selectedText);
			this._label.addClass(":selected");
			this.removeClass(":unselected",true,true);
			this.addClass(":selected",true,true);
		}
		this.dispatch(new haxe_ui_events_UIEvent("change"));
		return value;
	}
	get_pos() {
		return this._pos;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components__$Switch_SwitchButtonSub();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components__$Switch_SwitchButtonLayout;
	}
}
$hxClasses["haxe.ui.components._Switch.SwitchButtonSub"] = haxe_ui_components__$Switch_SwitchButtonSub;
haxe_ui_components__$Switch_SwitchButtonSub.__name__ = "haxe.ui.components._Switch.SwitchButtonSub";
haxe_ui_components__$Switch_SwitchButtonSub.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components__$Switch_SwitchButtonSub.prototype, {
	__class__: haxe_ui_components__$Switch_SwitchButtonSub
	,_button: null
	,_label: null
	,_selected: null
	,_selectedText: null
	,_unselectedText: null
	,_pos: null
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {get_pos: "get_pos",set_selected: "set_selected",get_selected: "get_selected"})
});
class haxe_ui_components__$Switch_SwitchButtonLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		let switchComp = js_Boot.__cast(this._component , haxe_ui_components__$Switch_SwitchButtonSub);
		let button = switchComp.findComponent("switch-button");
		let label = switchComp.findComponent("switch-label");
		if(button == null || label == null) {
			return;
		}
		button.set_top(this.get_paddingTop());
		label.set_top(this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2);
		if(switchComp.get_selected() == true) {
			label.set_left(button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		} else {
			label.set_left(button.get_left() + button.get_componentWidth() + button.get_componentWidth() / 2 - label.get_componentWidth() / 2);
		}
		let ucx = this.get_usableWidth() - button.get_width();
		let x = switchComp.get_pos() / 100 * ucx;
		button.set_left(this.get_paddingLeft() + x);
		let extra = switchComp.findComponent("switch-button-sub-extra",null,null,"css");
		if(extra != null) {
			extra.set_top(this._component.get_height() / 2 - extra.get_height() / 2);
		}
	}
}
$hxClasses["haxe.ui.components._Switch.SwitchButtonLayout"] = haxe_ui_components__$Switch_SwitchButtonLayout;
haxe_ui_components__$Switch_SwitchButtonLayout.__name__ = "haxe.ui.components._Switch.SwitchButtonLayout";
haxe_ui_components__$Switch_SwitchButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$Switch_SwitchButtonLayout.prototype, {
	__class__: haxe_ui_components__$Switch_SwitchButtonLayout
});
class haxe_ui_components_TabBar extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	removeTab(index) {
		return this.behaviours.call("removeTab",index);
	}
	getTab(index) {
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getTab",index));
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_components__$TabBar_Builder;
		this._internalEventsClass = haxe_ui_components__$TabBar_Events;
		this._defaultLayoutClass = haxe_ui_components_TabBarLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("selectedIndex",haxe_ui_components__$TabBar_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedTab",haxe_ui_components__$TabBar_SelectedTab);
		this.behaviours.register("tabPosition",haxe_ui_components__$TabBar_TabPosition,haxe_ui_util_Variant.fromString("top"));
		this.behaviours.register("tabCount",haxe_ui_components__$TabBar_TabCount);
		this.behaviours.register("closable",haxe_ui_components__$TabBar_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("removeTab",haxe_ui_components__$TabBar_RemoveTab);
		this.behaviours.register("getTab",haxe_ui_components__$TabBar_GetTab);
	}
	get_selectedIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	set_selectedIndex(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	get_selectedTab() {
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedTab"));
	}
	get_tabPosition() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("tabPosition"));
	}
	set_tabPosition(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"tabPosition",value);
					return value;
				}
			}
		}
		this.behaviours.set("tabPosition",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tabPosition"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"tabPosition");
		return value;
	}
	get_tabCount() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("tabCount"));
	}
	get_closable() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("closable"));
	}
	set_closable(value) {
		this.behaviours.set("closable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"closable"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"closable");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_TabBar();
	}
}
$hxClasses["haxe.ui.components.TabBar"] = haxe_ui_components_TabBar;
haxe_ui_components_TabBar.__name__ = "haxe.ui.components.TabBar";
haxe_ui_components_TabBar.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_TabBar.prototype, {
	__class__: haxe_ui_components_TabBar
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_closable: "set_closable",get_closable: "get_closable",get_tabCount: "get_tabCount",set_tabPosition: "set_tabPosition",get_tabPosition: "get_tabPosition",get_selectedTab: "get_selectedTab",set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex"})
});
class haxe_ui_components_TabBarLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		super.repositionChildren();
		let filler = this._component.findComponent("tabbar-filler",null,false);
		if(filler != null) {
			let container = this._component.findComponent("tabbar-contents",null,false);
			filler.set_width(this._component.get_width() - container.get_width());
			filler.set_height(this._component.get_height());
			filler.set_left(container.get_width());
		}
		let left = this._component.findComponent("tabbar-scroll-left",null,false);
		let right = this._component.findComponent("tabbar-scroll-right",null,false);
		if(left != null && this.hidden(left) == false) {
			let x = this._component.get_width() - left.get_width();
			if(right != null) {
				x -= right.get_width();
			}
			left.set_left(x + 1);
			left.set_top(this._component.get_height() / 2 - left.get_height() / 2);
		}
		if(right != null && this.hidden(right) == false) {
			right.set_left(this._component.get_width() - right.get_width());
			right.set_top(this._component.get_height() / 2 - right.get_height() / 2);
		}
	}
}
$hxClasses["haxe.ui.components.TabBarLayout"] = haxe_ui_components_TabBarLayout;
haxe_ui_components_TabBarLayout.__name__ = "haxe.ui.components.TabBarLayout";
haxe_ui_components_TabBarLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components_TabBarLayout.prototype, {
	__class__: haxe_ui_components_TabBarLayout
});
class haxe_ui_components__$TabBar_Closable extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		let buttons = builder._container.findComponents(null,haxe_ui_components__$TabBar_TabBarButton,1);
		let _g = 0;
		while(_g < buttons.length) buttons[_g++].set_closable(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.components._TabBar.Closable"] = haxe_ui_components__$TabBar_Closable;
haxe_ui_components__$TabBar_Closable.__name__ = "haxe.ui.components._TabBar.Closable";
haxe_ui_components__$TabBar_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TabBar_Closable.prototype, {
	__class__: haxe_ui_components__$TabBar_Closable
});
class haxe_ui_components__$TabBar_SelectedIndex extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		let _this = builder._container;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			let _this = builder._container;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		let tab = js_Boot.__cast(builder._container.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(tab != null) {
			let selectedTab = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedTab();
			if(selectedTab != null) {
				selectedTab.removeClass("tabbar-button-selected");
			}
			tab.addClass("tabbar-button-selected");
			let rangeMin = Math.abs(builder._container.get_left());
			let rangeMax = rangeMin + this._component.get_width();
			let left = this._component.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
			let right = this._component.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
			if(left != null && left.get_hidden() == false) {
				rangeMax -= left.get_width();
				rangeMax -= this._component.get_layout().get_horizontalSpacing();
			}
			if(right != null && right.get_hidden() == false) {
				rangeMax -= right.get_width();
			}
			if(tab.get_left() < rangeMin || tab.get_left() + tab.get_width() > rangeMax) {
				let max = -(builder._container.get_width() - this._component.get_width());
				let x = -tab.get_left() + this._component.get_layout().get_paddingLeft();
				if(left != null && left.get_hidden() == false) {
					max -= left.get_width();
					max -= this._component.get_layout().get_horizontalSpacing();
				}
				if(right != null && right.get_hidden() == false) {
					max -= right.get_width();
				}
				if(x < max) {
					x = max;
				}
				builder._containerPosition = x;
				builder._container.set_left(x);
			}
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
}
$hxClasses["haxe.ui.components._TabBar.SelectedIndex"] = haxe_ui_components__$TabBar_SelectedIndex;
haxe_ui_components__$TabBar_SelectedIndex.__name__ = "haxe.ui.components._TabBar.SelectedIndex";
haxe_ui_components__$TabBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TabBar_SelectedIndex.prototype, {
	__class__: haxe_ui_components__$TabBar_SelectedIndex
});
class haxe_ui_components__$TabBar_SelectedTab extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromComponent((js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder))._container.findComponent("tabbar-button-selected",null,false,"css"));
	}
}
$hxClasses["haxe.ui.components._TabBar.SelectedTab"] = haxe_ui_components__$TabBar_SelectedTab;
haxe_ui_components__$TabBar_SelectedTab.__name__ = "haxe.ui.components._TabBar.SelectedTab";
haxe_ui_components__$TabBar_SelectedTab.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TabBar_SelectedTab.prototype, {
	__class__: haxe_ui_components__$TabBar_SelectedTab
});
class haxe_ui_components__$TabBar_TabPosition extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			let _g = 0;
			let _this = builder._container;
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) _g1[_g++].addClass(":bottom");
		} else {
			this._component.removeClass(":bottom");
			let _g = 0;
			let _this = builder._container;
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) _g1[_g++].removeClass(":bottom");
		}
	}
}
$hxClasses["haxe.ui.components._TabBar.TabPosition"] = haxe_ui_components__$TabBar_TabPosition;
haxe_ui_components__$TabBar_TabPosition.__name__ = "haxe.ui.components._TabBar.TabPosition";
haxe_ui_components__$TabBar_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TabBar_TabPosition.prototype, {
	__class__: haxe_ui_components__$TabBar_TabPosition
});
class haxe_ui_components__$TabBar_TabCount extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let _this = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder))._container;
		return haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length);
	}
}
$hxClasses["haxe.ui.components._TabBar.TabCount"] = haxe_ui_components__$TabBar_TabCount;
haxe_ui_components__$TabBar_TabCount.__name__ = "haxe.ui.components._TabBar.TabCount";
haxe_ui_components__$TabBar_TabCount.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$TabBar_TabCount.prototype, {
	__class__: haxe_ui_components__$TabBar_TabCount
});
class haxe_ui_components__$TabBar_RemoveTab extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		let index = param;
		let _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			let selectedIndex = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedIndex();
			let newSelectedIndex = selectedIndex;
			if(index < selectedIndex) {
				newSelectedIndex = selectedIndex - 1;
			} else if(index == selectedIndex) {
				(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(-1);
				newSelectedIndex = selectedIndex;
				let _this = builder._container;
				if(selectedIndex > (_this._children == null ? [] : _this._children).length - 2) {
					let _this = builder._container;
					newSelectedIndex = (_this._children == null ? [] : _this._children).length - 2;
				}
			}
			builder._container.removeComponentAt(index);
			this._component.dispatch(new haxe_ui_events_UIEvent("close",null,index));
			(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(newSelectedIndex);
		}
		return null;
	}
}
$hxClasses["haxe.ui.components._TabBar.RemoveTab"] = haxe_ui_components__$TabBar_RemoveTab;
haxe_ui_components__$TabBar_RemoveTab.__name__ = "haxe.ui.components._TabBar.RemoveTab";
haxe_ui_components__$TabBar_RemoveTab.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$TabBar_RemoveTab.prototype, {
	__class__: haxe_ui_components__$TabBar_RemoveTab
});
class haxe_ui_components__$TabBar_GetTab extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		let index = param;
		let tab = null;
		let _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			let _this = builder._container;
			tab = (_this._children == null ? [] : _this._children)[index];
		}
		return haxe_ui_util_Variant.fromComponent(tab);
	}
}
$hxClasses["haxe.ui.components._TabBar.GetTab"] = haxe_ui_components__$TabBar_GetTab;
haxe_ui_components__$TabBar_GetTab.__name__ = "haxe.ui.components._TabBar.GetTab";
haxe_ui_components__$TabBar_GetTab.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$TabBar_GetTab.prototype, {
	__class__: haxe_ui_components__$TabBar_GetTab
});
class haxe_ui_components__$TabBar_Events extends haxe_ui_events_Events {
	constructor(tabbar) {
		super(tabbar);
		this._tabbar = tabbar;
	}
	register() {
		let _g = 0;
		let _this = (js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder))._container;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let t = _g1[_g];
			++_g;
			if(t.hasEvent("mousedown",$bind(this,this.onTabMouseDown)) == false) {
				t.registerEvent("mousedown",$bind(this,this.onTabMouseDown));
			}
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	unregister() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	onMouseWheel(event) {
		let builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(event.delta < 0) {
			builder.scrollLeft();
		} else {
			builder.scrollRight();
		}
	}
	onTabMouseDown(event) {
		let builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		let button = event.target;
		let close = button.findComponent("tab-close-button",haxe_ui_components_Image,false);
		let select = true;
		if(close != null) {
			select = !close.hitTest(event.screenX,event.screenY);
		}
		if(select == true) {
			this._tabbar.set_selectedIndex(builder._container.getComponentIndex(button));
		}
	}
}
$hxClasses["haxe.ui.components._TabBar.Events"] = haxe_ui_components__$TabBar_Events;
haxe_ui_components__$TabBar_Events.__name__ = "haxe.ui.components._TabBar.Events";
haxe_ui_components__$TabBar_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$TabBar_Events.prototype, {
	__class__: haxe_ui_components__$TabBar_Events
	,_tabbar: null
});
class haxe_ui_components__$TabBar_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(tabbar) {
		super(tabbar);
		this._tabbar = tabbar;
		this.createContainer();
	}
	create() {
		this.createContainer();
	}
	createContainer() {
		if(this._filler == null) {
			this._filler = new haxe_ui_containers_Box();
			this._filler.set_id("tabbar-filler");
			this._filler.addClass("tabbar-filler");
			this._tabbar.addComponent(this._filler);
		}
		if(this._container == null) {
			this._container = new haxe_ui_containers_HBox();
			this._container.set_id("tabbar-contents");
			this._container.addClass("tabbar-contents");
			this._tabbar.addComponent(this._container);
		}
	}
	addTab(child) {
		let button = this.createTabBarButton(child);
		let v = this._container.addComponent(button);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	addTabAt(child,index) {
		let button = this.createTabBarButton(child);
		let v = this._container.addComponentAt(button,index);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	createTabBarButton(child) {
		let button = new haxe_ui_components__$TabBar_TabBarButton();
		button.addClass("tabbar-button");
		if(this._tabbar.get_tabPosition() == "bottom") {
			button.addClass(":bottom");
		}
		button.set_id(child.get_id());
		button.set_text(child.get_text());
		if(((child) instanceof haxe_ui_components_Button)) {
			button.set_icon((js_Boot.__cast(child , haxe_ui_components_Button)).get_icon());
		}
		button.set_closable(this._tabbar.get_closable());
		return button;
	}
	get_numComponents() {
		return this._container.get_numComponents();
	}
	addComponent(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTab(child);
		}
		return null;
	}
	addComponentAt(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTabAt(child,index);
		}
		return null;
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			let index = this._container.getComponentIndex(child);
			if(index != -1) {
				this._tabbar.removeTab(index);
				return child;
			}
		}
		return null;
	}
	removeComponentAt(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		let child = this._container.getComponentAt(index);
		if(child != null) {
			this._tabbar.removeTab(index);
		}
		return child;
	}
	getComponentIndex(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.getComponentIndex(child);
		}
		return -1;
	}
	setComponentIndex(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.setComponentIndex(child,index);
		}
		return null;
	}
	getComponentAt(index) {
		return this._container.getComponentAt(index);
	}
	validateComponentLayout() {
		if(this._tabbar.get_native() == true || this._container == null) {
			return false;
		}
		if(this._containerPosition == null) {
			this._containerPosition = this._tabbar.get_layout().get_paddingLeft();
		}
		if(this._container.get_width() > this._tabbar.get_layout().get_usableWidth() && this._tabbar.get_layout().get_usableWidth() > 0) {
			this.showScrollButtons();
			this._container.set_left(this._containerPosition);
		} else {
			this.hideScrollButtons();
			this._containerPosition = null;
		}
		return true;
	}
	showScrollButtons() {
		let _gthis = this;
		if(this._scrollLeft == null) {
			this._scrollLeft = new haxe_ui_components_Button();
			this._scrollLeft.set_id("tabbar-scroll-left");
			this._scrollLeft.addClass("tabbar-scroll-left");
			this._scrollLeft.set_includeInLayout(false);
			this._scrollLeft.set_repeater(true);
			this._tabbar.addComponent(this._scrollLeft);
			this._scrollLeft.set_onClick(function(e) {
				_gthis.scrollLeft();
			});
		} else {
			this._scrollLeft.show();
		}
		if(this._scrollRight == null) {
			this._scrollRight = new haxe_ui_components_Button();
			this._scrollRight.set_id("tabbar-scroll-right");
			this._scrollRight.addClass("tabbar-scroll-right");
			this._scrollRight.set_includeInLayout(false);
			this._scrollRight.set_repeater(true);
			this._tabbar.addComponent(this._scrollRight);
			this._scrollRight.set_onClick(function(e) {
				_gthis.scrollRight();
			});
		} else {
			this._scrollRight.show();
		}
	}
	scrollLeft() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		let x = this._container.get_left() + 20;
		if(x > this._tabbar.get_layout().get_paddingLeft()) {
			x = this._tabbar.get_layout().get_paddingLeft();
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	scrollRight() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		let x = this._container.get_left() - 20;
		let max = -(this._container.get_width() - this._tabbar.get_width());
		let left = this._tabbar.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
		let right = this._tabbar.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
		if(left != null && left.get_hidden() == false) {
			max -= left.get_width();
			max -= this._tabbar.get_layout().get_horizontalSpacing();
		}
		if(right != null && right.get_hidden() == false) {
			max -= right.get_width();
		}
		if(x < max) {
			x = max;
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	hideScrollButtons() {
		if(this._scrollLeft != null) {
			this._scrollLeft.hide();
		}
		if(this._scrollRight != null) {
			this._scrollRight.hide();
		}
	}
}
$hxClasses["haxe.ui.components._TabBar.Builder"] = haxe_ui_components__$TabBar_Builder;
haxe_ui_components__$TabBar_Builder.__name__ = "haxe.ui.components._TabBar.Builder";
haxe_ui_components__$TabBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$TabBar_Builder.prototype, {
	__class__: haxe_ui_components__$TabBar_Builder
	,_tabbar: null
	,_container: null
	,_filler: null
	,_scrollLeft: null
	,_scrollRight: null
	,_containerPosition: null
});
class haxe_ui_components__$TabBar_TabBarButton extends haxe_ui_components_Button {
	constructor() {
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._closable = false;
		super._hx_constructor();
	}
	set_closable(value) {
		if(this._closable == value) {
			return value;
		}
		this._closable = value;
		let existing = this.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(this._closable == true && existing == null) {
			this.set_iconPosition("far-left");
			let image = new haxe_ui_components_Image();
			image.set_id("tab-close-button");
			image.addClass("tab-close-button");
			image.set_includeInLayout(false);
			image.scriptAccess = false;
			image.set_onClick($bind(this,this.onCloseClicked));
			this.addComponent(image);
		} else if(existing != null) {
			this.removeComponent(existing);
		}
		return value;
	}
	onCloseClicked(e) {
		let tabbar = this.findAncestor(null,haxe_ui_components_TabBar);
		let index = (js_Boot.__cast(tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder))._container.getComponentIndex(this);
		let event = new haxe_ui_events_UIEvent("beforeClose",null,index);
		tabbar.dispatch(event);
		if(event.canceled == false) {
			if(index != -1) {
				tabbar.removeTab(index);
			}
		}
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components__$TabBar_TabBarButtonLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components__$TabBar_TabBarButton();
	}
}
$hxClasses["haxe.ui.components._TabBar.TabBarButton"] = haxe_ui_components__$TabBar_TabBarButton;
haxe_ui_components__$TabBar_TabBarButton.__name__ = "haxe.ui.components._TabBar.TabBarButton";
haxe_ui_components__$TabBar_TabBarButton.__super__ = haxe_ui_components_Button;
Object.assign(haxe_ui_components__$TabBar_TabBarButton.prototype, {
	__class__: haxe_ui_components__$TabBar_TabBarButton
	,_closable: null
	,__properties__: Object.assign({}, haxe_ui_components_Button.prototype.__properties__, {set_closable: "set_closable"})
});
class haxe_ui_components__$TabBar_TabBarButtonLayout extends haxe_ui_components_ButtonLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		super.repositionChildren();
		let image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && this.get_component().get_componentWidth() > 0) {
			image.set_top((this.get_component().get_componentHeight() / 2 - image.get_componentHeight() / 2 | 0) + this.marginTop(image) - this.marginBottom(image));
			image.set_left(this.get_component().get_componentWidth() - image.get_componentWidth() - this.get_paddingRight() + this.marginLeft(image) - this.marginRight(image));
		}
	}
	calcAutoSize(exclusions) {
		let size = super.calcAutoSize(exclusions);
		let image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null) {
			size.width += image.get_width() + this.get_horizontalSpacing();
		}
		return size;
	}
}
$hxClasses["haxe.ui.components._TabBar.TabBarButtonLayout"] = haxe_ui_components__$TabBar_TabBarButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.__name__ = "haxe.ui.components._TabBar.TabBarButtonLayout";
haxe_ui_components__$TabBar_TabBarButtonLayout.__super__ = haxe_ui_components_ButtonLayout;
Object.assign(haxe_ui_components__$TabBar_TabBarButtonLayout.prototype, {
	__class__: haxe_ui_components__$TabBar_TabBarButtonLayout
});
class haxe_ui_components_TextArea extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	scrollToBottom() {
		return this.behaviours.call("scrollToBottom",null);
	}
	validateComponentInternal(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		let dataInvalid = this.isComponentInvalid("data");
		let scrollInvalid = this.isComponentInvalid("scroll");
		let layoutInvalid = this.isComponentInvalid("layout");
		super.validateComponentInternal(nextFrame);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			if(this._compositeBuilder != null) {
				(js_Boot.__cast(this._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
			}
		}
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_components__$TextArea_TextBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextArea_PlaceholderBehaviour);
		this.behaviours.register("wrap",haxe_ui_components__$TextArea_WrapBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("dataSource",haxe_ui_components__$TextArea_DataSourceBehaviour);
		this.behaviours.register("autoScrollToBottom",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("scrollToTop",haxe_ui_components__$TextArea_ScrollToTop);
		this.behaviours.register("scrollToBottom",haxe_ui_components__$TextArea_ScrollToBottom);
	}
	get_placeholder() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	get_autoScrollToBottom() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoScrollToBottom"));
	}
	get_value() {
		return this.get_text();
	}
	set_value(value) {
		this.set_text(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_TextArea();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components__$TextArea_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextArea_TextAreaBuilder;
		this._defaultLayoutClass = haxe_ui_components__$TextArea_TextAreaLayout;
	}
}
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = "haxe.ui.components.TextArea";
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_TextArea.prototype, {
	__class__: haxe_ui_components_TextArea
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {get_autoScrollToBottom: "get_autoScrollToBottom",get_placeholder: "get_placeholder"})
});
class haxe_ui_components__$TextArea_TextAreaLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		let ucx = this.get_innerWidth();
		let ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft());
			this.get_component().getTextInput().set_top(this.get_paddingTop());
		}
	}
	resizeChildren() {
		super.resizeChildren();
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		let usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_width(usableSize.width - 1);
			this.get_component().getTextInput().set_height(usableSize.height - 1);
		}
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
}
$hxClasses["haxe.ui.components._TextArea.TextAreaLayout"] = haxe_ui_components__$TextArea_TextAreaLayout;
haxe_ui_components__$TextArea_TextAreaLayout.__name__ = "haxe.ui.components._TextArea.TextAreaLayout";
haxe_ui_components__$TextArea_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$TextArea_TextAreaLayout.prototype, {
	__class__: haxe_ui_components__$TextArea_TextAreaLayout
});
class haxe_ui_components__$TextArea_DataSourceBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		this._value = value;
		this._component.getTextInput().set_dataSource(haxe_ui_util_Variant.toDataSource(value));
	}
	get() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
}
$hxClasses["haxe.ui.components._TextArea.DataSourceBehaviour"] = haxe_ui_components__$TextArea_DataSourceBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.__name__ = "haxe.ui.components._TextArea.DataSourceBehaviour";
haxe_ui_components__$TextArea_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextArea_DataSourceBehaviour.prototype, {
	__class__: haxe_ui_components__$TextArea_DataSourceBehaviour
});
class haxe_ui_components__$TextArea_PlaceholderBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,textarea.get_text());
	}
}
$hxClasses["haxe.ui.components._TextArea.PlaceholderBehaviour"] = haxe_ui_components__$TextArea_PlaceholderBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextArea.PlaceholderBehaviour";
haxe_ui_components__$TextArea_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextArea_PlaceholderBehaviour.prototype, {
	__class__: haxe_ui_components__$TextArea_PlaceholderBehaviour
});
class haxe_ui_components__$TextArea_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,this._value != null ? haxe_ui_util_Variant.toString(this._value) : "");
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
}
$hxClasses["haxe.ui.components._TextArea.TextBehaviour"] = haxe_ui_components__$TextArea_TextBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.__name__ = "haxe.ui.components._TextArea.TextBehaviour";
haxe_ui_components__$TextArea_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextArea_TextBehaviour.prototype, {
	__class__: haxe_ui_components__$TextArea_TextBehaviour
});
class haxe_ui_components__$TextArea_WrapBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		(js_Boot.__cast(this._component , haxe_ui_components_TextArea)).getTextInput().set_wordWrap(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.components._TextArea.WrapBehaviour"] = haxe_ui_components__$TextArea_WrapBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.__name__ = "haxe.ui.components._TextArea.WrapBehaviour";
haxe_ui_components__$TextArea_WrapBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextArea_WrapBehaviour.prototype, {
	__class__: haxe_ui_components__$TextArea_WrapBehaviour
});
class haxe_ui_components__$TextArea_ScrollToTop extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(0);
		}
		return null;
	}
}
$hxClasses["haxe.ui.components._TextArea.ScrollToTop"] = haxe_ui_components__$TextArea_ScrollToTop;
haxe_ui_components__$TextArea_ScrollToTop.__name__ = "haxe.ui.components._TextArea.ScrollToTop";
haxe_ui_components__$TextArea_ScrollToTop.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$TextArea_ScrollToTop.prototype, {
	__class__: haxe_ui_components__$TextArea_ScrollToTop
});
class haxe_ui_components__$TextArea_ScrollToBottom extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_max());
		}
		return null;
	}
}
$hxClasses["haxe.ui.components._TextArea.ScrollToBottom"] = haxe_ui_components__$TextArea_ScrollToBottom;
haxe_ui_components__$TextArea_ScrollToBottom.__name__ = "haxe.ui.components._TextArea.ScrollToBottom";
haxe_ui_components__$TextArea_ScrollToBottom.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$TextArea_ScrollToBottom.prototype, {
	__class__: haxe_ui_components__$TextArea_ScrollToBottom
});
class haxe_ui_components__$TextArea_TextAreaHelper {
	static validateText(textarea,text) {
		if(text == null) {
			text = "";
		}
		if(textarea.get_focus() == false && textarea.get_placeholder() != null) {
			if(text == "") {
				text = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else {
				textarea.removeClass(":empty");
			}
		} else if(text.length == 0 == true) {
			text = "";
			textarea.removeClass(":empty");
		}
		textarea.getTextInput().set_text("" + text);
		textarea.getTextInput().invalidateComponent("measure");
		if(!(textarea._layout == null || textarea._layoutLocked == true)) {
			textarea.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._TextArea.TextAreaHelper"] = haxe_ui_components__$TextArea_TextAreaHelper;
haxe_ui_components__$TextArea_TextAreaHelper.__name__ = "haxe.ui.components._TextArea.TextAreaHelper";
class haxe_ui_components__$TextArea_Events extends haxe_ui_events_Events {
	constructor(textarea) {
		super(textarea);
		this._textarea = textarea;
	}
	register() {
		let _gthis = this;
		if(this._textarea.getTextInput().get_data().onChangedCallback == null) {
			this._textarea.getTextInput().set_multiline(true);
			this._textarea.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textarea.hasClass(":empty") == false) {
					_gthis._textarea.set_text(_gthis._textarea.getTextInput().get_text());
					(js_Boot.__cast(_gthis._textarea._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
				}
			};
		}
		if(this._textarea.getTextInput().get_data().onScrollCallback == null) {
			this._textarea.getTextInput().get_data().onScrollCallback = function() {
				let hscroll = _gthis._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
				if(hscroll != null) {
					hscroll.set_pos(_gthis._textarea.getTextInput().get_hscrollPos());
				}
				let vscroll = _gthis._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
				if(vscroll != null) {
					vscroll.set_pos(_gthis._textarea.getTextInput().get_vscrollPos());
				}
			};
		}
		let hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		let vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		if(this.hasEvent("mousewheel",$bind(this,this.onMouseWheel)) == false) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("focusin",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusin",$bind(this,this.onFocusChange));
		}
		if(this.hasEvent("focusout",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusout",$bind(this,this.onFocusChange));
		}
	}
	unregister() {
		this._textarea.getTextInput().get_data().onChangedCallback = null;
		this._textarea.getTextInput().get_data().onScrollCallback = null;
		let hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		let vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	onMouseWheel(event) {
		if(this._textarea.getTextInput().get_data().vscrollNativeWheel == true) {
			return;
		}
		let vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			let step = 20;
			if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
				step = this._textarea.getTextInput().get_data().vscrollPageStep;
			} else {
				step = Math.ceil((this._textarea.getTextInput().get_textStyle().fontSize + 1) / 10) * 10;
			}
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - step);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + step);
			}
		}
	}
	onScrollChange(event) {
		let hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._textarea.getTextInput().set_hscrollPos(hscroll.get_pos());
		}
		let vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._textarea.getTextInput().set_vscrollPos(vscroll.get_pos());
		}
	}
	onMouseDown(event) {
		this._textarea.set_focus(true);
	}
	onFocusChange(event) {
		if(this._textarea.get_focus() == true) {
			this._textarea.getTextInput().focus();
		} else {
			this._textarea.getTextInput().blur();
		}
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(this._textarea,this._textarea.get_text());
	}
}
$hxClasses["haxe.ui.components._TextArea.Events"] = haxe_ui_components__$TextArea_Events;
haxe_ui_components__$TextArea_Events.__name__ = "haxe.ui.components._TextArea.Events";
haxe_ui_components__$TextArea_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$TextArea_Events.prototype, {
	__class__: haxe_ui_components__$TextArea_Events
	,_textarea: null
});
class haxe_ui_components__$TextArea_TextAreaBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(textarea) {
		super(textarea);
		this._textarea = textarea;
	}
	checkScrolls() {
		if(this._textarea.get_native() == true) {
			return;
		}
		let textInput = this._textarea.getTextInput();
		let hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(textInput.get_textWidth() - textInput.get_width() > 1) {
			if(hscroll == null) {
				hscroll = this.createHScroll();
			}
			hscroll.set_max(textInput.get_hscrollMax());
			hscroll.set_pos(textInput.get_hscrollPos());
			hscroll.set_pageSize(textInput.get_hscrollPageSize());
		} else if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
		let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(textInput.get_textHeight() - textInput.get_height() > 1) {
			if(vscroll == null) {
				vscroll = this.createVScroll();
			}
			vscroll.set_max(textInput.get_vscrollMax());
			vscroll.set_pos(textInput.get_vscrollPos());
			vscroll.set_pageSize(textInput.get_vscrollPageSize());
			if(this._textarea.get_autoScrollToBottom() == true) {
				this._textarea.scrollToBottom();
			}
		} else if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	createHScroll() {
		let hscroll = new haxe_ui_components_HorizontalScroll();
		hscroll.set_percentWidth(100);
		hscroll.set_id("textarea-hscroll");
		this._component.addComponent(hscroll);
		this._component.registerInternalEvents(null,true);
		return hscroll;
	}
	createVScroll() {
		let vscroll = new haxe_ui_components_VerticalScroll();
		if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
			vscroll.set_increment(this._textarea.getTextInput().get_data().vscrollPageStep);
		}
		vscroll.set_percentHeight(100);
		vscroll.set_id("textarea-vscroll");
		this._component.addComponent(vscroll);
		this._component.registerInternalEvents(null,true);
		return vscroll;
	}
	applyStyle(style) {
		super.applyStyle(style);
		if(this._component.hasTextInput() == true) {
			this._component.getTextInput().set_textStyle(style);
		}
	}
}
$hxClasses["haxe.ui.components._TextArea.TextAreaBuilder"] = haxe_ui_components__$TextArea_TextAreaBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.__name__ = "haxe.ui.components._TextArea.TextAreaBuilder";
haxe_ui_components__$TextArea_TextAreaBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$TextArea_TextAreaBuilder.prototype, {
	__class__: haxe_ui_components__$TextArea_TextAreaBuilder
	,_textarea: null
});
class haxe_ui_components_TextField extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("password",haxe_ui_components__$TextField_PasswordBehaviour);
		this.behaviours.register("maxChars",haxe_ui_components__$TextField_MaxCharsBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("restrictChars",haxe_ui_components__$TextField_RestrictCharsBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextField_PlaceholderBehaviour);
		this.behaviours.register("text",haxe_ui_components__$TextField_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$TextField_IconBehaviour);
	}
	get_password() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("password"));
	}
	set_password(value) {
		this.behaviours.set("password",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"password"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"password");
		return value;
	}
	get_maxChars() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("maxChars"));
	}
	set_maxChars(value) {
		this.behaviours.set("maxChars",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"maxChars"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"maxChars");
		return value;
	}
	get_restrictChars() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("restrictChars"));
	}
	set_restrictChars(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"restrictChars",value);
					return value;
				}
			}
		}
		this.behaviours.set("restrictChars",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"restrictChars"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"restrictChars");
		return value;
	}
	get_placeholder() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	set_placeholder(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"placeholder",value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"placeholder"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"placeholder");
		return value;
	}
	get_icon() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	set_icon(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"icon",value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"icon");
		return value;
	}
	get_value() {
		return this.get_text();
	}
	set_value(value) {
		this.set_text(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_TextField();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_components__$TextField_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextField_Builder;
		this._defaultLayoutClass = haxe_ui_components__$TextField_TextFieldLayout;
	}
}
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = "haxe.ui.components.TextField";
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_components_TextField.prototype, {
	__class__: haxe_ui_components_TextField
	,__properties__: Object.assign({}, haxe_ui_core_InteractiveComponent.prototype.__properties__, {set_icon: "set_icon",get_icon: "get_icon",set_placeholder: "set_placeholder",get_placeholder: "get_placeholder",set_restrictChars: "set_restrictChars",get_restrictChars: "get_restrictChars",set_maxChars: "set_maxChars",get_maxChars: "get_maxChars",set_password: "set_password",get_password: "get_password"})
});
class haxe_ui_components__$TextField_TextFieldLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	get_iconPosition() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	repositionChildren() {
		let icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		let xpos = this.get_paddingLeft();
		if(icon != null) {
			switch(this.get_iconPosition()) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + this.get_component().get_componentHeight() / 2 - (this.get_component().getTextInput().get_height() + this.get_paddingTop() + this.get_paddingBottom()) / 2);
		}
	}
	resizeChildren() {
		super.resizeChildren();
		if(this.get_component().hasTextInput() == true) {
			let size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	calcAutoSize(exclusions) {
		let size = super.calcAutoSize(exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
}
$hxClasses["haxe.ui.components._TextField.TextFieldLayout"] = haxe_ui_components__$TextField_TextFieldLayout;
haxe_ui_components__$TextField_TextFieldLayout.__name__ = "haxe.ui.components._TextField.TextFieldLayout";
haxe_ui_components__$TextField_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$TextField_TextFieldLayout.prototype, {
	__class__: haxe_ui_components__$TextField_TextFieldLayout
	,iconPosition: null
	,__properties__: Object.assign({}, haxe_ui_layouts_DefaultLayout.prototype.__properties__, {get_iconPosition: "get_iconPosition"})
});
class haxe_ui_components__$TextField_PasswordBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this.originalValue == null) {
			this.originalValue = this._value;
		}
		(js_Boot.__cast(this._component , haxe_ui_components_TextField)).getTextInput().set_password(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.components._TextField.PasswordBehaviour"] = haxe_ui_components__$TextField_PasswordBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.__name__ = "haxe.ui.components._TextField.PasswordBehaviour";
haxe_ui_components__$TextField_PasswordBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextField_PasswordBehaviour.prototype, {
	__class__: haxe_ui_components__$TextField_PasswordBehaviour
	,originalValue: null
});
class haxe_ui_components__$TextField_MaxCharsBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
}
$hxClasses["haxe.ui.components._TextField.MaxCharsBehaviour"] = haxe_ui_components__$TextField_MaxCharsBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.__name__ = "haxe.ui.components._TextField.MaxCharsBehaviour";
haxe_ui_components__$TextField_MaxCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextField_MaxCharsBehaviour.prototype, {
	__class__: haxe_ui_components__$TextField_MaxCharsBehaviour
});
class haxe_ui_components__$TextField_RestrictCharsBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let excludeChars = "";
		let testRegexpParts = [];
		if(new EReg("\\^(.-.|.)","gu").map(haxe_ui_util_Variant.toString(this._value),function(ereg) {
			excludeChars += ereg.matched(1);
			return "";
		}).length > 0) {
			testRegexpParts.push("[^" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)) + "]");
		}
		if(excludeChars.length > 0) {
			testRegexpParts.push("[" + excludeChars + "]");
		}
		this.regexp = new EReg("(" + testRegexpParts.join(" | ") + ")","g");
		let textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
}
$hxClasses["haxe.ui.components._TextField.RestrictCharsBehaviour"] = haxe_ui_components__$TextField_RestrictCharsBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.__name__ = "haxe.ui.components._TextField.RestrictCharsBehaviour";
haxe_ui_components__$TextField_RestrictCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextField_RestrictCharsBehaviour.prototype, {
	__class__: haxe_ui_components__$TextField_RestrictCharsBehaviour
	,regexp: null
});
class haxe_ui_components__$TextField_PlaceholderBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
}
$hxClasses["haxe.ui.components._TextField.PlaceholderBehaviour"] = haxe_ui_components__$TextField_PlaceholderBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextField.PlaceholderBehaviour";
haxe_ui_components__$TextField_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextField_PlaceholderBehaviour.prototype, {
	__class__: haxe_ui_components__$TextField_PlaceholderBehaviour
});
class haxe_ui_components__$TextField_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_text());
		}
	}
}
$hxClasses["haxe.ui.components._TextField.TextBehaviour"] = haxe_ui_components__$TextField_TextBehaviour;
haxe_ui_components__$TextField_TextBehaviour.__name__ = "haxe.ui.components._TextField.TextBehaviour";
haxe_ui_components__$TextField_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextField_TextBehaviour.prototype, {
	__class__: haxe_ui_components__$TextField_TextBehaviour
});
class haxe_ui_components__$TextField_IconBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		let icon = textfield.findComponent(null,haxe_ui_components_Image,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			textfield.removeComponent(icon);
		} else {
			if(icon == null) {
				icon = new haxe_ui_components_Image();
				icon.set_id("textfield-icon");
				icon.addClass("icon");
				icon.scriptAccess = false;
				textfield.addComponentAt(icon,0);
			}
			icon.set_resource(haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this._value)));
		}
	}
}
$hxClasses["haxe.ui.components._TextField.IconBehaviour"] = haxe_ui_components__$TextField_IconBehaviour;
haxe_ui_components__$TextField_IconBehaviour.__name__ = "haxe.ui.components._TextField.IconBehaviour";
haxe_ui_components__$TextField_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_components__$TextField_IconBehaviour.prototype, {
	__class__: haxe_ui_components__$TextField_IconBehaviour
});
class haxe_ui_components__$TextField_TextFieldHelper {
	static validateText(textfield,text) {
		if(text == null) {
			text = "";
		}
		let placeholderVisible = text.length == 0;
		let password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
		let regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
		if(textfield.get_maxChars() > 0 && text.length > textfield.get_maxChars() && placeholderVisible == false) {
			text = HxOverrides.substr(text,0,textfield.get_maxChars());
		}
		if(regexp != null) {
			text = text.replace(regexp.r,"");
		}
		if(textfield.get_placeholder() != null) {
			if(textfield.get_focus() == false) {
				if(text.length == 0) {
					text = textfield.get_placeholder();
					textfield.set_password(false);
					textfield.addClass(":empty");
				} else if(text != textfield.get_placeholder()) {
					textfield.set_password(haxe_ui_util_Variant.toBool(password));
					textfield.removeClass(":empty");
				}
			} else {
				textfield.removeClass(":empty");
				if(text == textfield.get_placeholder()) {
					text = "";
				}
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
			}
		} else {
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
			if(placeholderVisible == true) {
				textfield.removeClass(":empty");
			}
		}
		textfield.getTextInput().set_text("" + text);
		if(!(textfield._layout == null || textfield._layoutLocked == true)) {
			textfield.invalidateComponent("layout");
		}
	}
}
$hxClasses["haxe.ui.components._TextField.TextFieldHelper"] = haxe_ui_components__$TextField_TextFieldHelper;
haxe_ui_components__$TextField_TextFieldHelper.__name__ = "haxe.ui.components._TextField.TextFieldHelper";
class haxe_ui_components__$TextField_Events extends haxe_ui_events_Events {
	constructor(textfield) {
		super(textfield);
		this._textfield = textfield;
	}
	register() {
		let _gthis = this;
		if(this._textfield.getTextInput().get_data().onChangedCallback == null) {
			this._textfield.getTextInput().set_multiline(false);
			this._textfield.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textfield.hasClass(":empty") == false) {
					_gthis._textfield.set_text(_gthis._textfield.getTextInput().get_text());
				}
			};
		}
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
	}
	unregister() {
		this._textfield.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	onMouseDown(event) {
		this._textfield.set_focus(true);
	}
	onFocusChange(event) {
		if(this._textfield.get_focus() == true) {
			this._textfield.getTextInput().focus();
		} else {
			this._textfield.getTextInput().blur();
		}
		haxe_ui_components__$TextField_TextFieldHelper.validateText(this._textfield,this._textfield.get_text());
	}
}
$hxClasses["haxe.ui.components._TextField.Events"] = haxe_ui_components__$TextField_Events;
haxe_ui_components__$TextField_Events.__name__ = "haxe.ui.components._TextField.Events";
haxe_ui_components__$TextField_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_components__$TextField_Events.prototype, {
	__class__: haxe_ui_components__$TextField_Events
	,_textfield: null
});
class haxe_ui_components__$TextField_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(textfield) {
		super(textfield);
		this._textfield = textfield;
	}
	applyStyle(style) {
		if(style.icon != null) {
			this._textfield.set_icon(style.icon);
		}
		if(this._textfield.hasTextInput() == true) {
			this._textfield.getTextInput().set_textStyle(style);
		}
	}
}
$hxClasses["haxe.ui.components._TextField.Builder"] = haxe_ui_components__$TextField_Builder;
haxe_ui_components__$TextField_Builder.__name__ = "haxe.ui.components._TextField.Builder";
haxe_ui_components__$TextField_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_components__$TextField_Builder.prototype, {
	__class__: haxe_ui_components__$TextField_Builder
	,_textfield: null
});
class haxe_ui_components_Toggle extends haxe_ui_components_Button {
	constructor() {
		super();
		this.set_toggle(true);
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_Toggle();
	}
}
$hxClasses["haxe.ui.components.Toggle"] = haxe_ui_components_Toggle;
haxe_ui_components_Toggle.__name__ = "haxe.ui.components.Toggle";
haxe_ui_components_Toggle.__super__ = haxe_ui_components_Button;
Object.assign(haxe_ui_components_Toggle.prototype, {
	__class__: haxe_ui_components_Toggle
});
class haxe_ui_components_VGrid extends haxe_ui_core_Component {
	constructor() {
		super();
		this.set_columns(1);
	}
	createDefaults() {
		super.createDefaults();
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	get_columns() {
		return this._columns;
	}
	set_columns(value) {
		if(this._columns != value) {
			this._columns = value;
			(js_Boot.__cast(this.get_layout() , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_columns(this.get_columns());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_VGrid();
	}
}
$hxClasses["haxe.ui.components.VGrid"] = haxe_ui_components_VGrid;
haxe_ui_components_VGrid.__name__ = "haxe.ui.components.VGrid";
haxe_ui_components_VGrid.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_components_VGrid.prototype, {
	__class__: haxe_ui_components_VGrid
	,_columns: null
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_columns: "set_columns",get_columns: "get_columns"})
});
class haxe_ui_components_VerticalProgress extends haxe_ui_components_Progress {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("posFromCoord",haxe_ui_components_VerticalRangePosFromCoord);
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_VerticalProgress();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components_VerticalRangeLayout;
	}
}
$hxClasses["haxe.ui.components.VerticalProgress"] = haxe_ui_components_VerticalProgress;
haxe_ui_components_VerticalProgress.__name__ = "haxe.ui.components.VerticalProgress";
haxe_ui_components_VerticalProgress.__super__ = haxe_ui_components_Progress;
Object.assign(haxe_ui_components_VerticalProgress.prototype, {
	__class__: haxe_ui_components_VerticalProgress
});
class haxe_ui_components_VerticalRange extends haxe_ui_components_Range {
	constructor() {
		super();
	}
	posFromCoord(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components_VerticalRangeLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("posFromCoord",haxe_ui_components_VerticalRangePosFromCoord);
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_VerticalRange();
	}
}
$hxClasses["haxe.ui.components.VerticalRange"] = haxe_ui_components_VerticalRange;
haxe_ui_components_VerticalRange.__name__ = "haxe.ui.components.VerticalRange";
haxe_ui_components_VerticalRange.__super__ = haxe_ui_components_Range;
Object.assign(haxe_ui_components_VerticalRange.prototype, {
	__class__: haxe_ui_components_VerticalRange
});
class haxe_ui_components_VerticalRangePosFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(pos) {
		let range = js_Boot.__cast(this._component , haxe_ui_components_Range);
		let p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		let ypos = (p.y -= this._component.getComponentOffset().y) - range.get_layout().get_paddingTop();
		let ucy = range.get_layout().get_usableHeight();
		if(ypos >= ucy) {
			ypos = ucy;
		}
		let p1 = ypos / (ucy / (range.get_max() - range.get_min()));
		return haxe_ui_util_Variant.fromFloat(range.get_max() - p1);
	}
}
$hxClasses["haxe.ui.components.VerticalRangePosFromCoord"] = haxe_ui_components_VerticalRangePosFromCoord;
haxe_ui_components_VerticalRangePosFromCoord.__name__ = "haxe.ui.components.VerticalRangePosFromCoord";
haxe_ui_components_VerticalRangePosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components_VerticalRangePosFromCoord.prototype, {
	__class__: haxe_ui_components_VerticalRangePosFromCoord
});
class haxe_ui_components_VerticalRangeLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		super.resizeChildren();
		let range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		let value = this.findComponent("" + range.get_cssName() + "-value");
		if(value != null) {
			let ucy = this.get_usableHeight();
			let d = ucy / (range.get_max() - range.get_min());
			let startInPixels = range.get_start() * d - range.get_min() * d;
			let cy = Math.round(range.get_end() * d - range.get_min() * d - startInPixels);
			if(cy < 0) {
				cy = 0;
			} else if(cy > ucy) {
				cy = ucy;
			}
			if(cy == 0) {
				value.set_height(0);
				value.set_hidden(true);
			} else {
				value.set_height(cy);
				value.set_hidden(false);
			}
		}
	}
	repositionChildren() {
		super.repositionChildren();
		let range = js_Boot.__cast(this.get_component() , haxe_ui_components_Range);
		let value = this.findComponent("" + range.get_cssName() + "-value");
		let ucy = this.get_usableHeight();
		let d = ucy / (range.get_max() - range.get_min());
		let startInPixels = ucy - value.get_height() - (range.get_start() * d - range.get_min() * d);
		value.set_left(this.get_paddingLeft());
		value.set_top(this.get_paddingTop() + startInPixels);
	}
}
$hxClasses["haxe.ui.components.VerticalRangeLayout"] = haxe_ui_components_VerticalRangeLayout;
haxe_ui_components_VerticalRangeLayout.__name__ = "haxe.ui.components.VerticalRangeLayout";
haxe_ui_components_VerticalRangeLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components_VerticalRangeLayout.prototype, {
	__class__: haxe_ui_components_VerticalRangeLayout
});
class haxe_ui_components_VerticalRule extends haxe_ui_components_Rule {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_VerticalRule();
	}
}
$hxClasses["haxe.ui.components.VerticalRule"] = haxe_ui_components_VerticalRule;
haxe_ui_components_VerticalRule.__name__ = "haxe.ui.components.VerticalRule";
haxe_ui_components_VerticalRule.__super__ = haxe_ui_components_Rule;
Object.assign(haxe_ui_components_VerticalRule.prototype, {
	__class__: haxe_ui_components_VerticalRule
});
class haxe_ui_components_VerticalScroll extends haxe_ui_components_Scroll {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("posFromCoord",haxe_ui_components__$VerticalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$VerticalScroll_ApplyPageFromCoord);
	}
	createChildren() {
		super.createChildren();
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	createDefaults() {
		super.createDefaults();
		this._defaultLayoutClass = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_VerticalScroll();
	}
}
$hxClasses["haxe.ui.components.VerticalScroll"] = haxe_ui_components_VerticalScroll;
haxe_ui_components_VerticalScroll.__name__ = "haxe.ui.components.VerticalScroll";
haxe_ui_components_VerticalScroll.__super__ = haxe_ui_components_Scroll;
Object.assign(haxe_ui_components_VerticalScroll.prototype, {
	__class__: haxe_ui_components_VerticalScroll
});
class haxe_ui_components__$VerticalScroll_PosFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(pos) {
		let scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		let deinc = this._component.findComponent("scroll-deinc-button");
		let thumb = this._component.findComponent("scroll-thumb-button");
		let ypos = (js_Boot.__cast(pos , haxe_ui_geom_Point)).y;
		let minY = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minY = deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		let maxY = scroll.get_layout().get_usableHeight() - thumb.get_height();
		if(deinc != null && deinc.get_hidden() == false) {
			maxY += deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		let ucy = scroll.get_layout().get_usableHeight();
		ucy -= thumb.get_height();
		let m = scroll.get_max() - scroll.get_min() | 0;
		return haxe_ui_util_Variant.fromFloat(scroll.get_min() + (ypos - minY) / ucy * m);
	}
}
$hxClasses["haxe.ui.components._VerticalScroll.PosFromCoord"] = haxe_ui_components__$VerticalScroll_PosFromCoord;
haxe_ui_components__$VerticalScroll_PosFromCoord.__name__ = "haxe.ui.components._VerticalScroll.PosFromCoord";
haxe_ui_components__$VerticalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$VerticalScroll_PosFromCoord.prototype, {
	__class__: haxe_ui_components__$VerticalScroll_PosFromCoord
});
class haxe_ui_components__$VerticalScroll_ApplyPageFromCoord extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(pos) {
		let p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		let scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		let thumb = this._component.findComponent("scroll-thumb-button");
		if(p.y < thumb.get_screenTop()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.y > thumb.get_screenTop() + thumb.get_height()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
}
$hxClasses["haxe.ui.components._VerticalScroll.ApplyPageFromCoord"] = haxe_ui_components__$VerticalScroll_ApplyPageFromCoord;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._VerticalScroll.ApplyPageFromCoord";
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.prototype, {
	__class__: haxe_ui_components__$VerticalScroll_ApplyPageFromCoord
});
class haxe_ui_components__$VerticalScroll_VerticalScrollLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		super.resizeChildren();
		let scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		let thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			let m = scroll.get_max() - scroll.get_min();
			let ucy = this.get_usableHeight();
			let thumbHeight = scroll.get_pageSize() / m * ucy;
			if(thumbHeight < this.get_innerWidth()) {
				thumbHeight = this.get_innerWidth();
			} else if(thumbHeight > ucy) {
				thumbHeight = ucy;
			}
			if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
				thumb.set_height(thumbHeight);
			}
		}
	}
	repositionChildren() {
		super.repositionChildren();
		let deinc = this.get_component().findComponent("scroll-deinc-button");
		let inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_height() - inc.get_height() - this.get_paddingBottom());
		}
		let scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		let thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			let m = scroll.get_max() - scroll.get_min();
			let u = this.get_usableHeight();
			u -= thumb.get_height();
			let y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_height() + this.get_verticalSpacing();
			}
			thumb.set_left(Math.round(thumb.get_left()));
			thumb.set_top(y);
		}
	}
	get_usableHeight() {
		let ucy = this.get_innerHeight();
		let deinc = this.get_component().findComponent("scroll-deinc-button");
		let inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_height() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_height() + this.get_verticalSpacing();
		}
		return ucy;
	}
}
$hxClasses["haxe.ui.components._VerticalScroll.VerticalScrollLayout"] = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__name__ = "haxe.ui.components._VerticalScroll.VerticalScrollLayout";
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components__$VerticalScroll_VerticalScrollLayout.prototype, {
	__class__: haxe_ui_components__$VerticalScroll_VerticalScrollLayout
});
class haxe_ui_components_VerticalSlider extends haxe_ui_components_Slider {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_components_VerticalSliderLayout;
		this._compositeBuilderClass = haxe_ui_components__$VerticalSlider_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_components_VerticalSlider();
	}
}
$hxClasses["haxe.ui.components.VerticalSlider"] = haxe_ui_components_VerticalSlider;
haxe_ui_components_VerticalSlider.__name__ = "haxe.ui.components.VerticalSlider";
haxe_ui_components_VerticalSlider.__super__ = haxe_ui_components_Slider;
Object.assign(haxe_ui_components_VerticalSlider.prototype, {
	__class__: haxe_ui_components_VerticalSlider
});
class haxe_ui_components_VerticalSliderLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		super.repositionChildren();
		let range = this.findComponent(null,haxe_ui_components_Range);
		let rangeValue = range.findComponent("range-value");
		let startThumb = this.findComponent("start-thumb");
		let endThumb = this.findComponent("end-thumb");
		if(startThumb != null) {
			let cy = rangeValue.get_height();
			if(rangeValue.get_hidden() == true) {
				cy = 0;
			}
			startThumb.set_top(range.get_top() + rangeValue.get_top() + cy - startThumb.get_height() / 2);
		}
		let cy = rangeValue.get_top();
		if(rangeValue.get_hidden() == true) {
			cy = range.get_height();
		}
		endThumb.set_top(range.get_top() + cy - endThumb.get_height() / 2);
	}
}
$hxClasses["haxe.ui.components.VerticalSliderLayout"] = haxe_ui_components_VerticalSliderLayout;
haxe_ui_components_VerticalSliderLayout.__name__ = "haxe.ui.components.VerticalSliderLayout";
haxe_ui_components_VerticalSliderLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_components_VerticalSliderLayout.prototype, {
	__class__: haxe_ui_components_VerticalSliderLayout
});
class haxe_ui_components__$VerticalSlider_Builder extends haxe_ui_components_SliderBuilder {
	constructor(component) {
		super(component);
	}
	createValueComponent() {
		return new haxe_ui_components_VerticalRange();
	}
}
$hxClasses["haxe.ui.components._VerticalSlider.Builder"] = haxe_ui_components__$VerticalSlider_Builder;
haxe_ui_components__$VerticalSlider_Builder.__name__ = "haxe.ui.components._VerticalSlider.Builder";
haxe_ui_components__$VerticalSlider_Builder.__super__ = haxe_ui_components_SliderBuilder;
Object.assign(haxe_ui_components__$VerticalSlider_Builder.prototype, {
	__class__: haxe_ui_components__$VerticalSlider_Builder
});
class haxe_ui_layouts_AbsoluteLayout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
	}
}
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_layouts_AbsoluteLayout.prototype, {
	__class__: haxe_ui_layouts_AbsoluteLayout
});
class haxe_ui_containers_Absolute extends haxe_ui_containers_Box {
	constructor() {
		super();
		this.set_layout(new haxe_ui_layouts_AbsoluteLayout());
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Absolute();
	}
}
$hxClasses["haxe.ui.containers.Absolute"] = haxe_ui_containers_Absolute;
haxe_ui_containers_Absolute.__name__ = "haxe.ui.containers.Absolute";
haxe_ui_containers_Absolute.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_Absolute.prototype, {
	__class__: haxe_ui_containers_Absolute
});
class haxe_ui_containers_Accordion extends haxe_ui_containers_VBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers__$Accordion_Events;
		this._compositeBuilderClass = haxe_ui_containers__$Accordion_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("pageIndex",haxe_ui_containers__$Accordion_PageIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedPage",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_pageIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageIndex"));
	}
	set_pageIndex(value) {
		this.behaviours.set("pageIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pageIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageIndex");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Accordion();
	}
}
$hxClasses["haxe.ui.containers.Accordion"] = haxe_ui_containers_Accordion;
haxe_ui_containers_Accordion.__name__ = "haxe.ui.containers.Accordion";
haxe_ui_containers_Accordion.__super__ = haxe_ui_containers_VBox;
Object.assign(haxe_ui_containers_Accordion.prototype, {
	__class__: haxe_ui_containers_Accordion
	,__properties__: Object.assign({}, haxe_ui_containers_VBox.prototype.__properties__, {set_pageIndex: "set_pageIndex",get_pageIndex: "get_pageIndex"})
});
class haxe_ui_containers__$Accordion_PageIndex extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromInt(-1))) {
			return;
		}
		let buttons = this._component.findComponents(null,haxe_ui_components_Button,1);
		let button = buttons[haxe_ui_util_Variant.toInt(value)];
		let panel = this._component.getComponentAt(this._component.getComponentIndex(button) + 1);
		panel.swapClass(":expanded",":collapsed");
		panel.set_hidden(false);
		button.set_selected(true);
		let _g = 0;
		while(_g < buttons.length) {
			let b = buttons[_g];
			++_g;
			if(b != button) {
				let tempIndex = this._component.getComponentIndex(b);
				let tempPanel = this._component.getComponentAt(tempIndex + 1);
				b.set_selected(false);
				tempPanel.swapClass(":collapsed",":expanded");
			}
		}
	}
}
$hxClasses["haxe.ui.containers._Accordion.PageIndex"] = haxe_ui_containers__$Accordion_PageIndex;
haxe_ui_containers__$Accordion_PageIndex.__name__ = "haxe.ui.containers._Accordion.PageIndex";
haxe_ui_containers__$Accordion_PageIndex.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$Accordion_PageIndex.prototype, {
	__class__: haxe_ui_containers__$Accordion_PageIndex
});
class haxe_ui_containers__$Accordion_Events extends haxe_ui_events_Events {
	constructor(accordion) {
		super(accordion);
		this._accordion = accordion;
	}
	register() {
		let buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		let _g = 0;
		while(_g < buttons.length) {
			let button = buttons[_g];
			++_g;
			if(button.hasEvent("change",$bind(this,this.onButtonChanged)) == false) {
				button.registerEvent("change",$bind(this,this.onButtonChanged));
			}
		}
	}
	unregister() {
		let buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		let _g = 0;
		while(_g < buttons.length) buttons[_g++].unregisterEvent("change",$bind(this,this.onButtonChanged));
	}
	onButtonChanged(event) {
		let buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		let button = event.target;
		let index = buttons.indexOf(button);
		if(button.get_selected() == true) {
			if(index == this._accordion.get_pageIndex()) {
				return;
			}
			this._accordion.set_pageIndex(index);
		} else if(index == this._accordion.get_pageIndex()) {
			button.set_selected(true);
		}
	}
}
$hxClasses["haxe.ui.containers._Accordion.Events"] = haxe_ui_containers__$Accordion_Events;
haxe_ui_containers__$Accordion_Events.__name__ = "haxe.ui.containers._Accordion.Events";
haxe_ui_containers__$Accordion_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers__$Accordion_Events.prototype, {
	__class__: haxe_ui_containers__$Accordion_Events
	,_accordion: null
});
class haxe_ui_containers__$Accordion_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(accordion) {
		super(accordion);
		this._accordion = accordion;
	}
	onReady() {
		super.onReady();
		let _g = 0;
		let _this = this._accordion;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) _g1[_g++].set_animatable(true);
	}
	addComponent(child) {
		if(!child.hasClass("accordion-button") && !child.hasClass("accordion-page")) {
			let button = new haxe_ui_components_Button();
			button.set_text(child.get_text());
			button.addClass("accordion-button");
			button.set_toggle(true);
			button.scriptAccess = false;
			this._accordion.addComponent(button);
			child.set_animatable(false);
			child.set_percentWidth(100);
			child.addClass("accordion-page");
			let c = this._accordion.addComponent(child);
			if(this._accordion.get_pageIndex() == -1) {
				child.set_percentHeight(100);
				this._accordion.set_pageIndex(0);
			} else {
				child.set_hidden(true);
			}
			child.set_onAnimationEnd(function(e) {
				if(e.target.hasClass(":collapsed")) {
					e.target.set_hidden(true);
				}
			});
			this._component.registerInternalEvents(null,true);
			let buttonCount = 0;
			let pageCount = 0;
			let _g = 0;
			let _this = this._accordion;
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.hasClass("accordion-button")) {
					if(buttonCount == 0) {
						child.swapClass("first","last",false);
					} else {
						let tmp;
						let _this = this._component;
						if((_this._children == null ? [] : _this._children).length / 2 > 1) {
							let _this = this._component;
							tmp = buttonCount == (_this._children == null ? [] : _this._children).length / 2 - 1;
						} else {
							tmp = false;
						}
						if(tmp) {
							child.swapClass("last","first",false);
						} else {
							child.removeClasses(["first","last"],false);
						}
					}
					++buttonCount;
				} else if(child.hasClass("accordion-page")) {
					if(pageCount == 0) {
						child.swapClass("first","last",false);
					} else {
						let tmp;
						let _this = this._component;
						if((_this._children == null ? [] : _this._children).length / 2 > 1) {
							let _this = this._component;
							tmp = pageCount == (_this._children == null ? [] : _this._children).length / 2 - 1;
						} else {
							tmp = false;
						}
						if(tmp) {
							child.swapClass("last","first",false);
						} else {
							child.removeClasses(["first","last"],false);
						}
					}
					++pageCount;
				}
			}
			return c;
		}
		return null;
	}
}
$hxClasses["haxe.ui.containers._Accordion.Builder"] = haxe_ui_containers__$Accordion_Builder;
haxe_ui_containers__$Accordion_Builder.__name__ = "haxe.ui.containers._Accordion.Builder";
haxe_ui_containers__$Accordion_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers__$Accordion_Builder.prototype, {
	__class__: haxe_ui_containers__$Accordion_Builder
	,_accordion: null
});
class haxe_ui_containers_ButtonBar extends haxe_ui_containers_Box {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("toggle",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ButtonBar_SelectedIndex);
	}
	get_toggle() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	get_selectedIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	set_selectedIndex(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_ButtonBar();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers__$ButtonBar_Events;
		this._compositeBuilderClass = haxe_ui_containers__$ButtonBar_Builder;
	}
}
$hxClasses["haxe.ui.containers.ButtonBar"] = haxe_ui_containers_ButtonBar;
haxe_ui_containers_ButtonBar.__name__ = "haxe.ui.containers.ButtonBar";
haxe_ui_containers_ButtonBar.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_containers_ButtonBar.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_ButtonBar.prototype, {
	__class__: haxe_ui_containers_ButtonBar
	,__properties__: Object.assign({}, haxe_ui_containers_Box.prototype.__properties__, {set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex",get_toggle: "get_toggle"})
});
class haxe_ui_containers__$ButtonBar_SelectedIndex extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$ButtonBar_Builder);
		let currentButton = builder._currentButton;
		let button = js_Boot.__cast(this._component.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(currentButton == button) {
			return;
		}
		if(currentButton != null) {
			builder._currentButton.set_selected(false);
		}
		button.set_selected(true);
		builder._currentButton = button;
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.containers._ButtonBar.SelectedIndex"] = haxe_ui_containers__$ButtonBar_SelectedIndex;
haxe_ui_containers__$ButtonBar_SelectedIndex.__name__ = "haxe.ui.containers._ButtonBar.SelectedIndex";
haxe_ui_containers__$ButtonBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ButtonBar_SelectedIndex.prototype, {
	__class__: haxe_ui_containers__$ButtonBar_SelectedIndex
});
class haxe_ui_containers__$ButtonBar_Events extends haxe_ui_events_Events {
	constructor(bar) {
		super(bar);
		this._bar = bar;
	}
	register() {
		let buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		let _g = 0;
		while(_g < buttons.length) {
			let button = buttons[_g];
			++_g;
			if(button.hasEvent("change",$bind(this,this.onButtonChanged)) == false) {
				button.registerEvent("change",$bind(this,this.onButtonChanged));
			}
		}
	}
	unregister() {
		let buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		let _g = 0;
		while(_g < buttons.length) buttons[_g++].unregisterEvent("change",$bind(this,this.onButtonChanged));
	}
	onButtonChanged(event) {
		let button = js_Boot.__cast(event.target , haxe_ui_components_Button);
		let index = this._bar.getComponentIndex(button);
		if(index == this._bar.get_selectedIndex() && button.get_selected() == false) {
			button.set_selected(true);
			return;
		}
		if(button.get_selected() == true) {
			this._bar.set_selectedIndex(index);
		}
	}
}
$hxClasses["haxe.ui.containers._ButtonBar.Events"] = haxe_ui_containers__$ButtonBar_Events;
haxe_ui_containers__$ButtonBar_Events.__name__ = "haxe.ui.containers._ButtonBar.Events";
haxe_ui_containers__$ButtonBar_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers__$ButtonBar_Events.prototype, {
	__class__: haxe_ui_containers__$ButtonBar_Events
	,_bar: null
});
class haxe_ui_containers__$ButtonBar_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(bar) {
		super(bar);
		this._bar = bar;
	}
	addComponent(child) {
		if(((child) instanceof haxe_ui_components_Button)) {
			(js_Boot.__cast(child , haxe_ui_components_Button)).set_toggle(this._bar.get_toggle());
		}
		this._component.registerInternalEvents(null,true);
		return null;
	}
	onReady() {
		this._component.registerInternalEvents(null,true);
	}
}
$hxClasses["haxe.ui.containers._ButtonBar.Builder"] = haxe_ui_containers__$ButtonBar_Builder;
haxe_ui_containers__$ButtonBar_Builder.__name__ = "haxe.ui.containers._ButtonBar.Builder";
haxe_ui_containers__$ButtonBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers__$ButtonBar_Builder.prototype, {
	__class__: haxe_ui_containers__$ButtonBar_Builder
	,_bar: null
	,_currentButton: null
});
class haxe_ui_containers_CalendarView extends haxe_ui_containers_VBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers__$CalendarView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$CalendarView_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("selectedDate",haxe_ui_containers__$CalendarView_SelectedDateBehaviour);
	}
	get_selectedDate() {
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	set_selectedDate(value) {
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedDate"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedDate");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_CalendarView();
	}
}
$hxClasses["haxe.ui.containers.CalendarView"] = haxe_ui_containers_CalendarView;
haxe_ui_containers_CalendarView.__name__ = "haxe.ui.containers.CalendarView";
haxe_ui_containers_CalendarView.__super__ = haxe_ui_containers_VBox;
Object.assign(haxe_ui_containers_CalendarView.prototype, {
	__class__: haxe_ui_containers_CalendarView
	,__properties__: Object.assign({}, haxe_ui_containers_VBox.prototype.__properties__, {set_selectedDate: "set_selectedDate",get_selectedDate: "get_selectedDate"})
});
class haxe_ui_containers__$CalendarView_SelectedDateBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromDate(this._component.findComponent(null,haxe_ui_components_Calendar).get_selectedDate());
	}
	set(value) {
		this._component.findComponent(null,haxe_ui_components_Calendar).set_selectedDate(haxe_ui_util_Variant.toDate(value));
	}
}
$hxClasses["haxe.ui.containers._CalendarView.SelectedDateBehaviour"] = haxe_ui_containers__$CalendarView_SelectedDateBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__name__ = "haxe.ui.containers._CalendarView.SelectedDateBehaviour";
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$CalendarView_SelectedDateBehaviour.prototype, {
	__class__: haxe_ui_containers__$CalendarView_SelectedDateBehaviour
});
class haxe_ui_containers__$CalendarView_Events extends haxe_ui_events_Events {
	constructor(target) {
		super(target);
	}
	register() {
		let button = this._target.findComponent("prev-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onPrevMonth));
		}
		let button1 = this._target.findComponent("next-month");
		if(button1 != null && button1.hasEvent("click") == false) {
			button1.registerEvent("click",$bind(this,this.onNextMonth));
		}
		let stepper = this._target.findComponent("current-year");
		if(stepper != null && stepper.hasEvent("change") == false) {
			stepper.registerEvent("change",$bind(this,this.onYearChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("datechange",$bind(this,this.onDateChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("datechange",$bind(this,this.onDateChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("change",$bind(this,this.onCalendarChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	onPrevMonth(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
	}
	onNextMonth(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
	}
	onYearChange(event) {
		let calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		let stepper = this._target.findComponent("current-year");
		if(stepper.get_pos() > calendar.get_date().getFullYear()) {
			calendar.nextYear();
		} else if(stepper.get_pos() < calendar.get_date().getFullYear()) {
			calendar.previousYear();
		}
	}
	onDateChange(event) {
		let calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		let monthName = haxe_ui_containers_CalendarView.MONTH_NAMES[calendar.get_date().getMonth()];
		this._target.findComponent("current-month",haxe_ui_components_Label).set_text(monthName + "  " + calendar.get_date().getFullYear());
	}
	onCalendarChange(event) {
		let calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		this._target.findComponent("current-year").set_pos(calendar.get_selectedDate().getFullYear());
		this._target.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	onMouseWheel(event) {
		if(event.delta >= 1) {
			this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
		} else {
			this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
		}
	}
}
$hxClasses["haxe.ui.containers._CalendarView.Events"] = haxe_ui_containers__$CalendarView_Events;
haxe_ui_containers__$CalendarView_Events.__name__ = "haxe.ui.containers._CalendarView.Events";
haxe_ui_containers__$CalendarView_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers__$CalendarView_Events.prototype, {
	__class__: haxe_ui_containers__$CalendarView_Events
});
class haxe_ui_containers__$CalendarView_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(calendarView) {
		super(calendarView);
		this._calendarView = calendarView;
	}
	create() {
		let box = new haxe_ui_containers_Box();
		box.set_percentWidth(100);
		let button = new haxe_ui_components_Button();
		button.set_id("prev-month");
		box.addComponent(button);
		let hbox = new haxe_ui_containers_HBox();
		hbox.set_horizontalAlign("center");
		hbox.set_verticalAlign("center");
		let label = new haxe_ui_components_Label();
		label.set_id("current-month");
		let now = new Date();
		label.set_text(haxe_ui_containers_CalendarView.MONTH_NAMES[now.getMonth()] + "  " + now.getFullYear());
		hbox.addComponent(label);
		let stepper = new haxe_ui_components_Stepper();
		stepper.set_id("current-year");
		stepper.set_min(0);
		stepper.set_max(now.getFullYear() + 1000);
		stepper.set_pos(now.getFullYear());
		stepper.set_repeater(false);
		hbox.addComponent(stepper);
		box.addComponent(hbox);
		let button1 = new haxe_ui_components_Button();
		button1.set_id("next-month");
		button1.set_horizontalAlign("right");
		box.addComponent(button1);
		this._calendarView.addComponent(box);
		let calendar = new haxe_ui_components_Calendar();
		this._calendarView.addComponent(calendar);
	}
}
$hxClasses["haxe.ui.containers._CalendarView.Builder"] = haxe_ui_containers__$CalendarView_Builder;
haxe_ui_containers__$CalendarView_Builder.__name__ = "haxe.ui.containers._CalendarView.Builder";
haxe_ui_containers__$CalendarView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers__$CalendarView_Builder.prototype, {
	__class__: haxe_ui_containers__$CalendarView_Builder
	,_calendarView: null
});
class haxe_ui_layouts_HorizontalContinuousLayout extends haxe_ui_layouts_HorizontalLayout {
	constructor() {
		super();
	}
	resizeChildren() {
	}
	repositionChildren() {
		if(this.get_component().get_autoWidth() == true) {
			super.repositionChildren();
			return;
		}
		if(this.get_usableWidth() <= 0) {
			return;
		}
		let ucx = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		let ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		let dimensions = [];
		let heights = [];
		let row = 0;
		let usedCX = 0;
		let xpos = this.get_paddingLeft();
		let ypos = this.get_paddingTop();
		let rowCY = 0;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX > ucx) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width;
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		let x = 0;
		let _g2 = 0;
		while(_g2 < dimensions.length) {
			let r = dimensions[_g2];
			++_g2;
			let height = heights[x];
			let spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			let n = 0;
			let _g = 0;
			while(_g < r.length) {
				let c = r[_g];
				++_g;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	get_usableSize() {
		if(this.get_component().get_autoWidth() == true) {
			return super.get_usableSize();
		}
		let ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		let ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
}
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
Object.assign(haxe_ui_layouts_HorizontalContinuousLayout.prototype, {
	__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
class haxe_ui_containers_ContinuousHBox extends haxe_ui_containers_Box {
	constructor() {
		super();
		this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_ContinuousHBox();
	}
}
$hxClasses["haxe.ui.containers.ContinuousHBox"] = haxe_ui_containers_ContinuousHBox;
haxe_ui_containers_ContinuousHBox.__name__ = "haxe.ui.containers.ContinuousHBox";
haxe_ui_containers_ContinuousHBox.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_ContinuousHBox.prototype, {
	__class__: haxe_ui_containers_ContinuousHBox
});
class haxe_ui_containers_Frame extends haxe_ui_containers_Box {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_containers__$Frame_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers__$Frame_IconBehaviour);
	}
	get_value() {
		return this.get_text();
	}
	set_value(value) {
		this.set_text(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"text");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Frame();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_containers__$Frame_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$Frame_Layout;
	}
}
$hxClasses["haxe.ui.containers.Frame"] = haxe_ui_containers_Frame;
haxe_ui_containers_Frame.__name__ = "haxe.ui.containers.Frame";
haxe_ui_containers_Frame.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_Frame.prototype, {
	__class__: haxe_ui_containers_Frame
});
class haxe_ui_containers__$Frame_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		this._component.findComponent(null,haxe_ui_components_Label,false).set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers._Frame.TextBehaviour"] = haxe_ui_containers__$Frame_TextBehaviour;
haxe_ui_containers__$Frame_TextBehaviour.__name__ = "haxe.ui.containers._Frame.TextBehaviour";
haxe_ui_containers__$Frame_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$Frame_TextBehaviour.prototype, {
	__class__: haxe_ui_containers__$Frame_TextBehaviour
});
class haxe_ui_containers__$Frame_IconBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let icon = this._component.findComponent("frame-icon",null,false);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("frame-icon");
			icon.set_id("frame-icon");
			icon.scriptAccess = false;
			icon.set_includeInLayout(false);
			this._component.addComponent(icon);
		}
		icon.set_resource(this._value);
	}
}
$hxClasses["haxe.ui.containers._Frame.IconBehaviour"] = haxe_ui_containers__$Frame_IconBehaviour;
haxe_ui_containers__$Frame_IconBehaviour.__name__ = "haxe.ui.containers._Frame.IconBehaviour";
haxe_ui_containers__$Frame_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$Frame_IconBehaviour.prototype, {
	__class__: haxe_ui_containers__$Frame_IconBehaviour
});
class haxe_ui_containers__$Frame_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(frame) {
		super(frame);
		this._frame = frame;
	}
	create() {
		this._contents = new haxe_ui_containers_Box();
		this._contents.set_id("frame-contents");
		this._contents.addClass("frame-contents");
		this._frame.addComponent(this._contents);
		this._label = new haxe_ui_components_Label();
		this._label.set_text("My Frame");
		this._label.set_id("frame-title");
		this._label.addClass("frame-title");
		this._label.set_includeInLayout(false);
		this._frame.addComponent(this._label);
		let line = new haxe_ui_core_Component();
		line.set_id("frame-left-line");
		line.addClass("frame-left-line");
		line.set_includeInLayout(false);
		this._frame.addComponent(line);
		let line1 = new haxe_ui_core_Component();
		line1.set_id("frame-right-line");
		line1.addClass("frame-right-line");
		line1.set_includeInLayout(false);
		this._frame.addComponent(line1);
	}
	addComponent(child) {
		if(child.get_id() != "frame-contents" && child.get_id() != "frame-title" && child.get_id() != "frame-icon" && child.get_id() != "frame-left-line" && child.get_id() != "frame-right-line") {
			return this._contents.addComponent(child);
		}
		return super.addComponent(child);
	}
}
$hxClasses["haxe.ui.containers._Frame.Builder"] = haxe_ui_containers__$Frame_Builder;
haxe_ui_containers__$Frame_Builder.__name__ = "haxe.ui.containers._Frame.Builder";
haxe_ui_containers__$Frame_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers__$Frame_Builder.prototype, {
	__class__: haxe_ui_containers__$Frame_Builder
	,_frame: null
	,_contents: null
	,_label: null
});
class haxe_ui_containers__$Frame_Layout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		let contents = this.findComponent("frame-contents",haxe_ui_containers_Box,false);
		let label = this.findComponent("frame-title",haxe_ui_components_Label,false);
		let icon = this.findComponent("frame-icon",haxe_ui_components_Image,false);
		let line1 = this.findComponent("frame-left-line",haxe_ui_core_Component,false);
		let line2 = this.findComponent("frame-right-line",haxe_ui_core_Component,false);
		if(this._component.get_autoWidth() == false) {
			contents.set_width(this._component.get_width());
		}
		if(this._component.get_autoHeight() == false) {
			contents.set_height(this._component.get_height() - label.get_height() / 2);
		}
		line1.set_width(this.get_paddingLeft() - 2);
		let cx = label.get_width();
		if(icon != null) {
			cx += icon.get_width() + this.get_horizontalSpacing();
		}
		line2.set_width(this._component.get_width() - (this.get_paddingLeft() + cx) - 2);
	}
	repositionChildren() {
		let contents = this.findComponent("frame-contents",haxe_ui_containers_Box,false);
		let label = this.findComponent("frame-title",haxe_ui_components_Label,false);
		let icon = this.findComponent("frame-icon",haxe_ui_components_Image,false);
		let line1 = this.findComponent("frame-left-line",haxe_ui_core_Component,false);
		let line2 = this.findComponent("frame-right-line",haxe_ui_core_Component,false);
		contents.set_top(this._component.get_height() - contents.get_height());
		let x = this.get_paddingLeft();
		if(icon != null) {
			icon.set_top(label.get_height() / 2 - icon.get_height() / 2 - 1);
			icon.set_left(this.get_paddingLeft());
			x += icon.get_width() + this.get_horizontalSpacing();
		}
		label.set_left(x);
		line1.set_top(contents.get_top());
		line2.set_left(this._component.get_width() - line2.get_width());
		line2.set_top(contents.get_top());
	}
	calcAutoSize(exclusions) {
		let label = this.findComponent("frame-title",haxe_ui_components_Label,false);
		let size = super.calcAutoSize(exclusions);
		size.height += label.get_height() / 2;
		size.width -= this.get_paddingLeft();
		return size;
	}
}
$hxClasses["haxe.ui.containers._Frame.Layout"] = haxe_ui_containers__$Frame_Layout;
haxe_ui_containers__$Frame_Layout.__name__ = "haxe.ui.containers._Frame.Layout";
haxe_ui_containers__$Frame_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_containers__$Frame_Layout.prototype, {
	__class__: haxe_ui_containers__$Frame_Layout
});
class haxe_ui_containers_Group extends haxe_ui_containers_Box {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("componentGroup",haxe_ui_behaviours_DataBehaviour,haxe_ui_util_Variant.fromString("group" + haxe_ui_util_GUID.uuid()));
	}
	get_componentGroup() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	set_componentGroup(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"componentGroup",value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"componentGroup"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"componentGroup");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Group();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_containers__$Group_Builder;
	}
}
$hxClasses["haxe.ui.containers.Group"] = haxe_ui_containers_Group;
haxe_ui_containers_Group.__name__ = "haxe.ui.containers.Group";
haxe_ui_containers_Group.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_Group.prototype, {
	__class__: haxe_ui_containers_Group
	,__properties__: Object.assign({}, haxe_ui_containers_Box.prototype.__properties__, {set_componentGroup: "set_componentGroup",get_componentGroup: "get_componentGroup"})
});
class haxe_ui_containers__$Group_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(group) {
		super(group);
		this._group = group;
	}
	addComponent(child) {
		this.childAdd(child);
		return super.addComponent(child);
	}
	addComponentAt(child,index) {
		this.childAdd(child);
		return super.addComponentAt(child,index);
	}
	childAdd(child) {
		if(((child) instanceof haxe_ui_core_InteractiveComponent)) {
			this.processGroupChild(child);
		} else {
			let interactiveChildren = child.findComponents(null,haxe_ui_core_InteractiveComponent);
			let _g = 0;
			while(_g < interactiveChildren.length) this.processGroupChild(interactiveChildren[_g++]);
		}
	}
	processGroupChild(child) {
		if(((child) instanceof haxe_ui_components_OptionBox)) {
			if(this._group.get_componentGroup() == null) {
				this._group.set_componentGroup("group" + haxe_ui_util_GUID.uuid());
			}
			(js_Boot.__cast(child , haxe_ui_components_OptionBox)).set_componentGroup(this._group.get_componentGroup());
		}
		if(child.hasEvent("change",$bind(this,this.childChangeHandler)) == false) {
			child.registerEvent("change",$bind(this,this.childChangeHandler));
		}
	}
	childChangeHandler(e) {
		this._group.dispatch(e.clone());
	}
}
$hxClasses["haxe.ui.containers._Group.Builder"] = haxe_ui_containers__$Group_Builder;
haxe_ui_containers__$Group_Builder.__name__ = "haxe.ui.containers._Group.Builder";
haxe_ui_containers__$Group_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers__$Group_Builder.prototype, {
	__class__: haxe_ui_containers__$Group_Builder
	,_group: null
});
class haxe_ui_containers__$Header_Layout extends haxe_ui_layouts_HorizontalLayout {
	constructor() {
		super();
	}
	resizeChildren() {
		super.resizeChildren();
		let max = 0;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_height() > max) {
				max = child.get_height();
			}
		}
		let _g2 = 0;
		let _this1 = this.get_component();
		let _g3 = _this1._children == null ? [] : _this1._children;
		while(_g2 < _g3.length) {
			let child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_text() == null || child.get_text().length == 0) {
				child.set_height(max);
			}
		}
	}
}
$hxClasses["haxe.ui.containers._Header.Layout"] = haxe_ui_containers__$Header_Layout;
haxe_ui_containers__$Header_Layout.__name__ = "haxe.ui.containers._Header.Layout";
haxe_ui_containers__$Header_Layout.__super__ = haxe_ui_layouts_HorizontalLayout;
Object.assign(haxe_ui_containers__$Header_Layout.prototype, {
	__class__: haxe_ui_containers__$Header_Layout
});
class haxe_ui_containers_Header extends haxe_ui_containers_HBox {
	constructor() {
		super();
		this.set_layout(new haxe_ui_containers__$Header_Layout());
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_containers__$Header_Layout;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Header();
	}
}
$hxClasses["haxe.ui.containers.Header"] = haxe_ui_containers_Header;
haxe_ui_containers_Header.__name__ = "haxe.ui.containers.Header";
haxe_ui_containers_Header.__super__ = haxe_ui_containers_HBox;
Object.assign(haxe_ui_containers_Header.prototype, {
	__class__: haxe_ui_containers_Header
});
class haxe_ui_containers_HorizontalButtonBar extends haxe_ui_containers_ButtonBar {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_layouts_HorizontalLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_HorizontalButtonBar();
	}
}
$hxClasses["haxe.ui.containers.HorizontalButtonBar"] = haxe_ui_containers_HorizontalButtonBar;
haxe_ui_containers_HorizontalButtonBar.__name__ = "haxe.ui.containers.HorizontalButtonBar";
haxe_ui_containers_HorizontalButtonBar.__super__ = haxe_ui_containers_ButtonBar;
Object.assign(haxe_ui_containers_HorizontalButtonBar.prototype, {
	__class__: haxe_ui_containers_HorizontalButtonBar
});
class haxe_ui_containers_Splitter extends haxe_ui_containers_Box {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Splitter();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_SplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers_SplitterBuilder;
	}
}
$hxClasses["haxe.ui.containers.Splitter"] = haxe_ui_containers_Splitter;
haxe_ui_containers_Splitter.__name__ = "haxe.ui.containers.Splitter";
haxe_ui_containers_Splitter.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_containers_Splitter.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_Splitter.prototype, {
	__class__: haxe_ui_containers_Splitter
});
class haxe_ui_containers_HorizontalSplitter extends haxe_ui_containers_Splitter {
	constructor() {
		super();
		this.set_layoutName("horizontal");
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_HorizontalSplitter();
	}
}
$hxClasses["haxe.ui.containers.HorizontalSplitter"] = haxe_ui_containers_HorizontalSplitter;
haxe_ui_containers_HorizontalSplitter.__name__ = "haxe.ui.containers.HorizontalSplitter";
haxe_ui_containers_HorizontalSplitter.__super__ = haxe_ui_containers_Splitter;
Object.assign(haxe_ui_containers_HorizontalSplitter.prototype, {
	__class__: haxe_ui_containers_HorizontalSplitter
});
class haxe_ui_containers_SplitterEvents extends haxe_ui_events_Events {
	constructor(splitter) {
		haxe_ui_events_Events._hx_skip_constructor = true;
		super();
		haxe_ui_events_Events._hx_skip_constructor = false;
		this._hx_constructor(splitter);
	}
	_hx_constructor(splitter) {
		this._currentOffset = null;
		this._currentGripper = null;
		super._hx_constructor(splitter);
		this._splitter = splitter;
	}
	register() {
		let grippers = this._splitter.findComponents((js_Boot.__cast(this._splitter._compositeBuilder , haxe_ui_containers_SplitterBuilder)).getSplitterClass(),haxe_ui_core_Component,1);
		let _g = 0;
		while(_g < grippers.length) grippers[_g++].registerEvent("mousedown",$bind(this,this.onGripperMouseDown));
	}
	unregister() {
		let grippers = this._splitter.findComponents((js_Boot.__cast(this._splitter._compositeBuilder , haxe_ui_containers_SplitterBuilder)).getSplitterClass(),haxe_ui_core_Component,1);
		let _g = 0;
		while(_g < grippers.length) grippers[_g++].unregisterEvent("mousedown",$bind(this,this.onGripperMouseDown));
	}
	onGripperMouseDown(event) {
		this._currentGripper = js_Boot.__cast(event.target , haxe_ui_containers__$Splitter_SizerGripper);
		this._currentOffset = new haxe_ui_geom_Point(event.screenX,event.screenY);
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	onScreenMouseMove(event) {
		this._currentGripper.addClass(":hover");
		let index = this._splitter.getComponentIndex(this._currentGripper);
		this.handleResize(this._splitter.getComponentAt(index - 1),this._splitter.getComponentAt(index + 1),event);
		this._currentOffset = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	handleResize(prev,next,event) {
	}
	onScreenMouseUp(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		window.document.body.style.cursor = null;
	}
}
$hxClasses["haxe.ui.containers.SplitterEvents"] = haxe_ui_containers_SplitterEvents;
haxe_ui_containers_SplitterEvents.__name__ = "haxe.ui.containers.SplitterEvents";
haxe_ui_containers_SplitterEvents.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers_SplitterEvents.prototype, {
	__class__: haxe_ui_containers_SplitterEvents
	,_splitter: null
	,_currentGripper: null
	,_currentOffset: null
});
class haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents extends haxe_ui_containers_SplitterEvents {
	constructor(splitter) {
		super(splitter);
	}
	onGripperMouseDown(event) {
		super.onGripperMouseDown(event);
		window.document.body.style.cursor = "col-resize";
	}
	handleResize(prev,next,event) {
		let delta = event.screenX - this._currentOffset.x;
		let prevCX = prev.set_width(prev.get_width() + delta);
		let nextCX = next.set_width(next.get_width() - delta);
		let ucx = this._splitter.get_layout().get_usableWidth();
		if(prev.get_percentWidth() != null) {
			prev.set_percentWidth(prevCX / ucx * 100);
		} else {
			prev.set_width(prevCX);
		}
		if(next.get_percentWidth() != null) {
			next.set_percentWidth(nextCX / ucx * 100);
		} else {
			next.set_width(nextCX);
		}
	}
}
$hxClasses["haxe.ui.containers._HorizontalSplitter.HorizontalSplitterEvents"] = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.__name__ = "haxe.ui.containers._HorizontalSplitter.HorizontalSplitterEvents";
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.__super__ = haxe_ui_containers_SplitterEvents;
Object.assign(haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.prototype, {
	__class__: haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents
});
class haxe_ui_containers_SplitterBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(splitter) {
		super(splitter);
		this._splitter = splitter;
	}
	addComponent(child) {
		let _this = this._splitter;
		if((_this._children == null ? [] : _this._children).length > 0 && child.hasClass(this.getSplitterClass()) == false) {
			let gripper = new haxe_ui_containers__$Splitter_SizerGripper();
			gripper.set_id(this.getSplitterClass());
			gripper.addClass(this.getSplitterClass());
			this._splitter.addComponent(gripper);
			this._splitter.registerInternalEvents(null,true);
		}
		if(child.hasClass(this.getSplitterClass()) == false) {
			child.registerEvent("shown",$bind(this,this.onComponentShown));
			child.registerEvent("hidden",$bind(this,this.onComponentHidden));
		}
		if(child.get_hidden() == true) {
			this.onComponentHidden(null);
		}
		return null;
	}
	getSplitterClass() {
		return "splitter-gripper";
	}
	onComponentShown(e) {
		let _this = this._splitter;
		let children = (_this._children == null ? [] : _this._children).slice();
		let _g = 0;
		while(_g < children.length) {
			let c = children[_g];
			++_g;
			if(c.get_hidden() == true) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.show();
				}
				break;
			}
		}
		children.reverse();
		let _g1 = 0;
		while(_g1 < children.length) {
			let c = children[_g1];
			++_g1;
			if(c.get_hidden() == true) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.show();
				}
				break;
			}
		}
	}
	onComponentHidden(e) {
		let _this = this._splitter;
		let children = (_this._children == null ? [] : _this._children).slice();
		let _g = 0;
		while(_g < children.length) {
			let c = children[_g];
			++_g;
			if(c.get_hidden() == false) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.hide();
				}
				break;
			}
		}
		children.reverse();
		let _g1 = 0;
		while(_g1 < children.length) {
			let c = children[_g1];
			++_g1;
			if(c.get_hidden() == false) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.hide();
				}
				break;
			}
		}
	}
}
$hxClasses["haxe.ui.containers.SplitterBuilder"] = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers_SplitterBuilder.__name__ = "haxe.ui.containers.SplitterBuilder";
haxe_ui_containers_SplitterBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_SplitterBuilder.prototype, {
	__class__: haxe_ui_containers_SplitterBuilder
	,_splitter: null
});
class haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder extends haxe_ui_containers_SplitterBuilder {
	constructor(splitter) {
		super(splitter);
	}
	getSplitterClass() {
		return "horizontal-splitter-gripper";
	}
}
$hxClasses["haxe.ui.containers._HorizontalSplitter.HorizontalSplitterBuilder"] = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.__name__ = "haxe.ui.containers._HorizontalSplitter.HorizontalSplitterBuilder";
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.__super__ = haxe_ui_containers_SplitterBuilder;
Object.assign(haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.prototype, {
	__class__: haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder
});
class haxe_ui_containers_IVirtualContainer {
}
$hxClasses["haxe.ui.containers.IVirtualContainer"] = haxe_ui_containers_IVirtualContainer;
haxe_ui_containers_IVirtualContainer.__name__ = "haxe.ui.containers.IVirtualContainer";
haxe_ui_containers_IVirtualContainer.__isInterface__ = true;
Object.assign(haxe_ui_containers_IVirtualContainer.prototype, {
	__class__: haxe_ui_containers_IVirtualContainer
	,get_itemHeight: null
	,get_itemCount: null
	,get_variableItemSize: null
	,get_virtual: null
	,get_vscrollPos: null
	,set_vscrollMax: null
	,set_vscrollPageSize: null
	,get_itemRenderer: null
	,get_itemRendererFunction: null
	,get_itemRendererClass: null
	,__properties__: {get_itemRendererClass: "get_itemRendererClass",get_itemRendererFunction: "get_itemRendererFunction",get_itemRenderer: "get_itemRenderer",get_vscrollPos: "get_vscrollPos",get_virtual: "get_virtual",get_variableItemSize: "get_variableItemSize",get_itemCount: "get_itemCount",get_itemHeight: "get_itemHeight",set_vscrollPageSize: "set_vscrollPageSize",set_vscrollMax: "set_vscrollMax"}
});
class haxe_ui_containers_ScrollView extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	validateComponentInternal(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this.get_native() == true) {
			super.validateComponentInternal(nextFrame);
			return;
		}
		let scrollInvalid = this.isComponentInvalid("scroll");
		let layoutInvalid = this.isComponentInvalid("layout");
		super.validateComponentInternal(nextFrame);
		if(scrollInvalid || layoutInvalid) {
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).checkScrolls();
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).updateScrollRect();
		}
	}
	ensureVisible(component) {
		return;
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_ScrollViewEvents;
		this._compositeBuilderClass = haxe_ui_containers_ScrollViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_ScrollViewLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("virtual",haxe_ui_containers__$ScrollView_Virtual);
		this.behaviours.register("contentLayoutName",haxe_ui_containers__$ScrollView_ContentLayoutName,haxe_ui_util_Variant.fromString("vertical"));
		this.behaviours.register("contentWidth",haxe_ui_containers__$ScrollView_ContentWidth);
		this.behaviours.register("percentContentWidth",haxe_ui_containers__$ScrollView_PercentContentWidth);
		this.behaviours.register("contentHeight",haxe_ui_containers__$ScrollView_ContentHeight);
		this.behaviours.register("percentContentHeight",haxe_ui_containers__$ScrollView_PercentContentHeight);
		this.behaviours.register("hscrollPos",haxe_ui_containers__$ScrollView_HScrollPos);
		this.behaviours.register("hscrollMax",haxe_ui_containers__$ScrollView_HScrollMax);
		this.behaviours.register("hscrollPageSize",haxe_ui_containers__$ScrollView_HScrollPageSize);
		this.behaviours.register("vscrollPos",haxe_ui_containers__$ScrollView_VScrollPos);
		this.behaviours.register("vscrollMax",haxe_ui_containers__$ScrollView_VScrollMax);
		this.behaviours.register("vscrollPageSize",haxe_ui_containers__$ScrollView_VScrollPageSize);
		this.behaviours.register("scrollMode",haxe_ui_containers__$ScrollView_ScrollModeBehaviour,haxe_ui_util_Variant.fromString("drag"));
		this.behaviours.register("contents",haxe_ui_containers__$ScrollView_GetContents);
	}
	get_virtual() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	set_virtual(value) {
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"virtual"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"virtual");
		return value;
	}
	get_contentLayoutName() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("contentLayoutName"));
	}
	get_hscrollPos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPos"));
	}
	set_hscrollPos(value) {
		this.behaviours.set("hscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"hscrollPos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"hscrollPos");
		return value;
	}
	get_hscrollMax() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollMax"));
	}
	get_vscrollPos() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPos"));
	}
	set_vscrollPos(value) {
		this.behaviours.set("vscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"vscrollPos"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"vscrollPos");
		return value;
	}
	get_vscrollMax() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollMax"));
	}
	set_vscrollMax(value) {
		this.behaviours.set("vscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"vscrollMax"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"vscrollMax");
		return value;
	}
	set_vscrollPageSize(value) {
		this.behaviours.set("vscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"vscrollPageSize"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"vscrollPageSize");
		return value;
	}
	get_scrollMode() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollMode"));
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_ScrollView();
	}
}
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = "haxe.ui.containers.ScrollView";
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_containers_ScrollView.prototype, {
	__class__: haxe_ui_containers_ScrollView
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {get_scrollMode: "get_scrollMode",set_vscrollPageSize: "set_vscrollPageSize",set_vscrollMax: "set_vscrollMax",get_vscrollMax: "get_vscrollMax",set_vscrollPos: "set_vscrollPos",get_vscrollPos: "get_vscrollPos",get_hscrollMax: "get_hscrollMax",set_hscrollPos: "set_hscrollPos",get_hscrollPos: "get_hscrollPos",get_contentLayoutName: "get_contentLayoutName",set_virtual: "set_virtual",get_virtual: "get_virtual"})
});
class haxe_ui_containers_ListView extends haxe_ui_containers_ScrollView {
	constructor() {
		super();
	}
	get_itemRendererFunction() {
		return this._itemRendererFunction;
	}
	get_itemRendererClass() {
		return this._itemRendererClass;
	}
	get_itemRenderer() {
		return this._itemRenderer;
	}
	set_itemRenderer(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("dataSource",haxe_ui_containers__$ListView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ListView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$ListView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$ListView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$ListView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$ListView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
	}
	get_dataSource() {
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	set_dataSource(value) {
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dataSource"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"dataSource");
		return value;
	}
	get_itemHeight() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	get_itemCount() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	set_itemCount(value) {
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemCount"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"itemCount");
		return value;
	}
	get_variableItemSize() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	get_selectedIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	set_selectedIndex(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"value");
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	get_selectedItem() {
		return this.behaviours.getDynamic("selectedItem");
	}
	get_selectedIndices() {
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	set_selectedIndices(value) {
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndices"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndices");
		return value;
	}
	get_selectionMode() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	get_longPressSelectionTime() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	get_value() {
		return this.get_selectedIndex();
	}
	set_value(value) {
		this.set_selectedIndex(value);
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_ListView();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_ListViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$ListView_ListViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalVirtualLayout;
	}
}
$hxClasses["haxe.ui.containers.ListView"] = haxe_ui_containers_ListView;
haxe_ui_containers_ListView.__name__ = "haxe.ui.containers.ListView";
haxe_ui_containers_ListView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_ListView.__super__ = haxe_ui_containers_ScrollView;
Object.assign(haxe_ui_containers_ListView.prototype, {
	__class__: haxe_ui_containers_ListView
	,_itemRendererFunction: null
	,_itemRendererClass: null
	,_itemRenderer: null
	,__properties__: Object.assign({}, haxe_ui_containers_ScrollView.prototype.__properties__, {get_longPressSelectionTime: "get_longPressSelectionTime",get_selectionMode: "get_selectionMode",set_selectedIndices: "set_selectedIndices",get_selectedIndices: "get_selectedIndices",get_selectedItem: "get_selectedItem",set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex",get_variableItemSize: "get_variableItemSize",set_itemCount: "set_itemCount",get_itemCount: "get_itemCount",get_itemHeight: "get_itemHeight",set_dataSource: "set_dataSource",get_dataSource: "get_dataSource",set_itemRenderer: "set_itemRenderer",get_itemRenderer: "get_itemRenderer",get_itemRendererClass: "get_itemRendererClass",get_itemRendererFunction: "get_itemRendererFunction"})
});
class haxe_ui_containers_ScrollViewEvents extends haxe_ui_events_Events {
	constructor(scrollview) {
		haxe_ui_events_Events._hx_skip_constructor = true;
		super();
		haxe_ui_events_Events._hx_skip_constructor = false;
		this._hx_constructor(scrollview);
	}
	_hx_constructor(scrollview) {
		this._fadeTimer = null;
		this._containerEventsPaused = false;
		this._lastMousePos = null;
		this._inertia = null;
		super._hx_constructor(scrollview);
		this._scrollview = scrollview;
	}
	register() {
		let contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null && contents.hasEvent("resize",$bind(this,this.onContentsResized)) == false) {
			contents.registerEvent("resize",$bind(this,this.onContentsResized));
		}
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onHScroll)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onHScroll));
		}
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onVScroll)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onVScroll));
		}
		if(this._scrollview.get_scrollMode() == "drag" || this._scrollview.get_scrollMode() == "inertial") {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		} else if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._scrollview.hasEvent("shown") == false) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	unregister() {
		let contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.unregisterEvent("resize",$bind(this,this.onContentsResized));
		}
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onHScroll));
		}
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onVScroll));
		}
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("shown",$bind(this,this.onShown));
	}
	onShown(event) {
		let _this = this._scrollview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			if(!(hscroll._layout == null || hscroll._layoutLocked == true)) {
				hscroll.invalidateComponent("layout");
			}
		}
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			if(!(vscroll._layout == null || vscroll._layoutLocked == true)) {
				vscroll.invalidateComponent("layout");
			}
		}
	}
	onContentsResized(event) {
		this._scrollview.invalidateComponent("scroll");
	}
	onHScroll(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	onVScroll(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	onMouseDown(event) {
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll == null && vscroll == null) {
			return;
		}
		this._scrollview.addClass(":down");
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
		let componentOffset = this._scrollview.getComponentOffset();
		if(hscroll != null && hscroll.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		if(vscroll != null && vscroll.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		event.cancel();
		this._offset = new haxe_ui_geom_Point();
		if(hscroll != null) {
			let tmp = hscroll.get_pos();
			this._offset.x = tmp + event.screenX;
		}
		if(vscroll != null) {
			let tmp = vscroll.get_pos();
			this._offset.y = tmp + event.screenY;
		}
		if(this._scrollview.get_scrollMode() == "inertial") {
			if(this._inertia == null) {
				this._inertia = { screen : new haxe_ui_geom_Point(), target : new haxe_ui_geom_Point(), amplitude : new haxe_ui_geom_Point(), direction : new haxe_ui_geom_Point(), timestamp : 0};
			}
			this._inertia.target.x = this._scrollview.get_hscrollPos();
			this._inertia.target.y = this._scrollview.get_vscrollPos();
			this._inertia.amplitude.x = 0;
			this._inertia.amplitude.y = 0;
			this._inertia.screen.x = event.screenX;
			this._inertia.screen.y = event.screenY;
			this._inertia.timestamp = HxOverrides.now() / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onMouseUp));
	}
	onMouseMove(event) {
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(this._offset.x - event.screenX);
			if(Math.abs(event.screenX - this._lastMousePos.x) > haxe_ui_Toolkit.get_scaleX()) {
				this.pauseContainerEvents();
			}
		}
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(this._offset.y - event.screenY);
			if(Math.abs(event.screenY - this._lastMousePos.y) > haxe_ui_Toolkit.get_scaleY()) {
				this.pauseContainerEvents();
			}
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	pauseContainerEvents() {
		if(this._containerEventsPaused == true) {
			return;
		}
		this._containerEventsPaused = true;
		this.onContainerEventsStatusChanged();
	}
	resumeContainerEvents() {
		if(this._containerEventsPaused == false) {
			return;
		}
		this._containerEventsPaused = false;
		this.onContainerEventsStatusChanged();
	}
	onContainerEventsStatusChanged() {
		this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").disableInteractivity(this._containerEventsPaused);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null || vscroll != null) {
			if((js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).autoHideScrolls == true) {
				if(this._containerEventsPaused == true) {
					if(hscroll != null) {
						hscroll.fadeIn();
					}
					if(vscroll != null) {
						vscroll.fadeIn();
					}
				} else {
					if(hscroll != null) {
						hscroll.fadeOut();
					}
					if(vscroll != null) {
						vscroll.fadeOut();
					}
				}
			}
		}
	}
	onMouseUp(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._scrollview.get_scrollMode() == "inertial") {
			let elapsed = (HxOverrides.now() / 1000 - this._inertia.timestamp) * 1000;
			let deltaX = Math.abs(this._inertia.screen.x - event.screenX);
			let deltaY = Math.abs(this._inertia.screen.y - event.screenY);
			this._inertia.direction.x = this._inertia.screen.x - event.screenX < 0 ? 0 : 1;
			let velocityX = deltaX / elapsed;
			velocityX = 0.8 * (1000 * deltaX / (1 + elapsed)) + 0.2 * velocityX;
			this._inertia.direction.y = this._inertia.screen.y - event.screenY < 0 ? 0 : 1;
			let velocityY = deltaY / elapsed;
			velocityY = 0.8 * (1000 * deltaY / (1 + elapsed)) + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			this._inertia.timestamp = HxOverrides.now() / 1000;
			if(this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false) != null) {
				this._inertia.amplitude.x = 0.8 * velocityX;
			}
			if(this._inertia.direction.x == 0) {
				let tmp = this._scrollview.get_hscrollPos() - this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			} else {
				let tmp = this._scrollview.get_hscrollPos() + this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			}
			if(this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false) != null) {
				this._inertia.amplitude.y = 0.8 * velocityY;
			}
			if(this._inertia.direction.y == 0) {
				let tmp = this._scrollview.get_vscrollPos() - this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			} else {
				let tmp = this._scrollview.get_vscrollPos() + this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x && this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x) {
				this._inertia.amplitude.x = 0;
			}
			if(this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this._inertia.amplitude.y = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this._scrollview.removeClass(":down");
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		}
	}
	inertialScroll() {
		let elapsed = (HxOverrides.now() / 1000 - this._inertia.timestamp) * 1000;
		let finishedX = false;
		if(this._inertia.amplitude.x != 0) {
			let deltaX = -this._inertia.amplitude.x * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				let oldPos = this._scrollview.get_hscrollPos();
				let newPos = 0;
				if(this._inertia.direction.x == 0) {
					newPos = this._inertia.target.x - deltaX;
				} else {
					newPos = this._inertia.target.x + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_hscrollMax()) {
					newPos = this._scrollview.get_hscrollMax();
				}
				this._scrollview.set_hscrollPos(newPos);
				finishedX = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		let finishedY = false;
		if(this._inertia.amplitude.y != 0) {
			let deltaY = -this._inertia.amplitude.y * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				let oldPos = this._scrollview.get_vscrollPos();
				let newPos = 0;
				if(this._inertia.direction.y == 0) {
					newPos = this._inertia.target.y - deltaY;
				} else {
					newPos = this._inertia.target.y + deltaY;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_vscrollMax()) {
					newPos = this._scrollview.get_vscrollMax();
				}
				this._scrollview.set_vscrollPos(newPos);
				finishedY = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	onMouseWheel(event) {
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		let _gthis = this;
		if(vscroll != null) {
			let builder = js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
			if(builder.autoHideScrolls == true && this._fadeTimer == null) {
				vscroll.fadeIn();
			}
			event.cancel();
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - 50);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + 50);
			}
			if(builder.autoHideScrolls == true) {
				if(this._fadeTimer != null) {
					this._fadeTimer.stop();
					this._fadeTimer = null;
				}
				this._fadeTimer = new haxe_ui_util_Timer(300,function() {
					vscroll.fadeOut();
					_gthis._fadeTimer.stop();
					_gthis._fadeTimer = null;
				});
			}
		}
	}
}
$hxClasses["haxe.ui.containers.ScrollViewEvents"] = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ScrollViewEvents.__name__ = "haxe.ui.containers.ScrollViewEvents";
haxe_ui_containers_ScrollViewEvents.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers_ScrollViewEvents.prototype, {
	__class__: haxe_ui_containers_ScrollViewEvents
	,_scrollview: null
	,_offset: null
	,_inertia: null
	,_lastMousePos: null
	,_containerEventsPaused: null
	,_fadeTimer: null
});
class haxe_ui_containers_ListViewEvents extends haxe_ui_containers_ScrollViewEvents {
	constructor(listview) {
		super(listview);
		this._listview = listview;
	}
	register() {
		super.register();
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	unregister() {
		super.unregister();
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	onScrollChange(e) {
		if(this._listview.get_virtual() == true) {
			let _this = this._listview;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
	}
	onRendererCreated(e) {
		let instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			(js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder)).addItemRendererClass(instance,":selected");
		}
	}
	onRendererDestroyed(e) {
		let instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			(js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder)).addItemRendererClass(instance,":selected",false);
		}
	}
	onRendererMouseDown(e) {
		if(this._listview.get_selectionMode() == "multiple-long-press") {
			if(this._listview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		} else if(this._listview.hasClass(":mobile") == false) {
			e.target.addClass(":hover");
		}
	}
	startLongPressSelection(e) {
		let timerClick = null;
		let _gthis = this;
		let currentMouseX = e.screenX;
		let currentMouseY = e.screenY;
		let renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		let __onMouseMove = null;
		let __onMouseUp = null;
		let __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				let timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					let x1 = e.screenX;
					let y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._listview.get_longPressSelectionTime());
	}
	onContainerEventsStatusChanged() {
		super.onContainerEventsStatusChanged();
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("listview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
	}
	onRendererClick(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		let components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		let _g = 0;
		while(_g < components.length) {
			let component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		let renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._listview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				let selectedIndices = this._listview.get_selectedIndices();
				let fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				let toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					let _g = 0;
					while(_g < selectedIndices.length) {
						let i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					let tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._listview.get_selectionMode() == "multiple-click-modifier-key") {
				this._listview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			if(this._listview.get_selectedIndices().length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._listview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._listview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	toggleSelection(renderer) {
		let itemIndex = renderer.itemIndex;
		let selectedIndices = this._listview.get_selectedIndices().slice();
		let index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._listview.set_selectedIndices(selectedIndices);
	}
	selectRange(fromIndex,toIndex) {
		let tmp = this._listview;
		let _g = [];
		let _g1 = fromIndex;
		let _g2 = toIndex + 1;
		while(_g1 < _g2) _g.push(_g1++);
		tmp.set_selectedIndices(_g);
	}
}
$hxClasses["haxe.ui.containers.ListViewEvents"] = haxe_ui_containers_ListViewEvents;
haxe_ui_containers_ListViewEvents.__name__ = "haxe.ui.containers.ListViewEvents";
haxe_ui_containers_ListViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
Object.assign(haxe_ui_containers_ListViewEvents.prototype, {
	__class__: haxe_ui_containers_ListViewEvents
	,_listview: null
});
class haxe_ui_containers_ScrollViewBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(scrollview) {
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = true;
		super();
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
		this._hx_constructor(scrollview);
	}
	_hx_constructor(scrollview) {
		this.autoHideScrolls = false;
		super._hx_constructor(scrollview);
		this._scrollview = scrollview;
	}
	create() {
		let contentLayoutName = this._scrollview.get_contentLayoutName();
		if(contentLayoutName == null) {
			contentLayoutName = "vertical";
		}
		this.createContentContainer(contentLayoutName);
	}
	destroy() {
	}
	get_numComponents() {
		return this._contents.get_numComponents();
	}
	addComponent(child) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	addComponentAt(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	removeComponentAt(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._contents.removeComponentAt(index,dispose,invalidate);
	}
	getComponentIndex(child) {
		return this._contents.getComponentIndex(child);
	}
	setComponentIndex(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.hasClass("scrollview-contents") == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	getComponentAt(index) {
		return this._contents.getComponentAt(index);
	}
	createContentContainer(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
			this._contentsLayoutName = layoutName;
		}
	}
	horizontalConstraintModifier() {
		return 0;
	}
	verticalConstraintModifier() {
		return 0;
	}
	checkScrolls() {
		if(this._component.get_isNativeScroller() == true) {
			return;
		}
		let usableSize = this._component.get_layout().get_usableSize();
		if(this.get_virtualHorizontal() == false && usableSize.width > 0) {
			let horizontalConstraint = this._contents;
			let hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			let vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
			if(vcw > usableSize.width) {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(vcw - usableSize.width);
				hscroll.set_pageSize(usableSize.width / vcw * hscroll.get_max());
				hscroll.syncComponentValidation();
			} else if(hscroll != null) {
				this.destroyHScroll();
			}
		}
		if(this.get_virtualVertical() == false && usableSize.height > 0) {
			let verticalConstraint = this._contents;
			let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			let vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
			if(vch > usableSize.height) {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(vch - usableSize.height);
				vscroll.set_pageSize(usableSize.height / vch * vscroll.get_max());
				vscroll.syncComponentValidation();
			} else if(vscroll != null) {
				this.destroyVScroll();
			}
		}
	}
	createHScroll() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		let usableSize = this._component.get_layout().get_usableSize();
		let horizontalConstraint = this._contents;
		let hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
		if(usableSize.width <= 0) {
			return hscroll;
		}
		if(vcw > usableSize.width && hscroll == null) {
			let builder = js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
			hscroll = new haxe_ui_components_HorizontalScroll();
			hscroll.set_includeInLayout(!builder.autoHideScrolls);
			hscroll.set_hidden(builder.autoHideScrolls);
			hscroll.set_percentWidth(100);
			hscroll.set_allowFocus(false);
			hscroll.set_id("scrollview-hscroll");
			this._component.addComponent(hscroll);
			this._component.registerInternalEvents(null,true);
		}
		return hscroll;
	}
	createVScroll() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		let usableSize = this._component.get_layout().get_usableSize();
		let verticalConstraint = this._contents;
		let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		let vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
		if(usableSize.height <= 0) {
			return vscroll;
		}
		if(vch > usableSize.height && vscroll == null) {
			let builder = js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
			vscroll = new haxe_ui_components_VerticalScroll();
			vscroll.set_includeInLayout(!builder.autoHideScrolls);
			vscroll.set_hidden(builder.autoHideScrolls);
			vscroll.set_percentHeight(100);
			vscroll.set_allowFocus(false);
			vscroll.set_id("scrollview-vscroll");
			this._component.addComponent(vscroll);
			this._component.registerInternalEvents(null,true);
		}
		return vscroll;
	}
	destroyHScroll() {
		let hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
	}
	destroyVScroll() {
		let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	updateScrollRect() {
		if(this._contents == null) {
			return;
		}
		let usableSize = this._component.get_layout().get_usableSize();
		let clipCX = usableSize.width - this.horizontalConstraintModifier();
		if(clipCX > this._contents.get_width()) {
			clipCX = this._contents.get_width() + this.horizontalConstraintModifier();
		}
		let clipCY = usableSize.height - this.verticalConstraintModifier();
		if(clipCY > this._contents.get_height()) {
			clipCY = this._contents.get_height() + this.verticalConstraintModifier();
		}
		let xpos = 0;
		let ypos = 0;
		if(this.get_virtualHorizontal() == false) {
			let hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				xpos = hscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCX = this._contents.get_componentClipRect().width;
		}
		if(this.get_virtualVertical() == false) {
			let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				ypos = vscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCY = this._contents.get_componentClipRect().height;
		}
		this._contents.set_componentClipRect(new haxe_ui_geom_Rectangle(xpos,ypos,Math.round(clipCX),Math.round(clipCY)));
	}
	get_virtualHorizontal() {
		return this._scrollview.get_virtual();
	}
	get_virtualVertical() {
		return this._scrollview.get_virtual();
	}
	onVirtualChanged() {
	}
	applyStyle(style) {
		super.applyStyle(style);
		if(style.mode != null && style.mode == "mobile") {
			this.autoHideScrolls = true;
		} else {
			this.autoHideScrolls = false;
		}
	}
}
$hxClasses["haxe.ui.containers.ScrollViewBuilder"] = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_ScrollViewBuilder.__name__ = "haxe.ui.containers.ScrollViewBuilder";
haxe_ui_containers_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_ScrollViewBuilder.prototype, {
	__class__: haxe_ui_containers_ScrollViewBuilder
	,_scrollview: null
	,_contents: null
	,_contentsLayoutName: null
	,virtualHorizontal: null
	,virtualVertical: null
	,autoHideScrolls: null
	,__properties__: Object.assign({}, haxe_ui_core_CompositeBuilder.prototype.__properties__, {get_virtualVertical: "get_virtualVertical",get_virtualHorizontal: "get_virtualHorizontal"})
});
class haxe_ui_containers__$ListView_ListViewBuilder extends haxe_ui_containers_ScrollViewBuilder {
	constructor(listview) {
		super(listview);
		this._listview = listview;
	}
	create() {
		this.createContentContainer(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	createContentContainer(layoutName) {
		if(this._contents == null) {
			super.createContentContainer(layoutName);
			this._contents.addClass("listview-contents");
		}
	}
	addComponent(child) {
		let r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer) && (this._listview.get_itemRenderer() == null && this._listview.get_itemRendererFunction() == null && this._listview.get_itemRendererClass() == null)) {
			this._listview.set_itemRenderer(js_Boot.__cast(child , haxe_ui_core_ItemRenderer));
			this._listview.get_itemRenderer().ready();
			this._listview.get_itemRenderer().handleVisibility(false);
			r = child;
		} else {
			r = super.addComponent(child);
		}
		return r;
	}
	onVirtualChanged() {
		this._contents.set_layoutName(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	addItemRendererClass(child,className,add) {
		if(add == null) {
			add = true;
		}
		let _gthis = this;
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
					haxe_ui_Toolkit.callLater(function() {
						_gthis.ensureVisible(js_Boot.__cast(c , haxe_ui_core_ItemRenderer));
					});
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style");
			}
			return true;
		});
	}
	ensureVisible(itemToEnsure) {
		if(itemToEnsure != null && this._listview.get_virtual() == false) {
			let vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				let vpos = vscroll.get_pos();
				let contents = this._listview.findComponent("listview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
	}
}
$hxClasses["haxe.ui.containers._ListView.ListViewBuilder"] = haxe_ui_containers__$ListView_ListViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.__name__ = "haxe.ui.containers._ListView.ListViewBuilder";
haxe_ui_containers__$ListView_ListViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
Object.assign(haxe_ui_containers__$ListView_ListViewBuilder.prototype, {
	__class__: haxe_ui_containers__$ListView_ListViewBuilder
	,_listview: null
});
class haxe_ui_containers__$ListView_DataSourceBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		haxe_ui_behaviours_Behaviour._hx_skip_constructor = true;
		super();
		haxe_ui_behaviours_Behaviour._hx_skip_constructor = false;
		this._hx_constructor(component);
	}
	_hx_constructor(component) {
		this._firstPass = true;
		super._hx_constructor(component);
	}
	set(value) {
		let _gthis = this;
		super.set(value);
		let dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.onChange = function() {
				let _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
				if(_gthis._firstPass == true) {
					_gthis._component.syncComponentValidation();
					_gthis._firstPass = false;
					let _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout");
					}
				}
				haxe_ui_binding_BindingManager.get_instance().componentPropChanged(_gthis._component,"dataSource");
			};
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		} else {
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
	}
	get() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
}
$hxClasses["haxe.ui.containers._ListView.DataSourceBehaviour"] = haxe_ui_containers__$ListView_DataSourceBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.__name__ = "haxe.ui.containers._ListView.DataSourceBehaviour";
haxe_ui_containers__$ListView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ListView_DataSourceBehaviour.prototype, {
	__class__: haxe_ui_containers__$ListView_DataSourceBehaviour
	,_firstPass: null
});
class haxe_ui_containers__$ListView_SelectedIndexBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let selectedIndices = (js_Boot.__cast(this._component , haxe_ui_containers_ListView)).get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	set(value) {
		(js_Boot.__cast(this._component , haxe_ui_containers_ListView)).set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
}
$hxClasses["haxe.ui.containers._ListView.SelectedIndexBehaviour"] = haxe_ui_containers__$ListView_SelectedIndexBehaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndexBehaviour";
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ListView_SelectedIndexBehaviour.prototype, {
	__class__: haxe_ui_containers__$ListView_SelectedIndexBehaviour
});
class haxe_ui_containers__$ListView_SelectedItemBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	getDynamic() {
		let listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		let selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return listView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	set(value) {
		let listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		let index = listView.get_dataSource().indexOf(value);
		if(index != -1 && listView.get_selectedIndices().indexOf(index) == -1) {
			listView.set_selectedIndices([index]);
		}
	}
}
$hxClasses["haxe.ui.containers._ListView.SelectedItemBehaviour"] = haxe_ui_containers__$ListView_SelectedItemBehaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemBehaviour";
haxe_ui_containers__$ListView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ListView_SelectedItemBehaviour.prototype, {
	__class__: haxe_ui_containers__$ListView_SelectedItemBehaviour
});
class haxe_ui_containers__$ListView_SelectedIndicesBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	validateData() {
		let listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		let selectedIndices = listView.get_selectedIndices();
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
		let _g = 0;
		let _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(listView.get_selectedIndex() != -1 && listView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
}
$hxClasses["haxe.ui.containers._ListView.SelectedIndicesBehaviour"] = haxe_ui_containers__$ListView_SelectedIndicesBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndicesBehaviour";
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ListView_SelectedIndicesBehaviour.prototype, {
	__class__: haxe_ui_containers__$ListView_SelectedIndicesBehaviour
});
class haxe_ui_containers__$ListView_SelectedItemsBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		let selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			let selectedItems = [];
			let _g = 0;
			while(_g < selectedIndices.length) {
				let i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= listView.get_dataSource().get_size()) {
					continue;
				}
				selectedItems.push(listView.get_dataSource().get(i));
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	set(value) {
		let listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		let selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			let selectedIndices = [];
			let index;
			let _g = 0;
			while(_g < selectedItems.length) {
				let item = selectedItems[_g++];
				index = listView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			listView.set_selectedIndices(selectedIndices);
		} else {
			listView.set_selectedIndices([]);
		}
	}
}
$hxClasses["haxe.ui.containers._ListView.SelectedItemsBehaviour"] = haxe_ui_containers__$ListView_SelectedItemsBehaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemsBehaviour";
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ListView_SelectedItemsBehaviour.prototype, {
	__class__: haxe_ui_containers__$ListView_SelectedItemsBehaviour
});
class haxe_ui_containers__$ListView_SelectionModeBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		let selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		switch(haxe_ui_util_Variant.toString(this._value)) {
		case "disabled":
			listView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				listView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
}
$hxClasses["haxe.ui.containers._ListView.SelectionModeBehaviour"] = haxe_ui_containers__$ListView_SelectionModeBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._ListView.SelectionModeBehaviour";
haxe_ui_containers__$ListView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ListView_SelectionModeBehaviour.prototype, {
	__class__: haxe_ui_containers__$ListView_SelectionModeBehaviour
});
class haxe_ui_containers__$ScrollView_Virtual extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		super.set(value);
		if(this._component._compositeBuilder != null) {
			(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).onVirtualChanged();
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.Virtual"] = haxe_ui_containers__$ScrollView_Virtual;
haxe_ui_containers__$ScrollView_Virtual.__name__ = "haxe.ui.containers._ScrollView.Virtual";
haxe_ui_containers__$ScrollView_Virtual.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_Virtual.prototype, {
	__class__: haxe_ui_containers__$ScrollView_Virtual
});
class haxe_ui_containers__$ScrollView_ContentLayoutName extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		super.set(value);
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
		if(builder != null && haxe_ui_util_Variant.fromString(builder._contentsLayoutName) != value) {
			builder._contentsLayoutName = haxe_ui_util_Variant.toString(value);
			builder._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(haxe_ui_util_Variant.toString(value)));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.ContentLayoutName"] = haxe_ui_containers__$ScrollView_ContentLayoutName;
haxe_ui_containers__$ScrollView_ContentLayoutName.__name__ = "haxe.ui.containers._ScrollView.ContentLayoutName";
haxe_ui_containers__$ScrollView_ContentLayoutName.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_ContentLayoutName.prototype, {
	__class__: haxe_ui_containers__$ScrollView_ContentLayoutName
});
class haxe_ui_containers__$ScrollView_ContentWidth extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_width());
	}
	set(value) {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_width(haxe_ui_util_Variant.toFloat(value));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.ContentWidth"] = haxe_ui_containers__$ScrollView_ContentWidth;
haxe_ui_containers__$ScrollView_ContentWidth.__name__ = "haxe.ui.containers._ScrollView.ContentWidth";
haxe_ui_containers__$ScrollView_ContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ScrollView_ContentWidth.prototype, {
	__class__: haxe_ui_containers__$ScrollView_ContentWidth
});
class haxe_ui_containers__$ScrollView_PercentContentWidth extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentWidth());
	}
	set(value) {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentWidth(haxe_ui_util_Variant.toFloat(value));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.PercentContentWidth"] = haxe_ui_containers__$ScrollView_PercentContentWidth;
haxe_ui_containers__$ScrollView_PercentContentWidth.__name__ = "haxe.ui.containers._ScrollView.PercentContentWidth";
haxe_ui_containers__$ScrollView_PercentContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ScrollView_PercentContentWidth.prototype, {
	__class__: haxe_ui_containers__$ScrollView_PercentContentWidth
});
class haxe_ui_containers__$ScrollView_ContentHeight extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_height());
	}
	set(value) {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_height(haxe_ui_util_Variant.toFloat(value));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.ContentHeight"] = haxe_ui_containers__$ScrollView_ContentHeight;
haxe_ui_containers__$ScrollView_ContentHeight.__name__ = "haxe.ui.containers._ScrollView.ContentHeight";
haxe_ui_containers__$ScrollView_ContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ScrollView_ContentHeight.prototype, {
	__class__: haxe_ui_containers__$ScrollView_ContentHeight
});
class haxe_ui_containers__$ScrollView_PercentContentHeight extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentHeight());
	}
	set(value) {
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentHeight(haxe_ui_util_Variant.toFloat(value));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.PercentContentHeight"] = haxe_ui_containers__$ScrollView_PercentContentHeight;
haxe_ui_containers__$ScrollView_PercentContentHeight.__name__ = "haxe.ui.containers._ScrollView.PercentContentHeight";
haxe_ui_containers__$ScrollView_PercentContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$ScrollView_PercentContentHeight.prototype, {
	__class__: haxe_ui_containers__$ScrollView_PercentContentHeight
});
class haxe_ui_containers__$ScrollView_HScrollPos extends haxe_ui_behaviours_DataBehaviour {
	constructor(scrollview) {
		super(scrollview);
		this._scrollview = scrollview;
	}
	get() {
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_pos());
	}
	validateData() {
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.HScrollPos"] = haxe_ui_containers__$ScrollView_HScrollPos;
haxe_ui_containers__$ScrollView_HScrollPos.__name__ = "haxe.ui.containers._ScrollView.HScrollPos";
haxe_ui_containers__$ScrollView_HScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_HScrollPos.prototype, {
	__class__: haxe_ui_containers__$ScrollView_HScrollPos
	,_scrollview: null
});
class haxe_ui_containers__$ScrollView_VScrollPos extends haxe_ui_behaviours_DataBehaviour {
	constructor(scrollview) {
		super(scrollview);
		this._scrollview = scrollview;
	}
	get() {
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_pos());
	}
	validateData() {
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.VScrollPos"] = haxe_ui_containers__$ScrollView_VScrollPos;
haxe_ui_containers__$ScrollView_VScrollPos.__name__ = "haxe.ui.containers._ScrollView.VScrollPos";
haxe_ui_containers__$ScrollView_VScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_VScrollPos.prototype, {
	__class__: haxe_ui_containers__$ScrollView_VScrollPos
	,_scrollview: null
});
class haxe_ui_containers__$ScrollView_HScrollMax extends haxe_ui_behaviours_DataBehaviour {
	constructor(scrollview) {
		super(scrollview);
		this._scrollview = scrollview;
	}
	get() {
		let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_max());
	}
	validateData() {
		if(this._scrollview.get_virtual() == true) {
			let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(hscroll == null) {
					hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
				}
			} else if(hscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyHScroll();
			}
			if(hscroll != null) {
				hscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.HScrollMax"] = haxe_ui_containers__$ScrollView_HScrollMax;
haxe_ui_containers__$ScrollView_HScrollMax.__name__ = "haxe.ui.containers._ScrollView.HScrollMax";
haxe_ui_containers__$ScrollView_HScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_HScrollMax.prototype, {
	__class__: haxe_ui_containers__$ScrollView_HScrollMax
	,_scrollview: null
});
class haxe_ui_containers__$ScrollView_VScrollMax extends haxe_ui_behaviours_DataBehaviour {
	constructor(scrollview) {
		super(scrollview);
		this._scrollview = scrollview;
	}
	get() {
		let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_max());
	}
	validateData() {
		if(this._scrollview.get_virtual() == true) {
			let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(vscroll == null) {
					vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
				}
			} else if(vscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyVScroll();
			}
			if(vscroll != null) {
				vscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.VScrollMax"] = haxe_ui_containers__$ScrollView_VScrollMax;
haxe_ui_containers__$ScrollView_VScrollMax.__name__ = "haxe.ui.containers._ScrollView.VScrollMax";
haxe_ui_containers__$ScrollView_VScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_VScrollMax.prototype, {
	__class__: haxe_ui_containers__$ScrollView_VScrollMax
	,_scrollview: null
});
class haxe_ui_containers__$ScrollView_HScrollPageSize extends haxe_ui_behaviours_DataBehaviour {
	constructor(scrollview) {
		super(scrollview);
		this._scrollview = scrollview;
	}
	validateData() {
		if(this._scrollview.get_virtual() == true) {
			let hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.HScrollPageSize"] = haxe_ui_containers__$ScrollView_HScrollPageSize;
haxe_ui_containers__$ScrollView_HScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.HScrollPageSize";
haxe_ui_containers__$ScrollView_HScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_HScrollPageSize.prototype, {
	__class__: haxe_ui_containers__$ScrollView_HScrollPageSize
	,_scrollview: null
});
class haxe_ui_containers__$ScrollView_VScrollPageSize extends haxe_ui_behaviours_DataBehaviour {
	constructor(scrollview) {
		super(scrollview);
		this._scrollview = scrollview;
	}
	validateData() {
		if(this._scrollview.get_virtual() == true) {
			let vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
}
$hxClasses["haxe.ui.containers._ScrollView.VScrollPageSize"] = haxe_ui_containers__$ScrollView_VScrollPageSize;
haxe_ui_containers__$ScrollView_VScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.VScrollPageSize";
haxe_ui_containers__$ScrollView_VScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_VScrollPageSize.prototype, {
	__class__: haxe_ui_containers__$ScrollView_VScrollPageSize
	,_scrollview: null
});
class haxe_ui_containers__$ScrollView_ScrollModeBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		this._component.registerInternalEvents(null,true);
	}
}
$hxClasses["haxe.ui.containers._ScrollView.ScrollModeBehaviour"] = haxe_ui_containers__$ScrollView_ScrollModeBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollModeBehaviour";
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_ScrollModeBehaviour.prototype, {
	__class__: haxe_ui_containers__$ScrollView_ScrollModeBehaviour
});
class haxe_ui_containers__$ScrollView_GetContents extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromComponent(this._component.findComponent("scrollview-contents",null,false,"css"));
	}
}
$hxClasses["haxe.ui.containers._ScrollView.GetContents"] = haxe_ui_containers__$ScrollView_GetContents;
haxe_ui_containers__$ScrollView_GetContents.__name__ = "haxe.ui.containers._ScrollView.GetContents";
haxe_ui_containers__$ScrollView_GetContents.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$ScrollView_GetContents.prototype, {
	__class__: haxe_ui_containers__$ScrollView_GetContents
});
class haxe_ui_containers__$Splitter_SizerGripper extends haxe_ui_core_InteractiveComponent {
	constructor() {
		super();
		this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		this.addComponent(new haxe_ui_components_Image());
	}
	onMouseOver(event) {
		this.addClass(":hover");
	}
	onMouseOut(event) {
		this.removeClass(":hover");
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers__$Splitter_SizerGripper();
	}
}
$hxClasses["haxe.ui.containers._Splitter.SizerGripper"] = haxe_ui_containers__$Splitter_SizerGripper;
haxe_ui_containers__$Splitter_SizerGripper.__name__ = "haxe.ui.containers._Splitter.SizerGripper";
haxe_ui_containers__$Splitter_SizerGripper.__super__ = haxe_ui_core_InteractiveComponent;
Object.assign(haxe_ui_containers__$Splitter_SizerGripper.prototype, {
	__class__: haxe_ui_containers__$Splitter_SizerGripper
});
class haxe_ui_containers_Stack extends haxe_ui_containers_Box {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_Stack();
	}
}
$hxClasses["haxe.ui.containers.Stack"] = haxe_ui_containers_Stack;
haxe_ui_containers_Stack.__name__ = "haxe.ui.containers.Stack";
haxe_ui_containers_Stack.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_containers_Stack.prototype, {
	__class__: haxe_ui_containers_Stack
});
class haxe_ui_containers_TabView extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_containers__$TabView_Builder;
		this._internalEventsClass = haxe_ui_containers__$TabView_Events;
		this._defaultLayoutClass = haxe_ui_containers__$TabView_Layout;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("pageIndex",haxe_ui_containers__$TabView_PageIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedPage",haxe_ui_containers__$TabView_SelectedPage,null);
		this.behaviours.register("tabPosition",haxe_ui_containers__$TabView_TabPosition);
		this.behaviours.register("pageCount",haxe_ui_containers__$TabView_PageCount);
		this.behaviours.register("closable",haxe_ui_containers__$TabView_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("removePage",haxe_ui_containers__$TabView_RemovePage);
		this.behaviours.register("getPage",haxe_ui_containers__$TabView_GetPage);
		this.behaviours.register("removeAllPages",haxe_ui_containers__$TabView_RemoveAllPages);
	}
	get_pageIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageIndex"));
	}
	set_pageIndex(value) {
		this.behaviours.set("pageIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pageIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"pageIndex");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_TabView();
	}
}
$hxClasses["haxe.ui.containers.TabView"] = haxe_ui_containers_TabView;
haxe_ui_containers_TabView.__name__ = "haxe.ui.containers.TabView";
haxe_ui_containers_TabView.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_containers_TabView.prototype, {
	__class__: haxe_ui_containers_TabView
	,__properties__: Object.assign({}, haxe_ui_core_Component.prototype.__properties__, {set_pageIndex: "set_pageIndex",get_pageIndex: "get_pageIndex"})
});
class haxe_ui_containers__$TabView_Layout extends haxe_ui_layouts_DefaultLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		let tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		let content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		if(this.get_component().hasClass(":bottom")) {
			content.set_left(this.get_paddingLeft());
			content.set_top(this.get_paddingTop());
			tabs.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				tabs.set_top(this.get_component().get_height() - tabs.get_height() - this.get_paddingBottom() + this.marginTop(tabs));
			}
		} else {
			tabs.set_left(this.get_paddingLeft());
			tabs.set_top(this.get_paddingTop() + this.marginTop(tabs));
			content.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				content.set_top(tabs.get_top() + tabs.get_height() - this.marginTop(tabs) + this.marginTop(content));
			}
		}
	}
	resizeChildren() {
		let tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		let content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		let usableSize = this.get_usableSize();
		tabs.set_width(usableSize.width);
		if(this.get_component().get_autoHeight() == false) {
			content.set_height(usableSize.height + 1);
		}
		if(this.get_component().get_autoWidth() == false) {
			content.set_width(this.get_component().get_width());
		}
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs != null && tabs.get_componentHeight() != null) {
			size.height -= tabs.get_componentHeight();
		}
		return size;
	}
}
$hxClasses["haxe.ui.containers._TabView.Layout"] = haxe_ui_containers__$TabView_Layout;
haxe_ui_containers__$TabView_Layout.__name__ = "haxe.ui.containers._TabView.Layout";
haxe_ui_containers__$TabView_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_containers__$TabView_Layout.prototype, {
	__class__: haxe_ui_containers__$TabView_Layout
});
class haxe_ui_containers__$TabView_Closable extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._component.get_native() == true) {
			return;
		}
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder))._tabs.set_closable(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.containers._TabView.Closable"] = haxe_ui_containers__$TabView_Closable;
haxe_ui_containers__$TabView_Closable.__name__ = "haxe.ui.containers._TabView.Closable";
haxe_ui_containers__$TabView_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$TabView_Closable.prototype, {
	__class__: haxe_ui_containers__$TabView_Closable
});
class haxe_ui_containers__$TabView_PageIndex extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._component.get_native() == true) {
			return;
		}
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(builder._views.length - 1))) {
			this._value = haxe_ui_util_Variant.fromInt(builder._views.length - 1);
			return;
		}
		builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
		let view = builder._views[haxe_ui_util_Variant.toInt(this._value)];
		if(view != null) {
			if(builder._currentView != null) {
				builder._currentView.hide();
			}
			if(builder._content.getComponentIndex(view) == -1) {
				builder._content.addComponent(view);
			} else {
				view.show();
			}
			builder._currentView = view;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
}
$hxClasses["haxe.ui.containers._TabView.PageIndex"] = haxe_ui_containers__$TabView_PageIndex;
haxe_ui_containers__$TabView_PageIndex.__name__ = "haxe.ui.containers._TabView.PageIndex";
haxe_ui_containers__$TabView_PageIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$TabView_PageIndex.prototype, {
	__class__: haxe_ui_containers__$TabView_PageIndex
});
class haxe_ui_containers__$TabView_SelectedPage extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromComponent((js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder))._views[(js_Boot.__cast(this._component , haxe_ui_containers_TabView)).get_pageIndex()]);
	}
	set(value) {
		let tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		let view = haxe_ui_util_Variant.toComponent(value);
		let viewIndex = builder._views.indexOf(view);
		if(viewIndex != -1) {
			tabview.set_pageIndex(viewIndex);
		}
	}
}
$hxClasses["haxe.ui.containers._TabView.SelectedPage"] = haxe_ui_containers__$TabView_SelectedPage;
haxe_ui_containers__$TabView_SelectedPage.__name__ = "haxe.ui.containers._TabView.SelectedPage";
haxe_ui_containers__$TabView_SelectedPage.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$TabView_SelectedPage.prototype, {
	__class__: haxe_ui_containers__$TabView_SelectedPage
});
class haxe_ui_containers__$TabView_TabPosition extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
		} else {
			this._component.removeClass(":bottom");
		}
		this._component.findComponent(null,haxe_ui_components_TabBar,false).set_tabPosition(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers._TabView.TabPosition"] = haxe_ui_containers__$TabView_TabPosition;
haxe_ui_containers__$TabView_TabPosition.__name__ = "haxe.ui.containers._TabView.TabPosition";
haxe_ui_containers__$TabView_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$TabView_TabPosition.prototype, {
	__class__: haxe_ui_containers__$TabView_TabPosition
});
class haxe_ui_containers__$TabView_PageCount extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromInt((js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder))._tabs.get_tabCount());
	}
}
$hxClasses["haxe.ui.containers._TabView.PageCount"] = haxe_ui_containers__$TabView_PageCount;
haxe_ui_containers__$TabView_PageCount.__name__ = "haxe.ui.containers._TabView.PageCount";
haxe_ui_containers__$TabView_PageCount.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TabView_PageCount.prototype, {
	__class__: haxe_ui_containers__$TabView_PageCount
});
class haxe_ui_containers__$TabView_RemovePage extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		let index = param;
		if(index < builder._views.length) {
			builder._tabs.removeTab(index);
		}
		return null;
	}
}
$hxClasses["haxe.ui.containers._TabView.RemovePage"] = haxe_ui_containers__$TabView_RemovePage;
haxe_ui_containers__$TabView_RemovePage.__name__ = "haxe.ui.containers._TabView.RemovePage";
haxe_ui_containers__$TabView_RemovePage.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TabView_RemovePage.prototype, {
	__class__: haxe_ui_containers__$TabView_RemovePage
});
class haxe_ui_containers__$TabView_GetPage extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		let index = param;
		let page = null;
		if(index < builder._views.length) {
			page = builder._views[index];
		}
		return haxe_ui_util_Variant.fromComponent(page);
	}
}
$hxClasses["haxe.ui.containers._TabView.GetPage"] = haxe_ui_containers__$TabView_GetPage;
haxe_ui_containers__$TabView_GetPage.__name__ = "haxe.ui.containers._TabView.GetPage";
haxe_ui_containers__$TabView_GetPage.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TabView_GetPage.prototype, {
	__class__: haxe_ui_containers__$TabView_GetPage
});
class haxe_ui_containers__$TabView_RemoveAllPages extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		while(builder._views.length > 0) builder._tabs.removeTab(0);
		(js_Boot.__cast(this._component , haxe_ui_containers_TabView)).set_pageIndex(-1);
		builder._tabs.set_selectedIndex(-1);
		return null;
	}
}
$hxClasses["haxe.ui.containers._TabView.RemoveAllPages"] = haxe_ui_containers__$TabView_RemoveAllPages;
haxe_ui_containers__$TabView_RemoveAllPages.__name__ = "haxe.ui.containers._TabView.RemoveAllPages";
haxe_ui_containers__$TabView_RemoveAllPages.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TabView_RemoveAllPages.prototype, {
	__class__: haxe_ui_containers__$TabView_RemoveAllPages
});
class haxe_ui_containers__$TabView_Events extends haxe_ui_events_Events {
	constructor(tabview) {
		super(tabview);
		this._tabview = tabview;
	}
	register() {
		let tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs.hasEvent("change",$bind(this,this.onTabChanged)) == false) {
			tabs.registerEvent("change",$bind(this,this.onTabChanged));
		}
		if(tabs.hasEvent("beforeClose",$bind(this,this.onBeforeTabClosed)) == false) {
			tabs.registerEvent("beforeClose",$bind(this,this.onBeforeTabClosed));
		}
		if(tabs.hasEvent("close",$bind(this,this.onTabClosed)) == false) {
			tabs.registerEvent("close",$bind(this,this.onTabClosed));
		}
	}
	unregister() {
		let tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		tabs.unregisterEvent("change",$bind(this,this.onTabChanged));
		tabs.unregisterEvent("beforeClose",$bind(this,this.onBeforeTabClosed));
	}
	onBeforeTabClosed(event) {
		this._tabview.dispatch(event);
	}
	onTabClosed(event) {
		let builder = js_Boot.__cast(this._tabview._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		let view = builder._views[event.data];
		HxOverrides.remove(builder._views,view);
		builder._content.removeComponent(view);
		this._tabview.dispatch(new haxe_ui_events_UIEvent("close",event.data));
	}
	onTabChanged(event) {
		let tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		this._tabview.set_pageIndex(-1);
		this._tabview.set_pageIndex(tabs.get_selectedIndex());
	}
}
$hxClasses["haxe.ui.containers._TabView.Events"] = haxe_ui_containers__$TabView_Events;
haxe_ui_containers__$TabView_Events.__name__ = "haxe.ui.containers._TabView.Events";
haxe_ui_containers__$TabView_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers__$TabView_Events.prototype, {
	__class__: haxe_ui_containers__$TabView_Events
	,_tabview: null
});
class haxe_ui_containers__$TabView_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(tabview) {
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = true;
		super();
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
		this._hx_constructor(tabview);
	}
	_hx_constructor(tabview) {
		this._views = [];
		this._currentView = null;
		super._hx_constructor(tabview);
		this._tabview = tabview;
	}
	create() {
		if(this._content == null) {
			this._content = new haxe_ui_containers_Box();
			this._content.set_id("tabview-content");
			this._content.addClass("tabview-content");
			this._content.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("vertical"));
			this._tabview.addComponent(this._content);
		}
		if(this._tabs == null) {
			this._tabs = new haxe_ui_components_TabBar();
			this._tabs.set_id("tabview-tabs");
			this._tabs.addClass("tabview-tabs");
			this._tabview.addComponent(this._tabs);
		}
	}
	get_numComponents() {
		return this._views.length;
	}
	addComponent(child) {
		if(child != this._content && child != this._tabs) {
			let text = child.get_text();
			let icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			child.registerEvent("propertyChange",$bind(this,this.onPagePropertyChanged));
			this._views.push(child);
			let button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			this._tabs.addComponent(button);
			return child;
		}
		return null;
	}
	addComponentAt(child,index) {
		if(child != this._content && child != this._tabs) {
			let text = child.get_text();
			let icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			child.registerEvent("propertyChange",$bind(this,this.onPagePropertyChanged));
			this._views.splice(index,0,child);
			let button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			this._tabs.addComponentAt(button,index);
			return child;
		}
		return null;
	}
	onPagePropertyChanged(event) {
		if(event.data == "text") {
			let button = this._tabs.getTab(this._views.indexOf(event.target));
			if(button != null && button.get_text() != event.target.get_text()) {
				button.set_text(event.target.get_text());
			}
		} else if(event.data == "icon") {
			let button = js_Boot.__cast(this._tabs.getTab(this._views.indexOf(event.target)) , haxe_ui_components_Button);
			if(button != null && haxe_ui_util_Variant.neq(button.get_icon(),haxe_ui_util_Variant.fromString((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon()))) {
				button.set_icon(haxe_ui_util_Variant.fromString((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon()));
			}
		}
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._content && child != this._tabs) {
			let _g = this._views.indexOf(child);
			if(_g != -1) {
				this._views.splice(_g,1);
				this._tabs.removeComponentAt(_g,dispose,invalidate);
				return child;
			}
		}
		return null;
	}
	removeComponentAt(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		this._views.splice(index,1);
		return this._tabs.removeComponentAt(index,dispose,invalidate);
	}
	getComponentIndex(child) {
		return this._views.indexOf(child);
	}
	setComponentIndex(child,index) {
		if(child != this._content && child != this._tabs) {
			let _g = this._views.indexOf(child);
			if(_g != -1) {
				this._views.splice(_g,1);
				this._views.splice(index,0,child);
				this._tabs.setComponentIndex(this._tabs.getComponentAt(_g),index);
				return child;
			}
		}
		return null;
	}
	getComponentAt(index) {
		return this._views[index];
	}
	findComponent(criteria,type,recursive,searchType) {
		let match = super.findComponent(criteria,type,recursive,searchType);
		if(match == null) {
			let _g = 0;
			let _g1 = this._views;
			while(_g < _g1.length) {
				let view = _g1[_g];
				++_g;
				match = view.findComponent(criteria,type,recursive,searchType);
				if(view.matchesSearch(criteria,type,searchType)) {
					return view;
				} else {
					match = view.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
}
$hxClasses["haxe.ui.containers._TabView.Builder"] = haxe_ui_containers__$TabView_Builder;
haxe_ui_containers__$TabView_Builder.__name__ = "haxe.ui.containers._TabView.Builder";
haxe_ui_containers__$TabView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers__$TabView_Builder.prototype, {
	__class__: haxe_ui_containers__$TabView_Builder
	,_tabview: null
	,_tabs: null
	,_content: null
	,_currentView: null
	,_views: null
});
class haxe_ui_containers_TableView extends haxe_ui_containers_ScrollView {
	constructor() {
		super();
	}
	get_itemRendererFunction() {
		return this._itemRendererFunction;
	}
	get_itemRendererClass() {
		return this._itemRendererClass;
	}
	get_itemRenderer() {
		return this._itemRenderer;
	}
	set_itemRenderer(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout");
			}
		}
		return value;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("dataSource",haxe_ui_containers__$TableView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$TableView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$TableView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$TableView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$TableView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$TableView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
		this.behaviours.register("header",haxe_ui_containers__$TableView_GetHeader);
		this.behaviours.register("clearContents",haxe_ui_containers__$TableView_ClearTable);
		this.behaviours.register("addColumn",haxe_ui_containers__$TableView_AddColumn);
		this.behaviours.register("removeColumn",haxe_ui_containers__$TableView_RemoveColumn);
	}
	get_dataSource() {
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	get_itemHeight() {
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	get_itemCount() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	get_variableItemSize() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	get_selectedIndex() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	set_selectedIndex(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndex");
		return value;
	}
	get_selectedIndices() {
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	set_selectedIndices(value) {
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndices"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selectedIndices");
		return value;
	}
	get_selectionMode() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	get_longPressSelectionTime() {
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_TableView();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers__$TableView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$TableView_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$TableView_Layout;
	}
}
$hxClasses["haxe.ui.containers.TableView"] = haxe_ui_containers_TableView;
haxe_ui_containers_TableView.__name__ = "haxe.ui.containers.TableView";
haxe_ui_containers_TableView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_TableView.__super__ = haxe_ui_containers_ScrollView;
Object.assign(haxe_ui_containers_TableView.prototype, {
	__class__: haxe_ui_containers_TableView
	,_itemRendererFunction: null
	,_itemRendererClass: null
	,_itemRenderer: null
	,__properties__: Object.assign({}, haxe_ui_containers_ScrollView.prototype.__properties__, {get_longPressSelectionTime: "get_longPressSelectionTime",get_selectionMode: "get_selectionMode",set_selectedIndices: "set_selectedIndices",get_selectedIndices: "get_selectedIndices",set_selectedIndex: "set_selectedIndex",get_selectedIndex: "get_selectedIndex",get_variableItemSize: "get_variableItemSize",get_itemCount: "get_itemCount",get_itemHeight: "get_itemHeight",get_dataSource: "get_dataSource",set_itemRenderer: "set_itemRenderer",get_itemRenderer: "get_itemRenderer",get_itemRendererClass: "get_itemRendererClass",get_itemRendererFunction: "get_itemRendererFunction"})
});
class haxe_ui_core_ItemRenderer extends haxe_ui_containers_Box {
	constructor() {
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._fieldList = null;
		this.itemIndex = -1;
		this._allowHover = true;
		super._hx_constructor();
		this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
		this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		this.registerEvent("mousedown",$bind(this,this._onItemMouseDown));
		this.registerEvent("mouseup",$bind(this,this._onItemMouseUp));
	}
	_onItemMouseOver(event) {
		this.addClass(":hover");
	}
	_onItemMouseOut(event) {
		this.removeClass(":hover");
	}
	_onItemMouseDown(event) {
		this.addClass(":down");
	}
	_onItemMouseUp(event) {
		this.removeClass(":down");
	}
	get_allowHover() {
		return this._allowHover;
	}
	set_allowHover(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	get_data() {
		return this._data;
	}
	set_data(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.invalidateComponent("data");
		return value;
	}
	validateComponentData() {
		if(this._data != null && (this._fieldList == null || this._fieldList.length == 0)) {
			switch(Type.typeof(this._data)._hx_index) {
			case 4:
				if(typeof(this._data) == "string" == false) {
					let fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						let instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						let _g = 0;
						while(_g < instanceFields.length) {
							let i = instanceFields[_g];
							++_g;
							if(Reflect.isFunction(Reflect.getProperty(this._data,i)) == false && fieldList.indexOf(i) == -1) {
								fieldList.push(i);
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			case 6:
				if(typeof(this._data) == "string" == false) {
					let fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						let instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						let _g = 0;
						while(_g < instanceFields.length) {
							let i = instanceFields[_g];
							++_g;
							if(Reflect.isFunction(Reflect.getProperty(this._data,i)) == false && fieldList.indexOf(i) == -1) {
								fieldList.push(i);
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			default:
				this._fieldList = ["text"];
			}
		}
		this.updateValues(this._data,this._fieldList);
		let components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
		let _g = 0;
		while(_g < components.length) {
			let c = components[_g];
			++_g;
			if(((c) instanceof haxe_ui_components_Button)) {
				if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
					c.registerEvent("click",$bind(this,this.onItemClick));
				}
			} else if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
				c.registerEvent("change",$bind(this,this.onItemChange));
			}
		}
	}
	onItemChange(event) {
		let v = event.target.get_value();
		if(this._data != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		let e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	onItemClick(event) {
		let e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	updateValues(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		let valueObject = null;
		switch(Type.typeof(value)._hx_index) {
		case 4:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		case 6:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		default:
			valueObject = { text : value};
		}
		let _g = 0;
		while(_g < fieldList.length) {
			let f = fieldList[_g];
			++_g;
			let v = Reflect.getProperty(valueObject,f);
			if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			} else {
				let c = this.findComponent(f,null,true);
				if(c != null && v != null) {
					c.set_value(haxe_ui_util_TypeConverter.convert(v));
					if(((c) instanceof haxe_ui_core_InteractiveComponent)) {
						if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
							c.registerEvent("change",$bind(this,this.onItemChange));
						}
						if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
							c.registerEvent("click",$bind(this,this.onItemClick));
						}
					}
					c.show();
				} else if(c != null) {
					c.hide();
				} else if(f != "id") {
					try {
						Reflect.setProperty(this,f,v);
					} catch( _g ) {
					}
				}
			}
		}
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_allowHover(this.get_allowHover());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_ItemRenderer();
	}
}
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_core_ItemRenderer.prototype, {
	__class__: haxe_ui_core_ItemRenderer
	,_allowHover: null
	,_data: null
	,itemIndex: null
	,_fieldList: null
	,__properties__: Object.assign({}, haxe_ui_containers_Box.prototype.__properties__, {set_data: "set_data",get_data: "get_data",set_allowHover: "set_allowHover",get_allowHover: "get_allowHover"})
});
class haxe_ui_layouts_LayoutFactory {
	static createFromName(name) {
		switch(name) {
		case "absolute":
			return new haxe_ui_layouts_AbsoluteLayout();
		case "continuous horizontal":case "continuousHorizontal":
			return new haxe_ui_layouts_HorizontalContinuousLayout();
		case "horizontal":
			return new haxe_ui_layouts_HorizontalLayout();
		case "horizontal grid":case "horizontalgrid":
			return new haxe_ui_layouts_HorizontalGridLayout();
		case "vertical":
			return new haxe_ui_layouts_VerticalLayout();
		case "vertical grid":case "verticalgrid":
			return new haxe_ui_layouts_VerticalGridLayout();
		}
		return new haxe_ui_layouts_DefaultLayout();
	}
}
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
class haxe_ui_layouts_HorizontalGridLayout extends haxe_ui_layouts_Layout {
	constructor() {
		haxe_ui_layouts_Layout._hx_skip_constructor = true;
		super();
		haxe_ui_layouts_Layout._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._rows = 1;
		super._hx_constructor();
	}
	get_rows() {
		return this._rows;
	}
	set_rows(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
		return value;
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let columnWidths = this.calcColumnWidths(size,false);
		let rowHeights = this.calcRowHeights(size,false);
		let _g = 0;
		while(_g < columnWidths.length) size.width -= columnWidths[_g++];
		let _g1 = 0;
		while(_g1 < rowHeights.length) size.height -= rowHeights[_g1++];
		let _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			let _this = this.get_component();
			let columns = Math.ceil((_this._children == null ? [] : _this._children).length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	resizeChildren() {
		let size = this.get_usableSize();
		let columnWidths = this.calcColumnWidths(size,true);
		let rowHeights = this.calcRowHeights(size,true);
		let explicitWidths = this.calcExplicitWidths();
		let explicitHeights = this.calcExplicitHeights();
		let rowIndex = 0;
		let columnIndex = 0;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let cx = null;
			let cy = null;
			if(child.get_percentWidth() != null) {
				let ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				let ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	repositionChildren() {
		let size = this.get_usableSize();
		let columnWidths = this.calcColumnWidths(size,true);
		let rowHeights = this.calcRowHeights(size,true);
		let rowIndex = 0;
		let columnIndex = 0;
		let xpos = this.get_paddingLeft();
		let ypos = this.get_paddingTop();
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			let halign = this.horizontalAlign(child);
			let valign = this.verticalAlign(child);
			let xposChild = 0;
			let yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	calcColumnWidths(usableSize,includePercentage) {
		let _this = this.get_component();
		let visibleChildren = (_this._children == null ? [] : _this._children).length;
		let _g = 0;
		let _this1 = this.get_component();
		let _g1 = _this1._children == null ? [] : _this1._children;
		while(_g < _g1.length) if(_g1[_g++].get_includeInLayout() == false) {
			--visibleChildren;
		}
		let columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		let columnWidths = [];
		let _g2 = 0;
		let _g3 = columnCount;
		while(_g2 < _g3) {
			++_g2;
			columnWidths.push(0);
		}
		let rowIndex = 0;
		let columnIndex = 0;
		let _g4 = 0;
		let _this2 = this.get_component();
		let _g5 = _this2._children == null ? [] : _this2._children;
		while(_g4 < _g5.length) {
			let child = _g5[_g4];
			++_g4;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			let _g = 0;
			let _this = this.get_component();
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					let cx = usableSize.width * child.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	calcRowHeights(usableSize,includePercentage) {
		let rowHeights = [];
		let _g = 0;
		let _g1 = this._rows;
		while(_g < _g1) {
			++_g;
			rowHeights.push(0);
		}
		let rowIndex = 0;
		let _g2 = 0;
		let _this = this.get_component();
		let _g3 = _this._children == null ? [] : _this._children;
		while(_g2 < _g3.length) {
			let child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			let _g = 0;
			let _this = this.get_component();
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					let cy = usableSize.height * child.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
				}
			}
		}
		return rowHeights;
	}
	calcExplicitWidths() {
		let _this = this.get_component();
		let visibleChildren = (_this._children == null ? [] : _this._children).length;
		let _g = 0;
		let _this1 = this.get_component();
		let _g1 = _this1._children == null ? [] : _this1._children;
		while(_g < _g1.length) if(_g1[_g++].get_includeInLayout() == false) {
			--visibleChildren;
		}
		let columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		let explicitWidths = [];
		let _g2 = 0;
		let _g3 = columnCount;
		while(_g2 < _g3) {
			++_g2;
			explicitWidths.push(false);
		}
		let rowIndex = 0;
		let _g4 = 0;
		let _this2 = this.get_component();
		let _g5 = _this2._children == null ? [] : _this2._children;
		while(_g4 < _g5.length) {
			let child = _g5[_g4];
			++_g4;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
			}
		}
		return explicitWidths;
	}
	calcExplicitHeights() {
		let explicitHeights = [];
		let _g = 0;
		let _g1 = this._rows;
		while(_g < _g1) {
			++_g;
			explicitHeights.push(false);
		}
		let rowIndex = 0;
		let _g2 = 0;
		let _this = this.get_component();
		let _g3 = _this._children == null ? [] : _this._children;
		while(_g2 < _g3.length) {
			let child = _g3[_g2];
			++_g2;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
			}
		}
		return explicitHeights;
	}
}
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = "haxe.ui.layouts.HorizontalGridLayout";
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
Object.assign(haxe_ui_layouts_HorizontalGridLayout.prototype, {
	__class__: haxe_ui_layouts_HorizontalGridLayout
	,_rows: null
	,__properties__: Object.assign({}, haxe_ui_layouts_Layout.prototype.__properties__, {set_rows: "set_rows",get_rows: "get_rows"})
});
class haxe_ui_containers__$TableView_CompoundItemRenderer extends haxe_ui_core_ItemRenderer {
	constructor() {
		super();
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("horizontal"));
		this.set_styleString("spacing: 2px;");
		this.removeClass("itemrenderer");
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers__$TableView_CompoundItemRenderer();
	}
}
$hxClasses["haxe.ui.containers._TableView.CompoundItemRenderer"] = haxe_ui_containers__$TableView_CompoundItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.__name__ = "haxe.ui.containers._TableView.CompoundItemRenderer";
haxe_ui_containers__$TableView_CompoundItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
Object.assign(haxe_ui_containers__$TableView_CompoundItemRenderer.prototype, {
	__class__: haxe_ui_containers__$TableView_CompoundItemRenderer
});
class haxe_ui_containers__$TableView_Events extends haxe_ui_containers_ScrollViewEvents {
	constructor(tableview) {
		super(tableview);
		this._tableview = tableview;
	}
	register() {
		super.register();
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	unregister() {
		super.unregister();
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	onScrollChange(e) {
		let _this = this._tableview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	onRendererCreated(e) {
		let instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			(js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder)).addItemRendererClass(instance,":selected");
		}
	}
	onRendererDestroyed(e) {
		let instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			(js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder)).addItemRendererClass(instance,":selected",false);
		}
	}
	onRendererMouseDown(e) {
		if(this._tableview.get_selectionMode() == "multiple-long-press") {
			if(this._tableview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		}
	}
	startLongPressSelection(e) {
		let timerClick = null;
		let _gthis = this;
		let currentMouseX = e.screenX;
		let currentMouseY = e.screenY;
		let renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		let __onMouseMove = null;
		let __onMouseUp = null;
		let __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				let timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					let x1 = e.screenX;
					let y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._tableview.get_longPressSelectionTime());
	}
	onContainerEventsStatusChanged() {
		super.onContainerEventsStatusChanged();
		if(this._containerEventsPaused == true) {
			this._tableview.findComponent("tableview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
	}
	onRendererClick(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		let components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		let _g = 0;
		while(_g < components.length) {
			let component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		let renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._tableview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				let selectedIndices = this._tableview.get_selectedIndices();
				let fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				let toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					let _g = 0;
					while(_g < selectedIndices.length) {
						let i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					let tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._tableview.get_selectionMode() == "multiple-click-modifier-key") {
				this._tableview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			if(this._tableview.get_selectedIndices().length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._tableview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._tableview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	toggleSelection(renderer) {
		let itemIndex = renderer.itemIndex;
		let selectedIndices = this._tableview.get_selectedIndices().slice();
		let index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._tableview.set_selectedIndices(selectedIndices);
	}
	selectRange(fromIndex,toIndex) {
		let tmp = this._tableview;
		let _g = [];
		let _g1 = fromIndex;
		let _g2 = toIndex + 1;
		while(_g1 < _g2) _g.push(_g1++);
		tmp.set_selectedIndices(_g);
	}
}
$hxClasses["haxe.ui.containers._TableView.Events"] = haxe_ui_containers__$TableView_Events;
haxe_ui_containers__$TableView_Events.__name__ = "haxe.ui.containers._TableView.Events";
haxe_ui_containers__$TableView_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
Object.assign(haxe_ui_containers__$TableView_Events.prototype, {
	__class__: haxe_ui_containers__$TableView_Events
	,_tableview: null
});
class haxe_ui_containers__$TableView_Builder extends haxe_ui_containers_ScrollViewBuilder {
	constructor(tableview) {
		super(tableview);
		this._tableview = tableview;
	}
	create() {
		this.createContentContainer(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	onInitialize() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
	}
	onReady() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	createContentContainer(layoutName) {
		if(this._contents == null) {
			super.createContentContainer(layoutName);
			this._contents.addClass("tableview-contents");
		}
	}
	addComponent(child) {
		let r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			let itemRenderer = this._tableview.get_itemRenderer();
			if(itemRenderer == null) {
				itemRenderer = new haxe_ui_containers__$TableView_CompoundItemRenderer();
				this._tableview.set_itemRenderer(itemRenderer);
			}
			itemRenderer.addComponent(child);
			return child;
		} else if(((child) instanceof haxe_ui_containers_Header)) {
			this._header = js_Boot.__cast(child , haxe_ui_containers_Header);
			this._header.registerEvent("componentAdded",$bind(this,this.onColumnAdded));
			r = null;
		} else {
			r = super.addComponent(child);
		}
		return r;
	}
	onColumnAdded(e) {
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		let _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout");
		}
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_Header) == true) {
			this._header = null;
			return null;
		}
		return super.removeComponent(child,dispose,invalidate);
	}
	buildDefaultRenderer() {
		let r = new haxe_ui_containers__$TableView_CompoundItemRenderer();
		if(this._header != null) {
			let _g = 0;
			let _this = this._header;
			let _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				let column = _g1[_g++];
				let itemRenderer = new haxe_ui_core_ItemRenderer();
				let label = new haxe_ui_components_Label();
				label.set_id(column.get_id());
				label.set_percentWidth(100);
				label.set_verticalAlign("center");
				itemRenderer.addComponent(label);
				r.addComponent(itemRenderer);
			}
		}
		this._tableview.set_itemRenderer(r);
	}
	fillExistingRenderer() {
		let _g = 0;
		let _this = this._header;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let column = _g1[_g];
			++_g;
			if(this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true) == null) {
				let itemRenderer = new haxe_ui_core_ItemRenderer();
				let label = new haxe_ui_components_Label();
				label.set_id(column.get_id());
				label.set_percentWidth(100);
				label.set_verticalAlign("center");
				itemRenderer.addComponent(label);
				this._tableview.get_itemRenderer().addComponent(itemRenderer);
			}
		}
		let data = this._component.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			let _g = 0;
			let _g1 = data._children == null ? [] : data._children;
			while(_g < _g1.length) {
				let item = _g1[_g];
				++_g;
				let _g2 = 0;
				let _this = this._header;
				let _g3 = _this._children == null ? [] : _this._children;
				while(_g2 < _g3.length) {
					let column = _g3[_g2];
					++_g2;
					if(item.findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true) == null) {
						let temp = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_Component);
						let renderer = null;
						if(((temp) instanceof haxe_ui_core_ItemRenderer)) {
							renderer = js_Boot.__cast(temp , haxe_ui_core_ItemRenderer);
						} else {
							renderer = temp.findAncestor(null,haxe_ui_core_ItemRenderer);
						}
						let index = this._tableview.get_itemRenderer().getComponentIndex(renderer);
						let instance = renderer.cloneComponent();
						if(index < 0) {
							item.addComponent(instance);
						} else {
							item.addComponentAt(instance,index);
						}
					}
				}
			}
		}
	}
	verticalConstraintModifier() {
		if(this._header == null) {
			return 0;
		}
		return this._header.get_height();
	}
	onVirtualChanged() {
		this._contents.set_layoutName(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	get_virtualHorizontal() {
		return false;
	}
	addItemRendererClass(child,className,add) {
		if(add == null) {
			add = true;
		}
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style");
			}
			return true;
		});
	}
}
$hxClasses["haxe.ui.containers._TableView.Builder"] = haxe_ui_containers__$TableView_Builder;
haxe_ui_containers__$TableView_Builder.__name__ = "haxe.ui.containers._TableView.Builder";
haxe_ui_containers__$TableView_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
Object.assign(haxe_ui_containers__$TableView_Builder.prototype, {
	__class__: haxe_ui_containers__$TableView_Builder
	,_tableview: null
	,_header: null
});
class haxe_ui_layouts_ScrollViewLayout extends haxe_ui_layouts_DefaultLayout {
	_hx_constructor() {
		super._hx_constructor();
	}
	repositionChildren() {
		if(this.get_component().findComponent("scrollview-contents",null,false,"css") == null) {
			return;
		}
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.moveComponent(this.get_paddingLeft(),Math.round(this.get_component().get_componentHeight() - hscroll.get_componentHeight() - this.get_paddingBottom() + this.marginTop(hscroll)));
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.moveComponent(Math.round(this.get_component().get_componentWidth() - vscroll.get_componentWidth() - this.get_paddingRight() + this.marginLeft(vscroll)),this.get_paddingTop());
		}
		let contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.moveComponent(this.get_paddingLeft(),this.get_paddingTop());
		}
	}
	resizeChildren() {
		super.resizeChildren();
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		let usableSize = this.get_usableSize();
		let percentWidth = 100;
		let percentHeight = 100;
		let _g = 0;
		let _this = this.get_component();
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child != hscroll && child != vscroll) {
				continue;
			}
			let cx = null;
			let cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	get_usableSize() {
		let size = super.get_usableSize();
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && hscroll.get_includeInLayout() == true && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_includeInLayout() == true && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			let contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		return size;
	}
	calcAutoSize(exclusions) {
		let hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		let vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		let size = super.calcAutoSize([hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			let contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		return size;
	}
}
$hxClasses["haxe.ui.layouts.ScrollViewLayout"] = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_ScrollViewLayout.__name__ = "haxe.ui.layouts.ScrollViewLayout";
haxe_ui_layouts_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_layouts_ScrollViewLayout.prototype, {
	__class__: haxe_ui_layouts_ScrollViewLayout
});
class haxe_ui_layouts_VirtualLayout extends haxe_ui_layouts_ScrollViewLayout {
	constructor() {
		haxe_ui_layouts_Layout._hx_skip_constructor = true;
		super();
		haxe_ui_layouts_Layout._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._lastItemRenderer = null;
		this._sizeCache = [];
		this._rendererPool = [];
		this._lastIndex = -1;
		this._firstIndex = -1;
		super._hx_constructor();
	}
	get_contents() {
		if(this.contents == null) {
			this.contents = this.findComponent("scrollview-contents",null,false,"css");
		}
		return this.contents;
	}
	get_dataSource() {
		return (js_Boot.__cast(this._component , haxe_ui_core_IDataComponent)).get_dataSource();
	}
	get_itemHeight() {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemHeight() > 0) {
			return comp.get_itemHeight();
		}
		let _this = this.get_contents();
		let childComponents = _this._children == null ? [] : _this._children;
		let result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_height();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_height();
			}
		}
		if(result <= 0) {
			result = 25;
		}
		return result;
	}
	get_itemCount() {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() >= 0) {
			return comp.get_itemCount();
		} else {
			return 0;
		}
	}
	refresh() {
		this.refreshData();
		super.refresh();
	}
	refreshData() {
		if(this.get_dataSource() == null) {
			return;
		}
		if((js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer)).get_virtual() == false) {
			this.refreshNonVirtualData();
		} else {
			this.refreshVirtualData();
		}
	}
	refreshNonVirtualData() {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
		}
		let dataSource = this.get_dataSource();
		let contents = this.get_contents();
		let _g = 0;
		let _g1 = dataSource.get_size();
		while(_g < _g1) {
			let n = _g++;
			let data = dataSource.get(n);
			let item = null;
			if(n < (contents._children == null ? [] : contents._children).length) {
				item = js_Boot.__cast((contents._children == null ? [] : contents._children)[n] , haxe_ui_core_ItemRenderer);
				if(item.get_data() == data) {
					item.invalidateComponent("data");
					continue;
				}
				let cls = this.itemClass(n,data);
				if(!js_Boot.__instanceof(item,cls)) {
					this.removeRenderer(item);
					item = this.getRenderer(cls,n);
					contents.addComponentAt(item,n);
				}
			} else {
				item = this.getRenderer(this.itemClass(n,data),n);
				contents.addComponent(item);
			}
			let className = n % 2 == 0 ? "even" : "odd";
			if(!item.hasClass(className)) {
				item.removeClass(n % 2 == 0 ? "odd" : "even");
				item.addClass(className);
			}
			item.itemIndex = n;
			item.set_data(data);
		}
		while(dataSource.get_size() < (contents._children == null ? [] : contents._children).length) this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer));
	}
	refreshVirtualData() {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
			this._rendererPool = [];
		}
		this.removeInvisibleRenderers();
		this.calculateRangeVisible();
		this.updateScroll();
		let dataSource = this.get_dataSource();
		let i = 0;
		let _g = this._firstIndex;
		let _g1 = this._lastIndex;
		while(_g < _g1) {
			let n = _g++;
			let data = dataSource.get(n);
			let item = null;
			let cls = this.itemClass(n,data);
			let _this = this.get_contents();
			if((_this._children == null ? [] : _this._children).length <= i) {
				item = this.getRenderer(cls,n);
				this.get_contents().addComponent(item);
			} else {
				let _this = this.get_contents();
				item = js_Boot.__cast((_this._children == null ? [] : _this._children)[i] , haxe_ui_core_ItemRenderer);
				if(!js_Boot.__instanceof(item,cls)) {
					item = this.getRenderer(cls,n);
					this.get_contents().addComponentAt(item,i);
				} else if(item.itemIndex != n) {
					if(this._component.hasEvent("rendererDestroyed")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererDestroyed",null,item));
					}
					this._component.setComponentIndex(item,i);
					item.itemIndex = n;
					if(this._component.hasEvent("rendererCreated")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererCreated",null,item));
					}
				}
			}
			let className = n % 2 == 0 ? "even" : "odd";
			if(!item.hasClass(className)) {
				item.removeClass(n % 2 == 0 ? "odd" : "even");
				item.addClass(className);
			}
			item.set_data(data);
			++i;
		}
		while(true) {
			let _this = this.get_contents();
			if(!((_this._children == null ? [] : _this._children).length > i)) {
				break;
			}
			let _this1 = this.get_contents();
			let tmp = _this1._children == null ? [] : _this1._children;
			let _this2 = this.get_contents();
			this.removeRenderer(js_Boot.__cast(tmp[(_this2._children == null ? [] : _this2._children).length - 1] , haxe_ui_core_ItemRenderer),false);
		}
	}
	calculateRangeVisible() {
	}
	updateScroll() {
	}
	itemClass(index,data) {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRendererFunction() != null) {
			return (comp.get_itemRendererFunction())(data,index);
		} else if(comp.get_itemRendererClass() != null) {
			return comp.get_itemRendererClass();
		} else if(comp.get_itemRenderer() != null) {
			return js_Boot.getClass(comp.get_itemRenderer());
		} else {
			return haxe_ui_core_BasicItemRenderer;
		}
	}
	getRenderer(cls,index) {
		let instance = null;
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			let _g = 0;
			let _g1 = this._rendererPool.length;
			while(_g < _g1) {
				let i = _g++;
				let renderer = this._rendererPool[i];
				if(js_Boot.__instanceof(renderer,cls)) {
					this._rendererPool.splice(i,1);
					instance = renderer;
					break;
				}
			}
		}
		if(instance == null) {
			if(comp.get_itemRenderer() != null && js_Boot.getClass(comp.get_itemRenderer()) == cls) {
				instance = comp.get_itemRenderer().cloneComponent();
			} else {
				instance = Type.createInstance(cls,[]);
			}
		}
		instance.itemIndex = index;
		if(this._component.hasEvent("rendererCreated")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererCreated",null,instance));
		}
		if(this._component.get_hidden() == false) {
			instance.handleVisibility(true);
		}
		return js_Boot.__cast(instance , haxe_ui_core_ItemRenderer);
	}
	removeRenderer(renderer,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._component.removeComponent(renderer,dispose);
		if((js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer)).get_virtual() == true) {
			this._rendererPool.push(js_Boot.__cast(renderer , haxe_ui_core_ItemRenderer));
		}
		if(this._component.hasEvent("rendererDestroyed")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererDestroyed",null,renderer));
		}
		renderer.itemIndex = -1;
	}
	removeInvisibleRenderers() {
		let contents = this.get_contents();
		if(this._firstIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[0])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[0] , haxe_ui_core_ItemRenderer),false);
				++this._firstIndex;
			}
		}
		if(this._lastIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer),false);
				--this._lastIndex;
			}
		}
	}
	isRendererVisible(renderer) {
		if(renderer == null) {
			return false;
		}
		if(renderer.get_top() < this._component.get_componentHeight() && renderer.get_top() + renderer.get_componentHeight() >= 0 && renderer.get_left() < this._component.get_componentWidth()) {
			return renderer.get_left() + renderer.get_componentWidth() >= 0;
		} else {
			return false;
		}
	}
}
$hxClasses["haxe.ui.layouts.VirtualLayout"] = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VirtualLayout.__name__ = "haxe.ui.layouts.VirtualLayout";
haxe_ui_layouts_VirtualLayout.__super__ = haxe_ui_layouts_ScrollViewLayout;
Object.assign(haxe_ui_layouts_VirtualLayout.prototype, {
	__class__: haxe_ui_layouts_VirtualLayout
	,_firstIndex: null
	,_lastIndex: null
	,_rendererPool: null
	,_sizeCache: null
	,contents: null
	,itemHeight: null
	,itemCount: null
	,_lastItemRenderer: null
	,__properties__: Object.assign({}, haxe_ui_layouts_ScrollViewLayout.prototype.__properties__, {get_itemCount: "get_itemCount",get_itemHeight: "get_itemHeight",get_dataSource: "get_dataSource",get_contents: "get_contents"})
});
class haxe_ui_layouts_VerticalVirtualLayout extends haxe_ui_layouts_VirtualLayout {
	constructor() {
		super();
	}
	repositionChildren() {
		super.repositionChildren();
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		let itemHeight = this.get_itemHeight();
		let contents = this.get_contents();
		let verticalSpacing = contents.get_layout().get_verticalSpacing();
		if(comp.get_virtual() == true) {
			let n = this._firstIndex;
			if(comp.get_variableItemSize() == true) {
				let pos = -comp.get_vscrollPos();
				let _g = 0;
				let _g1 = this._lastIndex;
				while(_g < _g1) {
					let i = _g++;
					if(i >= this._firstIndex) {
						contents.getComponentAt(i - this._firstIndex).set_top(pos);
					}
					let size = this._sizeCache[i];
					pos += (size != null && size != 0 ? size : itemHeight) + verticalSpacing;
				}
			} else {
				let _g = 0;
				let _g1 = contents._children == null ? [] : contents._children;
				while(_g < _g1.length) {
					_g1[_g++].set_top(n * (itemHeight + verticalSpacing) - comp.get_vscrollPos());
					++n;
				}
			}
		}
	}
	verticalConstraintModifier() {
		return 0;
	}
	calculateRangeVisible() {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		let verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		let itemHeight = this.get_itemHeight();
		let visibleItemsCount = 0;
		let contentsHeight = 0;
		if(this.get_contents().get_autoHeight() == true) {
			let itemCount = this.get_itemCount();
			if(itemCount > 0 || this._component.get_autoHeight() == true) {
				contentsHeight = itemCount * itemHeight - this.verticalConstraintModifier();
			} else {
				contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
			}
		} else {
			contentsHeight = this.get_contents().get_height() - this.verticalConstraintModifier();
		}
		if(contentsHeight > this._component.get_height() - this.verticalConstraintModifier()) {
			contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
		}
		if(comp.get_variableItemSize() == true) {
			let totalSize = 0;
			let requireInvalidation = false;
			let newFirstIndex = -1;
			let _g = 0;
			let _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				let i = _g++;
				let size = this._sizeCache[i];
				if(size == null || size == 0) {
					if(i >= this._firstIndex && i <= this._lastIndex) {
						let c = this.get_contents().getComponentAt(i - this._firstIndex);
						if(c != null && c.get_componentHeight() > 0) {
							this._sizeCache[i] = c.get_componentHeight();
							size = c.get_componentHeight();
						} else {
							requireInvalidation = true;
							size = itemHeight;
						}
					} else {
						requireInvalidation = true;
						size = itemHeight;
					}
				}
				size += verticalSpacing;
				if(newFirstIndex == -1) {
					if(totalSize + size > comp.get_vscrollPos()) {
						newFirstIndex = i;
						totalSize += size - comp.get_vscrollPos();
						++visibleItemsCount;
					} else {
						totalSize += size;
					}
				} else if(totalSize + size > contentsHeight) {
					break;
				} else {
					++visibleItemsCount;
					totalSize += size;
				}
			}
			if(requireInvalidation == true) {
				let _this = this._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
			}
			this._firstIndex = newFirstIndex;
		} else {
			visibleItemsCount = Math.ceil(contentsHeight / (itemHeight + verticalSpacing));
			this._firstIndex = comp.get_vscrollPos() / (itemHeight + verticalSpacing) | 0;
		}
		if(this._firstIndex < 0) {
			this._firstIndex = 0;
		}
		let rc = new haxe_ui_geom_Rectangle(0,0,this.get_contents().get_width(),contentsHeight - (this.get_paddingTop() + this.get_paddingBottom()));
		this.get_contents().set_componentClipRect(rc);
		this._lastIndex = this._firstIndex + visibleItemsCount + 1;
		if(this._lastIndex > this.get_dataSource().get_size()) {
			this._lastIndex = this.get_dataSource().get_size();
		}
	}
	updateScroll() {
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		let usableSize = this.get_usableSize();
		let dataSize = this.get_dataSource().get_size();
		let verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		let scrollMax = 0;
		let itemHeight = this.get_itemHeight();
		if(comp.get_variableItemSize() == true) {
			scrollMax = -usableSize.height;
			let _g = 0;
			let _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				let size = this._sizeCache[_g++];
				if(size == null || size == 0) {
					size = itemHeight;
				}
				scrollMax += size + verticalSpacing + this.verticalConstraintModifier();
			}
		} else {
			scrollMax = dataSize * itemHeight + (dataSize - 1) * verticalSpacing - usableSize.height + this.verticalConstraintModifier();
		}
		if(scrollMax < 0) {
			scrollMax = 0;
		}
		comp.set_vscrollMax(scrollMax);
		comp.set_vscrollPageSize(usableSize.height / (scrollMax + usableSize.height) * scrollMax);
	}
	calcAutoSize(exclusions) {
		let size = super.calcAutoSize(exclusions);
		let comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() > 0 && this._component.get_autoHeight() == true) {
			let contents = this._component.findComponent("scrollview-contents",null,false);
			let contentsPadding = 0;
			if(contents != null) {
				let layout = contents.get_layout();
				if(layout != null) {
					contentsPadding = layout.get_paddingTop() + layout.get_paddingBottom();
				}
			}
			size.height = this.get_itemHeight() * comp.get_itemCount() + this.get_paddingTop() + this.get_paddingBottom() + contentsPadding;
		}
		return size;
	}
}
$hxClasses["haxe.ui.layouts.VerticalVirtualLayout"] = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.__name__ = "haxe.ui.layouts.VerticalVirtualLayout";
haxe_ui_layouts_VerticalVirtualLayout.__super__ = haxe_ui_layouts_VirtualLayout;
Object.assign(haxe_ui_layouts_VerticalVirtualLayout.prototype, {
	__class__: haxe_ui_layouts_VerticalVirtualLayout
});
class haxe_ui_containers__$TableView_Layout extends haxe_ui_layouts_VerticalVirtualLayout {
	constructor() {
		super();
	}
	itemClass(index,data) {
		return haxe_ui_containers__$TableView_CompoundItemRenderer;
	}
	repositionChildren() {
		let header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		super.repositionChildren();
		header.set_left(this.get_paddingLeft());
		header.set_top(this.get_paddingTop());
		let vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null && vscroll.get_hidden() == false) {
			header.addClass("scrolling");
		} else {
			header.removeClass("scrolling");
		}
		header.set_componentClipRect(new haxe_ui_geom_Rectangle((js_Boot.__cast(this._component , haxe_ui_containers_ScrollView)).get_hscrollPos() + 1,1,this.get_usableWidth(),header.get_height()));
		let data = this.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			data.lockLayout(true);
			let _g = 0;
			let _g1 = data._children == null ? [] : data._children;
			while(_g < _g1.length) {
				let item = _g1[_g];
				++_g;
				let headerChildComponents = header._children == null ? [] : header._children;
				let _g2 = 0;
				while(_g2 < headerChildComponents.length) {
					let column = headerChildComponents[_g2];
					++_g2;
					let isLast = headerChildComponents.indexOf(column) == headerChildComponents.length - 1;
					let itemRenderer = item.findComponent(column.get_id(),haxe_ui_core_Component);
					if(itemRenderer != null && ((itemRenderer) instanceof haxe_ui_core_ItemRenderer) == false) {
						itemRenderer = itemRenderer.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					if(itemRenderer != null) {
						itemRenderer.set_percentWidth(null);
						if(isLast == false) {
							itemRenderer.set_width(column.get_width() - item.get_layout().get_horizontalSpacing());
						} else {
							itemRenderer.set_width(column.get_width());
						}
					}
				}
			}
			data.set_left(this.get_paddingLeft());
			data.set_top(header.get_top() + header.get_height() - 1);
			data.set_componentWidth(header.get_width());
			data.unlockLayout(true);
		}
	}
	resizeChildren() {
		if(this.findComponent(null,haxe_ui_containers_Header,true) == null) {
			return;
		}
		super.resizeChildren();
	}
	verticalConstraintModifier() {
		let header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return 0;
		}
		return header.get_height();
	}
}
$hxClasses["haxe.ui.containers._TableView.Layout"] = haxe_ui_containers__$TableView_Layout;
haxe_ui_containers__$TableView_Layout.__name__ = "haxe.ui.containers._TableView.Layout";
haxe_ui_containers__$TableView_Layout.__super__ = haxe_ui_layouts_VerticalVirtualLayout;
Object.assign(haxe_ui_containers__$TableView_Layout.prototype, {
	__class__: haxe_ui_containers__$TableView_Layout
});
class haxe_ui_containers__$TableView_DataSourceBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		haxe_ui_behaviours_Behaviour._hx_skip_constructor = true;
		super();
		haxe_ui_behaviours_Behaviour._hx_skip_constructor = false;
		this._hx_constructor(component);
	}
	_hx_constructor(component) {
		this._firstPass = true;
		super._hx_constructor(component);
	}
	set(value) {
		let _gthis = this;
		super.set(value);
		let dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
			dataSource.onChange = function() {
				let _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout");
				}
				if(_gthis._firstPass == true) {
					_gthis._component.syncComponentValidation();
					_gthis._firstPass = false;
					let _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout");
					}
				}
				haxe_ui_binding_BindingManager.get_instance().componentPropChanged(_gthis._component,"dataSource");
			};
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		} else {
			let _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout");
			}
		}
	}
	get() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
}
$hxClasses["haxe.ui.containers._TableView.DataSourceBehaviour"] = haxe_ui_containers__$TableView_DataSourceBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.__name__ = "haxe.ui.containers._TableView.DataSourceBehaviour";
haxe_ui_containers__$TableView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$TableView_DataSourceBehaviour.prototype, {
	__class__: haxe_ui_containers__$TableView_DataSourceBehaviour
	,_firstPass: null
});
class haxe_ui_containers__$TableView_SelectedIndexBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let selectedIndices = (js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	set(value) {
		(js_Boot.__cast(this._component , haxe_ui_containers_TableView)).set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
}
$hxClasses["haxe.ui.containers._TableView.SelectedIndexBehaviour"] = haxe_ui_containers__$TableView_SelectedIndexBehaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndexBehaviour";
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TableView_SelectedIndexBehaviour.prototype, {
	__class__: haxe_ui_containers__$TableView_SelectedIndexBehaviour
});
class haxe_ui_containers__$TableView_SelectedItemBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	getDynamic() {
		let tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		let selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return tableView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	set(value) {
		let tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		let index = tableView.get_dataSource().indexOf(value);
		if(index != -1 && tableView.get_selectedIndices().indexOf(index) == -1) {
			tableView.set_selectedIndices([index]);
		}
	}
}
$hxClasses["haxe.ui.containers._TableView.SelectedItemBehaviour"] = haxe_ui_containers__$TableView_SelectedItemBehaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemBehaviour";
haxe_ui_containers__$TableView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TableView_SelectedItemBehaviour.prototype, {
	__class__: haxe_ui_containers__$TableView_SelectedItemBehaviour
});
class haxe_ui_containers__$TableView_SelectedIndicesBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	validateData() {
		let tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		let selectedIndices = tableView.get_selectedIndices();
		let contents = this._component.findComponent("scrollview-contents",null,false,"css");
		let itemToEnsure = null;
		let builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TableView_Builder);
		let _g = 0;
		let _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				itemToEnsure = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(itemToEnsure != null && tableView.get_virtual() == false) {
			let vscroll = tableView.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				let vpos = vscroll.get_pos();
				let contents = tableView.findComponent("tableview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
		if(tableView.get_selectedIndex() != -1 && tableView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
}
$hxClasses["haxe.ui.containers._TableView.SelectedIndicesBehaviour"] = haxe_ui_containers__$TableView_SelectedIndicesBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndicesBehaviour";
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$TableView_SelectedIndicesBehaviour.prototype, {
	__class__: haxe_ui_containers__$TableView_SelectedIndicesBehaviour
});
class haxe_ui_containers__$TableView_SelectedItemsBehaviour extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	get() {
		let tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		let selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			let selectedItems = [];
			let _g = 0;
			while(_g < selectedIndices.length) {
				let i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= tableView.get_dataSource().get_size()) {
					continue;
				}
				selectedItems.push(tableView.get_dataSource().get(i));
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	set(value) {
		let tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		let selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			let selectedIndices = [];
			let index;
			let _g = 0;
			while(_g < selectedItems.length) {
				let item = selectedItems[_g++];
				index = tableView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			tableView.set_selectedIndices(selectedIndices);
		} else {
			tableView.set_selectedIndices([]);
		}
	}
}
$hxClasses["haxe.ui.containers._TableView.SelectedItemsBehaviour"] = haxe_ui_containers__$TableView_SelectedItemsBehaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemsBehaviour";
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TableView_SelectedItemsBehaviour.prototype, {
	__class__: haxe_ui_containers__$TableView_SelectedItemsBehaviour
});
class haxe_ui_containers__$TableView_SelectionModeBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		let selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		switch(this._value) {
		case "disabled":
			tableView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				tableView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
}
$hxClasses["haxe.ui.containers._TableView.SelectionModeBehaviour"] = haxe_ui_containers__$TableView_SelectionModeBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._TableView.SelectionModeBehaviour";
haxe_ui_containers__$TableView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers__$TableView_SelectionModeBehaviour.prototype, {
	__class__: haxe_ui_containers__$TableView_SelectionModeBehaviour
});
class haxe_ui_containers__$TableView_GetHeader extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	get() {
		return haxe_ui_util_Variant.fromComponent(this._component.findComponent(null,haxe_ui_containers_Header));
	}
}
$hxClasses["haxe.ui.containers._TableView.GetHeader"] = haxe_ui_containers__$TableView_GetHeader;
haxe_ui_containers__$TableView_GetHeader.__name__ = "haxe.ui.containers._TableView.GetHeader";
haxe_ui_containers__$TableView_GetHeader.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers__$TableView_GetHeader.prototype, {
	__class__: haxe_ui_containers__$TableView_GetHeader
});
class haxe_ui_containers__$TableView_ClearTable extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		if(param == true) {
			if((js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer() != null) {
				(js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer().removeAllComponents();
			}
			let header = this._component.findComponent(null,haxe_ui_containers_Header);
			if(header != null) {
				header.removeAllComponents();
			}
		}
		let contents = this._component.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(contents != null) {
			contents.removeAllComponents();
		}
		return null;
	}
}
$hxClasses["haxe.ui.containers._TableView.ClearTable"] = haxe_ui_containers__$TableView_ClearTable;
haxe_ui_containers__$TableView_ClearTable.__name__ = "haxe.ui.containers._TableView.ClearTable";
haxe_ui_containers__$TableView_ClearTable.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TableView_ClearTable.prototype, {
	__class__: haxe_ui_containers__$TableView_ClearTable
});
class haxe_ui_containers__$TableView_AddColumn extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			header = new haxe_ui_containers_Header();
			this._component.addComponent(header);
		}
		let column = new haxe_ui_components_Column();
		column.set_text(param);
		column.set_id(StringTools.replace(haxe_ui_util_StringUtil.uncapitalizeFirstLetter(haxe_ui_util_StringUtil.capitalizeHyphens(param))," ",""));
		header.addComponent(column);
		return haxe_ui_util_Variant.fromComponent(column);
	}
}
$hxClasses["haxe.ui.containers._TableView.AddColumn"] = haxe_ui_containers__$TableView_AddColumn;
haxe_ui_containers__$TableView_AddColumn.__name__ = "haxe.ui.containers._TableView.AddColumn";
haxe_ui_containers__$TableView_AddColumn.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TableView_AddColumn.prototype, {
	__class__: haxe_ui_containers__$TableView_AddColumn
});
class haxe_ui_containers__$TableView_RemoveColumn extends haxe_ui_behaviours_Behaviour {
	constructor(component) {
		super(component);
	}
	call(param) {
		let header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			return null;
		}
		let _g = 0;
		let _g1 = header._children == null ? [] : header._children;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			if(c.get_text() == param) {
				header.removeComponent(c);
				break;
			}
		}
		return null;
	}
}
$hxClasses["haxe.ui.containers._TableView.RemoveColumn"] = haxe_ui_containers__$TableView_RemoveColumn;
haxe_ui_containers__$TableView_RemoveColumn.__name__ = "haxe.ui.containers._TableView.RemoveColumn";
haxe_ui_containers__$TableView_RemoveColumn.__super__ = haxe_ui_behaviours_Behaviour;
Object.assign(haxe_ui_containers__$TableView_RemoveColumn.prototype, {
	__class__: haxe_ui_containers__$TableView_RemoveColumn
});
class haxe_ui_containers_VerticalButtonBar extends haxe_ui_containers_ButtonBar {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._defaultLayoutClass = haxe_ui_layouts_VerticalLayout;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_VerticalButtonBar();
	}
}
$hxClasses["haxe.ui.containers.VerticalButtonBar"] = haxe_ui_containers_VerticalButtonBar;
haxe_ui_containers_VerticalButtonBar.__name__ = "haxe.ui.containers.VerticalButtonBar";
haxe_ui_containers_VerticalButtonBar.__super__ = haxe_ui_containers_ButtonBar;
Object.assign(haxe_ui_containers_VerticalButtonBar.prototype, {
	__class__: haxe_ui_containers_VerticalButtonBar
});
class haxe_ui_containers_VerticalSplitter extends haxe_ui_containers_Splitter {
	constructor() {
		super();
		this.set_layoutName("vertical");
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder;
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_VerticalSplitter();
	}
}
$hxClasses["haxe.ui.containers.VerticalSplitter"] = haxe_ui_containers_VerticalSplitter;
haxe_ui_containers_VerticalSplitter.__name__ = "haxe.ui.containers.VerticalSplitter";
haxe_ui_containers_VerticalSplitter.__super__ = haxe_ui_containers_Splitter;
Object.assign(haxe_ui_containers_VerticalSplitter.prototype, {
	__class__: haxe_ui_containers_VerticalSplitter
});
class haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents extends haxe_ui_containers_SplitterEvents {
	constructor(splitter) {
		super(splitter);
	}
	onGripperMouseDown(event) {
		super.onGripperMouseDown(event);
		window.document.body.style.cursor = "row-resize";
	}
	handleResize(prev,next,event) {
		let delta = event.screenY - this._currentOffset.y;
		let prevCY = prev.set_height(prev.get_height() + delta);
		let nextCY = next.set_height(next.get_height() - delta);
		let ucy = this._splitter.get_layout().get_usableHeight();
		if(prev.get_percentHeight() != null) {
			prev.set_percentHeight(prevCY / ucy * 100);
		} else {
			prev.set_height(prevCY);
		}
		if(next.get_percentHeight() != null) {
			next.set_percentHeight(nextCY / ucy * 100);
		} else {
			next.set_height(nextCY);
		}
	}
}
$hxClasses["haxe.ui.containers._VerticalSplitter.VerticalSplitterEvents"] = haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.__name__ = "haxe.ui.containers._VerticalSplitter.VerticalSplitterEvents";
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.__super__ = haxe_ui_containers_SplitterEvents;
Object.assign(haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.prototype, {
	__class__: haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents
});
class haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder extends haxe_ui_containers_SplitterBuilder {
	constructor(splitter) {
		super(splitter);
	}
	getSplitterClass() {
		return "vertical-splitter-gripper";
	}
}
$hxClasses["haxe.ui.containers._VerticalSplitter.VerticalSplitterBuilder"] = haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.__name__ = "haxe.ui.containers._VerticalSplitter.VerticalSplitterBuilder";
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.__super__ = haxe_ui_containers_SplitterBuilder;
Object.assign(haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.prototype, {
	__class__: haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder
});
class haxe_ui_containers_dialogs_DialogButton {
	static toArray(this1) {
		let a = [];
		let _g = 0;
		let _g1 = (this1 == null ? "null" : "" + this1).split("|");
		while(_g < _g1.length) {
			let i = _g1[_g];
			++_g;
			i = StringTools.trim(i);
			if(i.length == 0 || i == "null") {
				continue;
			}
			a.push(i);
		}
		return a;
	}
	static toString(this1) {
		if(this1 == null) {
			return "null";
		} else {
			return "" + this1;
		}
	}
}
class haxe_ui_containers_dialogs_DialogEvent extends haxe_ui_events_UIEvent {
	constructor(type,bubble,data) {
		super(type,bubble,data);
	}
	clone() {
		let c = new haxe_ui_containers_dialogs_DialogEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.button = this.button;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.containers.dialogs.DialogEvent"] = haxe_ui_containers_dialogs_DialogEvent;
haxe_ui_containers_dialogs_DialogEvent.__name__ = "haxe.ui.containers.dialogs.DialogEvent";
haxe_ui_containers_dialogs_DialogEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_containers_dialogs_DialogEvent.prototype, {
	__class__: haxe_ui_containers_dialogs_DialogEvent
	,button: null
});
class haxe_ui_containers_dialogs_MessageBox extends haxe_ui_backend_MessageBoxBase {
	constructor() {
		super();
		this.set_title("Message");
	}
	onInitialize() {
		super.onInitialize();
		if(haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons).length == 0) {
			switch(this.get_type()) {
			case "error":
				this.buttons = "{{dialog.close}}";
				break;
			case "info":
				this.buttons = "{{dialog.ok}}";
				break;
			case "question":
				let larr = "{{dialog.yes}}".split("|");
				let rarr = "{{dialog.no}}".split("|");
				let _g = 0;
				while(_g < rarr.length) {
					let r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				let larr1 = haxe_ui_containers_dialogs_DialogButton.toString(larr.join("|")).split("|");
				let rarr1 = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.cancel}}").split("|");
				let _g1 = 0;
				while(_g1 < rarr1.length) {
					let r = rarr1[_g1];
					++_g1;
					if(larr1.indexOf(r) == -1) {
						larr1.push(r);
					}
				}
				this.buttons = larr1.join("|");
				break;
			case "warning":
				this.buttons = "{{dialog.close}}";
				break;
			}
			this.createButtons();
		}
		if(this.get_title() == "Message") {
			switch(this.get_type()) {
			case "error":
				this.set_title("Error");
				break;
			case "info":
				this.set_title("Info");
				break;
			case "question":
				this.set_title("Question");
				break;
			case "warning":
				this.set_title("Warning");
				break;
			}
		}
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_dialogs_MessageBox();
	}
}
$hxClasses["haxe.ui.containers.dialogs.MessageBox"] = haxe_ui_containers_dialogs_MessageBox;
haxe_ui_containers_dialogs_MessageBox.__name__ = "haxe.ui.containers.dialogs.MessageBox";
haxe_ui_containers_dialogs_MessageBox.__super__ = haxe_ui_backend_MessageBoxBase;
Object.assign(haxe_ui_containers_dialogs_MessageBox.prototype, {
	__class__: haxe_ui_containers_dialogs_MessageBox
});
class haxe_ui_containers_menus_MenuEvent extends haxe_ui_events_UIEvent {
	constructor(type,bubble,data) {
		haxe_ui_events_UIEvent._hx_skip_constructor = true;
		super();
		haxe_ui_events_UIEvent._hx_skip_constructor = false;
		this._hx_constructor(type,bubble,data);
	}
	_hx_constructor(type,bubble,data) {
		if(bubble == null) {
			bubble = false;
		}
		this.menuItem = null;
		this.menu = null;
		super._hx_constructor(type,true,data);
	}
	clone() {
		let c = new haxe_ui_containers_menus_MenuEvent(this.type);
		c.menu = this.menu;
		c.menuItem = this.menuItem;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.containers.menus.MenuEvent"] = haxe_ui_containers_menus_MenuEvent;
haxe_ui_containers_menus_MenuEvent.__name__ = "haxe.ui.containers.menus.MenuEvent";
haxe_ui_containers_menus_MenuEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_containers_menus_MenuEvent.prototype, {
	__class__: haxe_ui_containers_menus_MenuEvent
	,menu: null
	,menuItem: null
});
class haxe_ui_containers_menus_Menu extends haxe_ui_containers_VBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_menus_MenuEvents;
		this._compositeBuilderClass = haxe_ui_containers_menus__$Menu_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_menuStyleNames() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	set_menuStyleNames(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"menuStyleNames",value);
					return value;
				}
			}
		}
		this.behaviours.set("menuStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"menuStyleNames"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"menuStyleNames");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_menus_Menu();
	}
}
$hxClasses["haxe.ui.containers.menus.Menu"] = haxe_ui_containers_menus_Menu;
haxe_ui_containers_menus_Menu.__name__ = "haxe.ui.containers.menus.Menu";
haxe_ui_containers_menus_Menu.__super__ = haxe_ui_containers_VBox;
Object.assign(haxe_ui_containers_menus_Menu.prototype, {
	__class__: haxe_ui_containers_menus_Menu
	,__properties__: Object.assign({}, haxe_ui_containers_VBox.prototype.__properties__, {set_menuStyleNames: "set_menuStyleNames",get_menuStyleNames: "get_menuStyleNames"})
});
class haxe_ui_containers_menus_MenuEvents extends haxe_ui_events_Events {
	constructor(menu) {
		haxe_ui_events_Events._hx_skip_constructor = true;
		super();
		haxe_ui_events_Events._hx_skip_constructor = false;
		this._hx_constructor(menu);
	}
	_hx_constructor(menu) {
		this._over = false;
		this.parentMenu = null;
		this.currentSubMenu = null;
		this._currentItem = null;
		super._hx_constructor(menu);
		this._menu = menu;
	}
	register() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		let _g = 0;
		let _this = this._menu;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_containers_menus_MenuItem)) {
				let item = js_Boot.__cast(child , haxe_ui_containers_menus_MenuItem);
				if(!item.hasEvent("click",$bind(this,this.onItemClick))) {
					item.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(!item.hasEvent("mouseover",$bind(this,this.onItemMouseOver))) {
					item.registerEvent("mouseover",$bind(this,this.onItemMouseOver));
				}
				if(!item.hasEvent("mouseout",$bind(this,this.onItemMouseOut))) {
					item.registerEvent("mouseout",$bind(this,this.onItemMouseOut));
				}
			}
		}
		if(!this.hasEvent("hidden",$bind(this,this.onHidden))) {
			this.registerEvent("hidden",$bind(this,this.onHidden));
		}
	}
	unregister() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		let _g = 0;
		let _this = this._menu;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onItemClick));
			child.unregisterEvent("mouseover",$bind(this,this.onItemMouseOver));
			child.unregisterEvent("mouseout",$bind(this,this.onItemMouseOut));
		}
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
	}
	onMouseOver(event) {
		this._over = true;
	}
	onMouseOut(event) {
		this._over = false;
	}
	onItemClick(event) {
		let item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		if(!item.get_expandable()) {
			let event = new haxe_ui_containers_menus_MenuEvent("menuselected");
			event.menu = this._menu;
			event.menuItem = item;
			this.findRootMenu().dispatch(event);
			this.hideCurrentSubMenu();
			this.findRootMenu().hide();
		}
	}
	onItemMouseOver(event) {
		let subMenus = (js_Boot.__cast(this._menu._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder))._subMenus;
		let item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		let _g = 0;
		let _this = this._menu;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			let child = _g1[_g];
			++_g;
			if(child != item) {
				child.removeClass(":hover",true,true);
			}
		}
		if(subMenus.h[item.__id__] != null) {
			this._currentItem = item;
			this.showSubMenu(js_Boot.__cast(subMenus.h[item.__id__] , haxe_ui_containers_menus_Menu),item);
		} else {
			this.hideCurrentSubMenu();
		}
	}
	onItemMouseOut(event) {
		if(this.currentSubMenu != null) {
			this._currentItem.addClass(":hover",true,true);
			return;
		} else {
			this._currentItem = null;
		}
	}
	showSubMenu(subMenu,source) {
		this.hideCurrentSubMenu();
		subMenu.set_menuStyleNames(this._menu.get_menuStyleNames());
		subMenu.addClass(this._menu.get_menuStyleNames());
		let componentOffset = source.getComponentOffset();
		let left = source.get_screenLeft() + source.get_actualComponentWidth() + componentOffset.x;
		let top = source.get_screenTop();
		haxe_ui_core_Screen.get_instance().addComponent(subMenu);
		subMenu.syncComponentValidation();
		if(left + subMenu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_width()) {
			left = source.get_screenLeft() - subMenu.get_actualComponentWidth();
		}
		subMenu.set_left(left);
		subMenu.set_top(top);
		this.currentSubMenu = subMenu;
	}
	hideCurrentSubMenu() {
		if(this.currentSubMenu == null) {
			return;
		}
		let _g = 0;
		let _this = this.currentSubMenu;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) _g1[_g++].removeClass(":hover",true,true);
		(js_Boot.__cast(this.currentSubMenu._internalEvents , haxe_ui_containers_menus_MenuEvents)).hideCurrentSubMenu();
		haxe_ui_core_Screen.get_instance().removeComponent(this.currentSubMenu);
		this.currentSubMenu = null;
	}
	onHidden(event) {
		let _g = 0;
		let _this = this._menu;
		let _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) _g1[_g++].removeClass(":hover",true,true);
		this.hideCurrentSubMenu();
	}
	findRootMenu() {
		let root = null;
		let ref = this._menu;
		while(ref != null) {
			let events = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			if(events.parentMenu == null) {
				root = events._menu;
				break;
			}
			ref = events.parentMenu;
		}
		return root;
	}
}
$hxClasses["haxe.ui.containers.menus.MenuEvents"] = haxe_ui_containers_menus_MenuEvents;
haxe_ui_containers_menus_MenuEvents.__name__ = "haxe.ui.containers.menus.MenuEvents";
haxe_ui_containers_menus_MenuEvents.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers_menus_MenuEvents.prototype, {
	__class__: haxe_ui_containers_menus_MenuEvents
	,_menu: null
	,_currentItem: null
	,currentSubMenu: null
	,parentMenu: null
	,_over: null
});
class haxe_ui_containers_menus__$Menu_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(menu) {
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = true;
		super();
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
		this._hx_constructor(menu);
	}
	_hx_constructor(menu) {
		this._subMenus = new haxe_ds_ObjectMap();
		super._hx_constructor(menu);
		this._menu = menu;
	}
	addComponent(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			let menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			let item = new haxe_ui_containers_menus_MenuItem();
			item.set_text(child.get_text());
			item.set_icon(menu.get_icon());
			item.set_tooltip(child.get_tooltip());
			item.set_expandable(true);
			this._menu.addComponent(item);
			(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).parentMenu = this._menu;
			this._subMenus.set(item,menu);
			return child;
		}
		return null;
	}
	onComponentAdded(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu) || ((child) instanceof haxe_ui_containers_menus_MenuItem)) {
			this._menu.registerInternalEvents(null,true);
		}
	}
	findComponent(criteria,type,recursive,searchType) {
		let match = super.findComponent(criteria,type,recursive,searchType);
		if(match == null) {
			let menu = this._subMenus.iterator();
			while(menu.hasNext()) {
				let menu1 = menu.next();
				match = menu1.findComponent(criteria,type,recursive,searchType);
				if(menu1.matchesSearch(criteria,type,searchType)) {
					return menu1;
				} else {
					match = menu1.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
}
$hxClasses["haxe.ui.containers.menus._Menu.Builder"] = haxe_ui_containers_menus__$Menu_Builder;
haxe_ui_containers_menus__$Menu_Builder.__name__ = "haxe.ui.containers.menus._Menu.Builder";
haxe_ui_containers_menus__$Menu_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_menus__$Menu_Builder.prototype, {
	__class__: haxe_ui_containers_menus__$Menu_Builder
	,_menu: null
	,_subMenus: null
});
class haxe_ui_containers_menus_MenuBar extends haxe_ui_containers_HBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_menus__$MenuBar_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuBar_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_menuStyleNames() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_menus_MenuBar();
	}
}
$hxClasses["haxe.ui.containers.menus.MenuBar"] = haxe_ui_containers_menus_MenuBar;
haxe_ui_containers_menus_MenuBar.__name__ = "haxe.ui.containers.menus.MenuBar";
haxe_ui_containers_menus_MenuBar.__super__ = haxe_ui_containers_HBox;
Object.assign(haxe_ui_containers_menus_MenuBar.prototype, {
	__class__: haxe_ui_containers_menus_MenuBar
	,__properties__: Object.assign({}, haxe_ui_containers_HBox.prototype.__properties__, {get_menuStyleNames: "get_menuStyleNames"})
});
class haxe_ui_containers_menus__$MenuBar_Events extends haxe_ui_events_Events {
	constructor(menubar) {
		super(menubar);
		this._menubar = menubar;
	}
	register() {
		let _g = 0;
		let _g1 = (js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder))._buttons;
		while(_g < _g1.length) {
			let button = _g1[_g];
			++_g;
			if(!button.hasEvent("click",$bind(this,this.onButtonClick))) {
				button.registerEvent("click",$bind(this,this.onButtonClick));
			}
			if(!button.hasEvent("mouseover",$bind(this,this.onButtonOver))) {
				button.registerEvent("mouseover",$bind(this,this.onButtonOver));
			}
		}
	}
	unregister() {
		let _g = 0;
		let _g1 = (js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder))._buttons;
		while(_g < _g1.length) {
			let button = _g1[_g];
			++_g;
			button.unregisterEvent("click",$bind(this,this.onButtonClick));
			button.unregisterEvent("mouseover",$bind(this,this.onButtonOver));
		}
	}
	onCompleteButton(event) {
		(js_Boot.__cast(event.target , haxe_ui_components_Button)).unregisterEvent("mouseout",$bind(this,this.onCompleteButton));
		this.hideCurrentMenu();
	}
	onButtonClick(event) {
		let builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		let target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		let index = builder._buttons.indexOf(target);
		if(target.get_toggle() == false) {
			let newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
			newEvent.menu = builder._menus[index];
			this._menubar.dispatch(newEvent);
			target.registerEvent("mouseout",$bind(this,this.onCompleteButton));
			return;
		}
		if(target.get_selected() == true) {
			this.showMenu(index);
		} else if(this._currentButton != null) {
			(js_Boot.__cast(this._currentButton._internalEvents , haxe_ui_components_ButtonEvents)).lastMouseEvent = event;
			this.hideCurrentMenu();
		}
	}
	onButtonOver(event) {
		if(this._currentMenu == null) {
			return;
		}
		let builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		let index = builder._buttons.indexOf(js_Boot.__cast(event.target , haxe_ui_components_Button));
		if(builder._menus[index] != this._currentMenu) {
			this.showMenu(index);
		}
	}
	showMenu(index) {
		let builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		let menu = builder._menus[index];
		let hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		let target = builder._buttons[index];
		if(this._currentMenu == menu) {
			return;
		}
		let _g = 0;
		let _g1 = builder._buttons;
		while(_g < _g1.length) {
			let button = _g1[_g];
			++_g;
			if(button != target) {
				button.set_selected(false);
			}
		}
		target.set_selected(true);
		this.hideCurrentMenu();
		let _g2 = 0;
		let _g3 = builder._buttons;
		while(_g2 < _g3.length) {
			let button = _g3[_g2];
			++_g2;
			if(button.hasClass("menubar-button-no-children")) {
				button.swapClass("menubar-button-no-children-active","menubar-button-no-children");
			}
		}
		let rtl = false;
		if(hasChildren == true) {
			let componentOffset = target.getComponentOffset();
			let left = target.get_screenLeft() + componentOffset.x;
			let marginTop = 0;
			if(menu.get_style() != null && menu.get_style().marginTop != null) {
				marginTop = menu.get_style().marginTop;
			}
			let top = target.get_screenTop() + (target.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y + marginTop;
			menu.set_menuStyleNames(this._menubar.get_menuStyleNames());
			menu.addClasses([this._menubar.get_menuStyleNames(),"expanded"]);
			if(menu.findComponent("menu-filler",null,false) == null) {
				let filler = new haxe_ui_core_Component();
				filler.set_horizontalAlign("right");
				filler.set_includeInLayout(false);
				filler.addClass("menu-filler");
				filler.set_id("menu-filler");
				menu.addComponent(filler);
			}
			menu.show();
			haxe_ui_core_Screen.get_instance().addComponent(menu);
			menu.syncComponentValidation();
			if(left + menu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_width()) {
				left = target.get_screenLeft() - menu.get_actualComponentWidth() + target.get_actualComponentWidth();
				rtl = true;
			}
			menu.set_left(left);
			menu.set_top(top - haxe_ui_Toolkit.get_scaleY());
		}
		this._currentButton = target;
		this._currentMenu = menu;
		if(hasChildren == true) {
			let cx = menu.get_width() - this._currentButton.get_width();
			let filler = menu.findComponent("menu-filler",null,false);
			if(cx > 0 && filler != null) {
				++cx;
				filler.set_width(cx);
				if(rtl == false) {
					filler.set_left(menu.get_width() - cx);
				}
				filler.set_hidden(false);
			} else if(filler != null) {
				filler.set_hidden(true);
			}
			haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
			if(!this._currentMenu.hasEvent("menuselected",$bind(this,this.onMenuSelected))) {
				this._currentMenu.registerEvent("menuselected",$bind(this,this.onMenuSelected));
			}
		}
	}
	hideCurrentMenu() {
		if(this._currentMenu != null) {
			let _g = 0;
			let _g1 = (js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder))._buttons;
			while(_g < _g1.length) {
				let button = _g1[_g];
				++_g;
				if(button.hasClass("menubar-button-no-children-active")) {
					button.swapClass("menubar-button-no-children","menubar-button-no-children-active");
				}
			}
			this._currentMenu.unregisterEvent("menuselected",$bind(this,this.onMenuSelected));
			this._currentMenu.hide();
			this._currentButton.set_selected(false);
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
			haxe_ui_core_Screen.get_instance().removeComponent(this._currentMenu);
			this._currentButton = null;
			this._currentMenu = null;
		}
	}
	onScreenMouseDown(event) {
		let close = true;
		if(this._currentMenu.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else if(this._currentButton.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else {
			let ref = this._currentMenu;
			let refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			let refSubMenu = refEvents.currentSubMenu;
			while(refSubMenu != null) {
				if(refSubMenu.hitTest(event.screenX,event.screenY)) {
					close = false;
					break;
				}
				ref = refSubMenu;
				refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
				refSubMenu = refEvents.currentSubMenu;
			}
		}
		if(close) {
			this.hideCurrentMenu();
		}
	}
	onMenuSelected(event) {
		let newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
		newEvent.menu = event.menu;
		newEvent.menuItem = event.menuItem;
		this._menubar.dispatch(newEvent);
		this.hideCurrentMenu();
	}
}
$hxClasses["haxe.ui.containers.menus._MenuBar.Events"] = haxe_ui_containers_menus__$MenuBar_Events;
haxe_ui_containers_menus__$MenuBar_Events.__name__ = "haxe.ui.containers.menus._MenuBar.Events";
haxe_ui_containers_menus__$MenuBar_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers_menus__$MenuBar_Events.prototype, {
	__class__: haxe_ui_containers_menus__$MenuBar_Events
	,_menubar: null
	,_currentMenu: null
	,_currentButton: null
});
class haxe_ui_containers_menus__$MenuBar_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(menubar) {
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = true;
		super();
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
		this._hx_constructor(menubar);
	}
	_hx_constructor(menubar) {
		this._menus = [];
		this._buttons = [];
		super._hx_constructor(menubar);
		this._menubar = menubar;
	}
	create() {
	}
	destroy() {
	}
	addComponent(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			let menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			let button = new haxe_ui_components_Button();
			let hasChildren = (menu._children == null ? [] : menu._children).length > 0;
			if(hasChildren == true) {
				button.set_styleNames("menubar-button");
			} else {
				button.set_styleNames("menubar-button-no-children");
			}
			button.set_text(menu.get_text());
			button.set_icon(haxe_ui_util_Variant.fromString(menu.get_icon()));
			button.set_tooltip(menu.get_tooltip());
			button.set_toggle(hasChildren);
			haxe_ui_binding_BindingManager.get_instance().cloneBinding(child,button);
			this._buttons.push(button);
			this._menubar.addComponent(button);
			this._menubar.registerInternalEvents(null,true);
			this._menus.push(menu);
			return menu;
		}
		return null;
	}
	addComponentAt(child,index) {
		return null;
	}
	removeComponent(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	getComponentIndex(child) {
		return -1;
	}
	setComponentIndex(child,index) {
		return null;
	}
	getComponentAt(index) {
		return null;
	}
	findComponent(criteria,type,recursive,searchType) {
		let match = super.findComponent(criteria,type,recursive,searchType);
		if(match == null) {
			let _g = 0;
			let _g1 = this._menus;
			while(_g < _g1.length) {
				let menu = _g1[_g];
				++_g;
				match = menu.findComponent(criteria,type,recursive,searchType);
				if(menu.matchesSearch(criteria,type,searchType)) {
					return menu;
				} else {
					match = menu.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
}
$hxClasses["haxe.ui.containers.menus._MenuBar.Builder"] = haxe_ui_containers_menus__$MenuBar_Builder;
haxe_ui_containers_menus__$MenuBar_Builder.__name__ = "haxe.ui.containers.menus._MenuBar.Builder";
haxe_ui_containers_menus__$MenuBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_menus__$MenuBar_Builder.prototype, {
	__class__: haxe_ui_containers_menus__$MenuBar_Builder
	,_menubar: null
	,_buttons: null
	,_menus: null
});
class haxe_ui_containers_menus_MenuItem extends haxe_ui_containers_HBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_menus__$MenuItem_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuItem_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuItem_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers_menus__$MenuItem_IconBehaviour);
		this.behaviours.register("expandable",haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour);
	}
	get_shortcutText() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("shortcutText"));
	}
	set_shortcutText(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"shortcutText",value);
					return value;
				}
			}
		}
		this.behaviours.set("shortcutText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"shortcutText"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"shortcutText");
		return value;
	}
	get_expandable() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("expandable"));
	}
	set_expandable(value) {
		this.behaviours.set("expandable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"expandable"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"expandable");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_shortcutText() != null) {
			c.set_shortcutText(this.get_shortcutText());
		}
		c.set_expandable(this.get_expandable());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_menus_MenuItem();
	}
}
$hxClasses["haxe.ui.containers.menus.MenuItem"] = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuItem.__name__ = "haxe.ui.containers.menus.MenuItem";
haxe_ui_containers_menus_MenuItem.__super__ = haxe_ui_containers_HBox;
Object.assign(haxe_ui_containers_menus_MenuItem.prototype, {
	__class__: haxe_ui_containers_menus_MenuItem
	,__properties__: Object.assign({}, haxe_ui_containers_HBox.prototype.__properties__, {set_expandable: "set_expandable",get_expandable: "get_expandable",set_shortcutText: "set_shortcutText",get_shortcutText: "get_shortcutText"})
});
class haxe_ui_containers_menus_MenuCheckBox extends haxe_ui_containers_menus_MenuItem {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour);
		this.behaviours.register("selected",haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour);
	}
	get_selected() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	set_selected(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_menus_MenuCheckBox();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuCheckBox_Builder;
	}
}
$hxClasses["haxe.ui.containers.menus.MenuCheckBox"] = haxe_ui_containers_menus_MenuCheckBox;
haxe_ui_containers_menus_MenuCheckBox.__name__ = "haxe.ui.containers.menus.MenuCheckBox";
haxe_ui_containers_menus_MenuCheckBox.__super__ = haxe_ui_containers_menus_MenuItem;
Object.assign(haxe_ui_containers_menus_MenuCheckBox.prototype, {
	__class__: haxe_ui_containers_menus_MenuCheckBox
	,__properties__: Object.assign({}, haxe_ui_containers_menus_MenuItem.prototype.__properties__, {set_selected: "set_selected",get_selected: "get_selected"})
});
class haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let checkbox = this._component.findComponent(null,haxe_ui_components_CheckBox,false);
		if(checkbox == null) {
			checkbox = new haxe_ui_components_CheckBox();
			checkbox.set_styleNames("menuitem-checkbox");
			checkbox.scriptAccess = false;
			this._component.addComponent(checkbox);
		}
		checkbox.set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.TextBehaviour"] = haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuCheckBox.TextBehaviour";
haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuCheckBox_TextBehaviour
});
class haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let label = this._component.findComponent("menuitem-shortcut-label",null,false);
		if(label != null) {
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
}
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuCheckBox.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuCheckBox_ShortcutTextBehaviour
});
class haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let checkbox = this._component.findComponent(null,haxe_ui_components_CheckBox,false);
		if(checkbox == null) {
			checkbox = new haxe_ui_components_CheckBox();
			checkbox.set_styleNames("menuitem-checkbox");
			checkbox.scriptAccess = false;
			this._component.addComponent(checkbox);
		}
		checkbox.set_selected(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.SelectedBehaviour"] = haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour;
haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour.__name__ = "haxe.ui.containers.menus._MenuCheckBox.SelectedBehaviour";
haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuCheckBox_SelectedBehaviour
});
class haxe_ui_containers_menus__$MenuCheckBox_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(component) {
		super(component);
	}
	create() {
		this._checkbox = new haxe_ui_components_CheckBox();
		this._checkbox.set_styleNames("menuitem-checkbox");
		this._checkbox.scriptAccess = false;
		this._component.addComponent(this._checkbox);
		let label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.scriptAccess = false;
		this._component.addComponent(label);
	}
}
$hxClasses["haxe.ui.containers.menus._MenuCheckBox.Builder"] = haxe_ui_containers_menus__$MenuCheckBox_Builder;
haxe_ui_containers_menus__$MenuCheckBox_Builder.__name__ = "haxe.ui.containers.menus._MenuCheckBox.Builder";
haxe_ui_containers_menus__$MenuCheckBox_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_menus__$MenuCheckBox_Builder.prototype, {
	__class__: haxe_ui_containers_menus__$MenuCheckBox_Builder
	,_checkbox: null
});
class haxe_ui_containers_menus__$MenuItem_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		this._component.findComponent("menuitem-label",null,true).set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers.menus._MenuItem.TextBehaviour"] = haxe_ui_containers_menus__$MenuItem_TextBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.TextBehaviour";
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuItem_TextBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuItem_TextBehaviour
});
class haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let label = this._component.findComponent("menuitem-shortcut-label",null,true);
		if(label != null) {
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
}
$hxClasses["haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour
});
class haxe_ui_containers_menus__$MenuItem_IconBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		let icon = this._component.findComponent("menuitem-icon",null,true);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.scriptAccess = false;
			icon.set_id("menuitem-icon");
			icon.addClass("menuitem-icon");
			this._component.addComponentAt(icon,0);
		}
		icon.set_resource(this._value);
	}
}
$hxClasses["haxe.ui.containers.menus._MenuItem.IconBehaviour"] = haxe_ui_containers_menus__$MenuItem_IconBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.IconBehaviour";
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuItem_IconBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuItem_IconBehaviour
});
class haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let image = this._component.findComponent("menuitem-expandable");
		if(image == null && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			image = new haxe_ui_components_Image();
			image.set_id("menuitem-expandable");
			image.set_styleNames("menuitem-expandable");
			image.scriptAccess = false;
			this._component.addComponent(image);
			let _this = this._component;
			_this.invalidateComponent("style");
			_this._style = null;
		} else if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeComponent(image);
		}
	}
}
$hxClasses["haxe.ui.containers.menus._MenuItem.ExpandableBehaviour"] = haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ExpandableBehaviour";
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour
});
class haxe_ui_containers_menus__$MenuItem_Events extends haxe_ui_events_Events {
	constructor(target) {
		super(target);
	}
	register() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
	}
	unregister() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
	}
	onMouseOver(event) {
		this._target.addClass(":hover",true,true);
	}
	onMouseOut(event) {
		this._target.removeClass(":hover",true,true);
	}
}
$hxClasses["haxe.ui.containers.menus._MenuItem.Events"] = haxe_ui_containers_menus__$MenuItem_Events;
haxe_ui_containers_menus__$MenuItem_Events.__name__ = "haxe.ui.containers.menus._MenuItem.Events";
haxe_ui_containers_menus__$MenuItem_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers_menus__$MenuItem_Events.prototype, {
	__class__: haxe_ui_containers_menus__$MenuItem_Events
});
class haxe_ui_containers_menus__$MenuItem_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(component) {
		super(component);
	}
	create() {
		super.create();
		let box = new haxe_ui_containers_Box();
		box.set_percentWidth(100);
		box.set_verticalAlign("center");
		let label = new haxe_ui_components_Label();
		label.set_id("menuitem-label");
		label.set_styleNames("menuitem-label");
		label.scriptAccess = false;
		box.addComponent(label);
		let label1 = new haxe_ui_components_Label();
		label1.set_id("menuitem-shortcut-label");
		label1.set_styleNames("menuitem-shortcut-label");
		label1.scriptAccess = false;
		box.addComponent(label1);
		this._component.addComponent(box);
	}
}
$hxClasses["haxe.ui.containers.menus._MenuItem.Builder"] = haxe_ui_containers_menus__$MenuItem_Builder;
haxe_ui_containers_menus__$MenuItem_Builder.__name__ = "haxe.ui.containers.menus._MenuItem.Builder";
haxe_ui_containers_menus__$MenuItem_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_menus__$MenuItem_Builder.prototype, {
	__class__: haxe_ui_containers_menus__$MenuItem_Builder
});
class haxe_ui_containers_menus_MenuOptionBox extends haxe_ui_containers_menus_MenuItem {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("componentGroup",haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour);
		this.behaviours.register("selected",haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour);
	}
	get_componentGroup() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	set_componentGroup(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"componentGroup",value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"componentGroup"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"componentGroup");
		return value;
	}
	get_selected() {
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	set_selected(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"selected");
		return value;
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_menus_MenuOptionBox();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuOptionBox_Builder;
	}
}
$hxClasses["haxe.ui.containers.menus.MenuOptionBox"] = haxe_ui_containers_menus_MenuOptionBox;
haxe_ui_containers_menus_MenuOptionBox.__name__ = "haxe.ui.containers.menus.MenuOptionBox";
haxe_ui_containers_menus_MenuOptionBox.__super__ = haxe_ui_containers_menus_MenuItem;
Object.assign(haxe_ui_containers_menus_MenuOptionBox.prototype, {
	__class__: haxe_ui_containers_menus_MenuOptionBox
	,__properties__: Object.assign({}, haxe_ui_containers_menus_MenuItem.prototype.__properties__, {set_selected: "set_selected",get_selected: "get_selected",set_componentGroup: "set_componentGroup",get_componentGroup: "get_componentGroup"})
});
class haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		if(optionbox == null) {
			optionbox = new haxe_ui_components_OptionBox();
			optionbox.set_styleNames("menuitem-optionbox");
			optionbox.scriptAccess = false;
			this._component.addComponent(optionbox);
		}
		optionbox.set_componentGroup(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.GroupBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.GroupBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuOptionBox_GroupBehaviour
});
class haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let label = this._component.findComponent("menuitem-shortcut-label",null,false);
		if(label != null) {
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
}
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuOptionBox_ShortcutTextBehaviour
});
class haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		if(optionbox == null) {
			optionbox = new haxe_ui_components_OptionBox();
			optionbox.set_styleNames("menuitem-optionbox");
			optionbox.scriptAccess = false;
			this._component.addComponent(optionbox);
		}
		optionbox.set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.TextBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.TextBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuOptionBox_TextBehaviour
});
class haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		let optionbox = this._component.findComponent(null,haxe_ui_components_OptionBox,false);
		if(optionbox == null) {
			optionbox = new haxe_ui_components_OptionBox();
			optionbox.set_styleNames("menuitem-optionbox");
			optionbox.scriptAccess = false;
			this._component.addComponent(optionbox);
		}
		optionbox.set_selected(haxe_ui_util_Variant.toBool(this._value));
	}
}
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.SelectedBehaviour"] = haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour;
haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour.__name__ = "haxe.ui.containers.menus._MenuOptionBox.SelectedBehaviour";
haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour.prototype, {
	__class__: haxe_ui_containers_menus__$MenuOptionBox_SelectedBehaviour
});
class haxe_ui_containers_menus__$MenuOptionBox_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(component) {
		super(component);
	}
	create() {
		this._optionbox = new haxe_ui_components_OptionBox();
		this._optionbox.set_styleNames("menuitem-optionbox");
		this._optionbox.scriptAccess = false;
		this._component.addComponent(this._optionbox);
		let label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.scriptAccess = false;
		this._component.addComponent(label);
	}
}
$hxClasses["haxe.ui.containers.menus._MenuOptionBox.Builder"] = haxe_ui_containers_menus__$MenuOptionBox_Builder;
haxe_ui_containers_menus__$MenuOptionBox_Builder.__name__ = "haxe.ui.containers.menus._MenuOptionBox.Builder";
haxe_ui_containers_menus__$MenuOptionBox_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_menus__$MenuOptionBox_Builder.prototype, {
	__class__: haxe_ui_containers_menus__$MenuOptionBox_Builder
	,_optionbox: null
});
class haxe_ui_containers_menus_MenuSeparator extends haxe_ui_core_Component {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_menus_MenuSeparator();
	}
}
$hxClasses["haxe.ui.containers.menus.MenuSeparator"] = haxe_ui_containers_menus_MenuSeparator;
haxe_ui_containers_menus_MenuSeparator.__name__ = "haxe.ui.containers.menus.MenuSeparator";
haxe_ui_containers_menus_MenuSeparator.__super__ = haxe_ui_core_Component;
Object.assign(haxe_ui_containers_menus_MenuSeparator.prototype, {
	__class__: haxe_ui_containers_menus_MenuSeparator
});
class haxe_ui_containers_properties_Property extends haxe_ui_containers_HBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._compositeBuilderClass = haxe_ui_containers_properties_PropertyBuilder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("label",haxe_ui_containers_properties__$Property_LabelBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("text"));
		this.behaviours.register("dataSource",haxe_ui_containers_properties__$Property_DataSourceBehaviour);
		this.behaviours.register("value",haxe_ui_containers_properties__$Property_PropertyValueBehaviour);
	}
	get_label() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("label"));
	}
	set_label(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"label",value);
					return value;
				}
			}
		}
		this.behaviours.set("label",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"label"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"label");
		return value;
	}
	get_type() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("type"));
	}
	set_type(value) {
		let _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_binding_BindingManager.get_instance().addLanguageBinding(this,"type",value);
					return value;
				}
			}
		}
		this.behaviours.set("type",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"type"));
		haxe_ui_binding_BindingManager.get_instance().componentPropChanged(this,"type");
		return value;
	}
	get_dataSource() {
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if(this.get_label() != null) {
			c.set_label(this.get_label());
		}
		if(this.get_type() != null) {
			c.set_type(this.get_type());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_properties_Property();
	}
}
$hxClasses["haxe.ui.containers.properties.Property"] = haxe_ui_containers_properties_Property;
haxe_ui_containers_properties_Property.__name__ = "haxe.ui.containers.properties.Property";
haxe_ui_containers_properties_Property.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_properties_Property.__super__ = haxe_ui_containers_HBox;
Object.assign(haxe_ui_containers_properties_Property.prototype, {
	__class__: haxe_ui_containers_properties_Property
	,__properties__: Object.assign({}, haxe_ui_containers_HBox.prototype.__properties__, {get_dataSource: "get_dataSource",set_type: "set_type",get_type: "get_type",set_label: "set_label",get_label: "get_label"})
});
class haxe_ui_containers_properties__$Property_LabelBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(property) {
		super(property);
		this._property = property;
	}
	set(value) {
		super.set(value);
		let builder = js_Boot.__cast(this._property._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder);
		if(builder.label != null) {
			builder.label.set_text(haxe_ui_util_Variant.toString(value));
		}
	}
}
$hxClasses["haxe.ui.containers.properties._Property.LabelBehaviour"] = haxe_ui_containers_properties__$Property_LabelBehaviour;
haxe_ui_containers_properties__$Property_LabelBehaviour.__name__ = "haxe.ui.containers.properties._Property.LabelBehaviour";
haxe_ui_containers_properties__$Property_LabelBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers_properties__$Property_LabelBehaviour.prototype, {
	__class__: haxe_ui_containers_properties__$Property_LabelBehaviour
	,_property: null
});
class haxe_ui_containers_properties__$Property_DataSourceBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(property) {
		super(property);
		this._property = property;
	}
	get() {
		if(this._value == null) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
		}
		return this._value;
	}
	set(value) {
		super.set(value);
		let builder = js_Boot.__cast(this._property._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder);
		if(builder.editor != null && ((builder.editor) instanceof haxe_ui_components_DropDown)) {
			(js_Boot.__cast(builder.editor , haxe_ui_components_DropDown)).set_dataSource(haxe_ui_util_Variant.toDataSource(value));
		}
	}
}
$hxClasses["haxe.ui.containers.properties._Property.DataSourceBehaviour"] = haxe_ui_containers_properties__$Property_DataSourceBehaviour;
haxe_ui_containers_properties__$Property_DataSourceBehaviour.__name__ = "haxe.ui.containers.properties._Property.DataSourceBehaviour";
haxe_ui_containers_properties__$Property_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_containers_properties__$Property_DataSourceBehaviour.prototype, {
	__class__: haxe_ui_containers_properties__$Property_DataSourceBehaviour
	,_property: null
});
class haxe_ui_core_ComponentValueBehaviour extends haxe_ui_behaviours_ValueBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this._component.set_text(haxe_ui_util_Variant.toString(value));
	}
	get() {
		return this._value;
	}
	getDynamic() {
		return haxe_ui_util_Variant.toDynamic(this._value);
	}
}
$hxClasses["haxe.ui.core.ComponentValueBehaviour"] = haxe_ui_core_ComponentValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.__name__ = "haxe.ui.core.ComponentValueBehaviour";
haxe_ui_core_ComponentValueBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
Object.assign(haxe_ui_core_ComponentValueBehaviour.prototype, {
	__class__: haxe_ui_core_ComponentValueBehaviour
});
class haxe_ui_containers_properties__$Property_PropertyValueBehaviour extends haxe_ui_core_ComponentValueBehaviour {
	constructor(property) {
		super(property);
		this._property = property;
	}
	set(value) {
		super.set(value);
		let builder = js_Boot.__cast(this._property._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder);
		if(builder.editor != null) {
			builder.editor.set_value(haxe_ui_util_Variant.toDynamic(value));
		}
	}
	get() {
		let builder = js_Boot.__cast(this._property._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder);
		if(builder.editor != null) {
			return builder.editor.get_value();
		}
		return null;
	}
	getDynamic() {
		let builder = js_Boot.__cast(this._property._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder);
		if(builder.editor != null) {
			return builder.editor.get_value();
		}
		return null;
	}
}
$hxClasses["haxe.ui.containers.properties._Property.PropertyValueBehaviour"] = haxe_ui_containers_properties__$Property_PropertyValueBehaviour;
haxe_ui_containers_properties__$Property_PropertyValueBehaviour.__name__ = "haxe.ui.containers.properties._Property.PropertyValueBehaviour";
haxe_ui_containers_properties__$Property_PropertyValueBehaviour.__super__ = haxe_ui_core_ComponentValueBehaviour;
Object.assign(haxe_ui_containers_properties__$Property_PropertyValueBehaviour.prototype, {
	__class__: haxe_ui_containers_properties__$Property_PropertyValueBehaviour
	,_property: null
});
class haxe_ui_containers_properties_PropertyBuilder extends haxe_ui_core_CompositeBuilder {
	constructor(component) {
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = true;
		super();
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
		this._hx_constructor(component);
	}
	_hx_constructor(component) {
		this.label = null;
		this.editor = null;
		super._hx_constructor(component);
	}
}
$hxClasses["haxe.ui.containers.properties.PropertyBuilder"] = haxe_ui_containers_properties_PropertyBuilder;
haxe_ui_containers_properties_PropertyBuilder.__name__ = "haxe.ui.containers.properties.PropertyBuilder";
haxe_ui_containers_properties_PropertyBuilder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_properties_PropertyBuilder.prototype, {
	__class__: haxe_ui_containers_properties_PropertyBuilder
	,editor: null
	,label: null
});
class haxe_ui_containers_properties_PropertyGrid extends haxe_ui_containers_ScrollView {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("popupStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	get_popupStyleNames() {
		return haxe_ui_util_Variant.toString(this.behaviours.get("popupStyleNames"));
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_properties_PropertyGrid();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_properties__$PropertyGrid_Events;
		this._compositeBuilderClass = haxe_ui_containers_properties__$PropertyGrid_Builder;
	}
}
$hxClasses["haxe.ui.containers.properties.PropertyGrid"] = haxe_ui_containers_properties_PropertyGrid;
haxe_ui_containers_properties_PropertyGrid.__name__ = "haxe.ui.containers.properties.PropertyGrid";
haxe_ui_containers_properties_PropertyGrid.__super__ = haxe_ui_containers_ScrollView;
Object.assign(haxe_ui_containers_properties_PropertyGrid.prototype, {
	__class__: haxe_ui_containers_properties_PropertyGrid
	,__properties__: Object.assign({}, haxe_ui_containers_ScrollView.prototype.__properties__, {get_popupStyleNames: "get_popupStyleNames"})
});
class haxe_ui_containers_properties__$PropertyGrid_Events extends haxe_ui_containers_ScrollViewEvents {
	constructor(scrollview) {
		super(scrollview);
	}
}
$hxClasses["haxe.ui.containers.properties._PropertyGrid.Events"] = haxe_ui_containers_properties__$PropertyGrid_Events;
haxe_ui_containers_properties__$PropertyGrid_Events.__name__ = "haxe.ui.containers.properties._PropertyGrid.Events";
haxe_ui_containers_properties__$PropertyGrid_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
Object.assign(haxe_ui_containers_properties__$PropertyGrid_Events.prototype, {
	__class__: haxe_ui_containers_properties__$PropertyGrid_Events
});
class haxe_ui_containers_properties__$PropertyGrid_Builder extends haxe_ui_containers_ScrollViewBuilder {
	constructor(scrollview) {
		super(scrollview);
	}
}
$hxClasses["haxe.ui.containers.properties._PropertyGrid.Builder"] = haxe_ui_containers_properties__$PropertyGrid_Builder;
haxe_ui_containers_properties__$PropertyGrid_Builder.__name__ = "haxe.ui.containers.properties._PropertyGrid.Builder";
haxe_ui_containers_properties__$PropertyGrid_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
Object.assign(haxe_ui_containers_properties__$PropertyGrid_Builder.prototype, {
	__class__: haxe_ui_containers_properties__$PropertyGrid_Builder
});
class haxe_ui_containers_properties_PropertyGroup extends haxe_ui_containers_VBox {
	constructor() {
		super();
	}
	registerComposite() {
		super.registerComposite();
		this._internalEventsClass = haxe_ui_containers_properties__$PropertyGroup_Events;
		this._compositeBuilderClass = haxe_ui_containers_properties__$PropertyGroup_Builder;
	}
	registerBehaviours() {
		super.registerBehaviours();
		this.behaviours.register("text",haxe_ui_containers_properties__$PropertyGroup_TextBehaviour);
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_containers_properties_PropertyGroup();
	}
}
$hxClasses["haxe.ui.containers.properties.PropertyGroup"] = haxe_ui_containers_properties_PropertyGroup;
haxe_ui_containers_properties_PropertyGroup.__name__ = "haxe.ui.containers.properties.PropertyGroup";
haxe_ui_containers_properties_PropertyGroup.__super__ = haxe_ui_containers_VBox;
Object.assign(haxe_ui_containers_properties_PropertyGroup.prototype, {
	__class__: haxe_ui_containers_properties_PropertyGroup
});
class haxe_ui_containers_properties__$PropertyGroup_TextBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		this._component.findComponent("property-group-header-label").set_text(haxe_ui_util_Variant.toString(this._value));
	}
}
$hxClasses["haxe.ui.containers.properties._PropertyGroup.TextBehaviour"] = haxe_ui_containers_properties__$PropertyGroup_TextBehaviour;
haxe_ui_containers_properties__$PropertyGroup_TextBehaviour.__name__ = "haxe.ui.containers.properties._PropertyGroup.TextBehaviour";
haxe_ui_containers_properties__$PropertyGroup_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_containers_properties__$PropertyGroup_TextBehaviour.prototype, {
	__class__: haxe_ui_containers_properties__$PropertyGroup_TextBehaviour
});
class haxe_ui_containers_properties__$PropertyGroup_Events extends haxe_ui_events_Events {
	constructor(target) {
		super(target);
	}
	register() {
		let header = this._target.findComponent("property-group-header",haxe_ui_core_Component);
		if(header.hasEvent("click") == false) {
			header.registerEvent("click",$bind(this,this.onHeaderClicked));
		}
	}
	unregister() {
		this._target.findComponent("property-group-header",haxe_ui_core_Component).unregisterEvent("click",$bind(this,this.onHeaderClicked));
	}
	onHeaderClicked(event) {
		let header = this._target.findComponent("property-group-header",haxe_ui_core_Component);
		let contents = this._target.findComponent("property-group-contents",haxe_ui_core_Component);
		if(header.hasClass(":expanded")) {
			header.swapClass(":collapsed",":expanded",true,true);
			contents.set_hidden(true);
		} else {
			header.swapClass(":expanded",":collapsed",true,true);
			contents.set_hidden(false);
		}
	}
}
$hxClasses["haxe.ui.containers.properties._PropertyGroup.Events"] = haxe_ui_containers_properties__$PropertyGroup_Events;
haxe_ui_containers_properties__$PropertyGroup_Events.__name__ = "haxe.ui.containers.properties._PropertyGroup.Events";
haxe_ui_containers_properties__$PropertyGroup_Events.__super__ = haxe_ui_events_Events;
Object.assign(haxe_ui_containers_properties__$PropertyGroup_Events.prototype, {
	__class__: haxe_ui_containers_properties__$PropertyGroup_Events
});
class haxe_ui_containers_properties__$PropertyGroup_Builder extends haxe_ui_core_CompositeBuilder {
	constructor(propertyGroup) {
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = true;
		super();
		haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
		this._hx_constructor(propertyGroup);
	}
	_hx_constructor(propertyGroup) {
		this._editorMap = new haxe_ds_ObjectMap();
		super._hx_constructor(propertyGroup);
		this._propertyGroup = propertyGroup;
	}
	onReady() {
		let propGrid = this._component.findAncestor(null,haxe_ui_containers_properties_PropertyGrid);
		let _g = 0;
		let _g1 = this._propertyGroupContents.findComponents(null,haxe_ui_components_DropDown);
		while(_g < _g1.length) _g1[_g++].set_handlerStyleNames(propGrid.get_popupStyleNames());
	}
	create() {
		this._propertyGroupHeader = new haxe_ui_containers_HBox();
		this._propertyGroupHeader.scriptAccess = false;
		this._propertyGroupHeader.addClass("property-group-header");
		this._propertyGroupHeader.addClass(":expanded");
		this._propertyGroupHeader.set_id("property-group-header");
		let image = new haxe_ui_components_Image();
		image.addClass("property-group-header-icon");
		image.scriptAccess = false;
		this._propertyGroupHeader.addComponent(image);
		let label = new haxe_ui_components_Label();
		label.addClass("property-group-header-label");
		label.set_id("property-group-header-label");
		label.scriptAccess = false;
		this._propertyGroupHeader.addComponent(label);
		this._propertyGroup.addComponent(this._propertyGroupHeader);
		this._propertyGroupContents = new haxe_ui_containers_Grid();
		this._propertyGroupContents.scriptAccess = false;
		this._propertyGroupContents.addClass("property-group-contents");
		this._propertyGroupContents.set_id("property-group-contents");
		this._propertyGroup.addComponent(this._propertyGroupContents);
	}
	addComponent(child) {
		if(((child) instanceof haxe_ui_containers_properties_Property)) {
			let prop = js_Boot.__cast(child , haxe_ui_containers_properties_Property);
			let labelContainer = new haxe_ui_containers_Box();
			labelContainer.scriptAccess = false;
			labelContainer.addClass("property-group-item-label-container");
			this._propertyGroupContents.addComponent(labelContainer);
			let label = new haxe_ui_components_Label();
			label.scriptAccess = false;
			label.set_text(prop.get_label());
			label.addClass("property-group-item-label");
			labelContainer.addComponent(label);
			(js_Boot.__cast(prop._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder)).label = label;
			let editorContainer = new haxe_ui_containers_Box();
			editorContainer.scriptAccess = false;
			editorContainer.addClass("property-group-item-editor-container");
			this._propertyGroupContents.addComponent(editorContainer);
			let editor = this.buildEditor(prop);
			editor.scriptAccess = false;
			editor.set_id(child.get_id());
			editor.addClass("property-group-item-editor");
			editorContainer.addComponent(editor);
			editor.registerEvent("change",$bind(this,this.onPropertyEditorChange));
			(js_Boot.__cast(prop._compositeBuilder , haxe_ui_containers_properties_PropertyBuilder)).editor = editor;
			this._propertyGroup.registerInternalEvents(haxe_ui_containers_properties__$PropertyGroup_Events,true);
			this._editorMap.set(editor,prop);
			return editor;
		}
		return null;
	}
	onPropertyEditorChange(event) {
		let newEvent = new haxe_ui_events_UIEvent("change");
		newEvent.target = event.target;
		newEvent.data = event.data;
		let prop = this._editorMap.h[event.target.__id__];
		if(prop != null) {
			prop.dispatch(newEvent);
		}
		this._component.dispatch(newEvent);
		this._component.findAncestor(null,haxe_ui_containers_properties_PropertyGrid).dispatch(newEvent);
	}
	buildEditor(property) {
		let c = null;
		switch(property.get_type()) {
		case "boolean":
			c = new haxe_ui_components_CheckBox();
			c.set_value(property.get_value());
			break;
		case "date":
			c = new haxe_ui_components_DropDown();
			(js_Boot.__cast(c , haxe_ui_components_DropDown)).set_type("date");
			break;
		case "int":
			c = new haxe_ui_components_NumberStepper();
			c.set_value(property.get_value());
			break;
		case "list":
			c = new haxe_ui_components_DropDown();
			(js_Boot.__cast(c , haxe_ui_components_DropDown)).set_dataSource(property.get_dataSource());
			let indexToSelect = 0;
			let _g = 0;
			let _g1 = property.get_dataSource().get_size();
			while(_g < _g1) {
				let i = _g++;
				if(property.get_dataSource().get(i).value == property.get_value()) {
					indexToSelect = i;
					break;
				}
			}
			(js_Boot.__cast(c , haxe_ui_components_DropDown)).set_selectedIndex(indexToSelect);
			break;
		case "text":
			c = new haxe_ui_components_TextField();
			c.set_value(property.get_value());
			break;
		default:
			c = new haxe_ui_components_TextField();
			c.set_value(property.get_value());
		}
		return c;
	}
}
$hxClasses["haxe.ui.containers.properties._PropertyGroup.Builder"] = haxe_ui_containers_properties__$PropertyGroup_Builder;
haxe_ui_containers_properties__$PropertyGroup_Builder.__name__ = "haxe.ui.containers.properties._PropertyGroup.Builder";
haxe_ui_containers_properties__$PropertyGroup_Builder.__super__ = haxe_ui_core_CompositeBuilder;
Object.assign(haxe_ui_containers_properties__$PropertyGroup_Builder.prototype, {
	__class__: haxe_ui_containers_properties__$PropertyGroup_Builder
	,_propertyGroup: null
	,_propertyGroupHeader: null
	,_propertyGroupContents: null
	,_editorMap: null
});
class haxe_ui_core_BasicItemRenderer extends haxe_ui_core_ItemRenderer {
	constructor() {
		super();
		this.set_percentWidth(100);
		let hbox = new haxe_ui_containers_HBox();
		hbox.set_percentWidth(100);
		let icon = new haxe_ui_components_Image();
		icon.set_id("icon");
		icon.addClass("basic-renderer-icon");
		icon.set_verticalAlign("center");
		icon.hide();
		hbox.addComponent(icon);
		let label = new haxe_ui_components_Label();
		label.set_id("text");
		label.addClass("basic-renderer-label");
		label.set_percentWidth(100);
		label.set_verticalAlign("center");
		label.hide();
		hbox.addComponent(label);
		this.addComponent(hbox);
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_core_BasicItemRenderer();
	}
}
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = "haxe.ui.core.BasicItemRenderer";
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
Object.assign(haxe_ui_core_BasicItemRenderer.prototype, {
	__class__: haxe_ui_core_BasicItemRenderer
});
class haxe_ui_core_ComponentClassMap {
	constructor() {
		this._map = new haxe_ds_StringMap();
	}
	registerClassName(alias,className) {
		this._map.h[alias] = className;
	}
	static get_instance() {
		if(haxe_ui_core_ComponentClassMap._instance == null) {
			haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
		}
		return haxe_ui_core_ComponentClassMap._instance;
	}
	static register(alias,className) {
		haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
	}
}
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_core_ComponentClassMap.prototype, {
	__class__: haxe_ui_core_ComponentClassMap
	,_map: null
});
class haxe_ui_core_ComponentTextBehaviour extends haxe_ui_behaviours_DefaultBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		super.set(value);
	}
}
$hxClasses["haxe.ui.core.ComponentTextBehaviour"] = haxe_ui_core_ComponentTextBehaviour;
haxe_ui_core_ComponentTextBehaviour.__name__ = "haxe.ui.core.ComponentTextBehaviour";
haxe_ui_core_ComponentTextBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
Object.assign(haxe_ui_core_ComponentTextBehaviour.prototype, {
	__class__: haxe_ui_core_ComponentTextBehaviour
});
class haxe_ui_core_ComponentDisabledBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	set(value) {
		if(this._component.get_isReady() == false) {
			this._value = value;
		}
		super.set(value);
	}
	get() {
		return haxe_ui_util_Variant.fromBool(this._component.hasClass(":disabled"));
	}
	validateData() {
		this._component.disableInteractivity(haxe_ui_util_Variant.toBool(this._value),true,true);
	}
}
$hxClasses["haxe.ui.core.ComponentDisabledBehaviour"] = haxe_ui_core_ComponentDisabledBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.__name__ = "haxe.ui.core.ComponentDisabledBehaviour";
haxe_ui_core_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_core_ComponentDisabledBehaviour.prototype, {
	__class__: haxe_ui_core_ComponentDisabledBehaviour
});
class haxe_ui_core_ComponentToolTipBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : haxe_ui_util_Variant.toDynamic(this._value), renderer : this._component.get_tooltipRenderer()});
		}
	}
	setDynamic(value) {
		if(value == null) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : value, renderer : this._component.get_tooltipRenderer()});
		}
	}
	getDynamic() {
		let options = haxe_ui_tooltips_ToolTipManager.get_instance().getTooltipOptions(this._component);
		if(options == null) {
			return null;
		}
		return options.tipData;
	}
}
$hxClasses["haxe.ui.core.ComponentToolTipBehaviour"] = haxe_ui_core_ComponentToolTipBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.__name__ = "haxe.ui.core.ComponentToolTipBehaviour";
haxe_ui_core_ComponentToolTipBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_core_ComponentToolTipBehaviour.prototype, {
	__class__: haxe_ui_core_ComponentToolTipBehaviour
});
class haxe_ui_core_ComponentToolTipRendererBehaviour extends haxe_ui_behaviours_DataBehaviour {
	constructor(component) {
		super(component);
	}
	validateData() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,null);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,haxe_ui_util_Variant.toComponent(this._value));
		}
	}
}
$hxClasses["haxe.ui.core.ComponentToolTipRendererBehaviour"] = haxe_ui_core_ComponentToolTipRendererBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.__name__ = "haxe.ui.core.ComponentToolTipRendererBehaviour";
haxe_ui_core_ComponentToolTipRendererBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
Object.assign(haxe_ui_core_ComponentToolTipRendererBehaviour.prototype, {
	__class__: haxe_ui_core_ComponentToolTipRendererBehaviour
});
class haxe_ui_core_ImageDisplay extends haxe_ui_backend_ImageDisplayImpl {
	constructor() {
		haxe_ui_backend_ImageSurface._hx_skip_constructor = true;
		super();
		haxe_ui_backend_ImageSurface._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._isValidating = false;
		this._isAllInvalid = false;
		this._invalidationFlags = new haxe_ds_StringMap();
		super._hx_constructor();
	}
	set_left(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	set_top(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	set_imageWidth(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	get_imageWidth() {
		return this._imageWidth;
	}
	set_imageHeight(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	get_imageHeight() {
		return this._imageHeight;
	}
	set_imageInfo(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	get_imageClipRect() {
		return this._imageClipRect;
	}
	set_imageClipRect(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	isComponentInvalid(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			let value_length = Object.keys(this._invalidationFlags.h).length;
			while(0 < value_length) return true;
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	invalidateComponent(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		}
	}
	validateComponent() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		let flag_keys = Object.keys(this._invalidationFlags.h);
		let flag_length = flag_keys.length;
		let flag_current = 0;
		while(flag_current < flag_length) {
			let flag = flag_keys[flag_current++];
			let _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	handleValidate() {
		let dataInvalid = this.isComponentInvalid("data");
		let positionInvalid = this.isComponentInvalid("position");
		let displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
}
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
Object.assign(haxe_ui_core_ImageDisplay.prototype, {
	__class__: haxe_ui_core_ImageDisplay
	,_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,__properties__: {set_imageClipRect: "set_imageClipRect",get_imageClipRect: "get_imageClipRect",set_imageInfo: "set_imageInfo",set_imageHeight: "set_imageHeight",get_imageHeight: "get_imageHeight",set_imageWidth: "set_imageWidth",get_imageWidth: "get_imageWidth",set_top: "set_top",set_left: "set_left"}
});
class haxe_ui_core_LayoutClassMap {
	constructor() {
		this._map = new haxe_ds_StringMap();
	}
	registerClassName(alias,className) {
		this._map.h[alias] = className;
	}
	static get_instance() {
		if(haxe_ui_core_LayoutClassMap._instance == null) {
			haxe_ui_core_LayoutClassMap._instance = new haxe_ui_core_LayoutClassMap();
		}
		return haxe_ui_core_LayoutClassMap._instance;
	}
	static register(alias,className) {
		haxe_ui_core_LayoutClassMap.get_instance().registerClassName(StringTools.replace(alias,"layout",""),className);
		haxe_ui_core_LayoutClassMap.get_instance().registerClassName(alias,className);
	}
}
$hxClasses["haxe.ui.core.LayoutClassMap"] = haxe_ui_core_LayoutClassMap;
haxe_ui_core_LayoutClassMap.__name__ = "haxe.ui.core.LayoutClassMap";
haxe_ui_core_LayoutClassMap.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_core_LayoutClassMap.prototype, {
	__class__: haxe_ui_core_LayoutClassMap
	,_map: null
});
class haxe_ui_core_Platform extends haxe_ui_backend_PlatformImpl {
	constructor() {
		super();
	}
	getMetric(id) {
		return super.getMetric(id);
	}
	static get_vscrollWidth() {
		return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
	}
	static get_hscrollHeight() {
		return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
	}
	static get_instance() {
		if(haxe_ui_core_Platform._instance == null) {
			haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
		}
		return haxe_ui_core_Platform._instance;
	}
}
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance: "get_instance",get_hscrollHeight: "get_hscrollHeight",get_vscrollWidth: "get_vscrollWidth"};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
Object.assign(haxe_ui_core_Platform.prototype, {
	__class__: haxe_ui_core_Platform
});
class haxe_ui_core_TextDisplayData {
	constructor() {
		this.wordWrap = false;
		this.multiline = false;
	}
}
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
Object.assign(haxe_ui_core_TextDisplayData.prototype, {
	__class__: haxe_ui_core_TextDisplayData
	,multiline: null
	,wordWrap: null
});
class haxe_ui_core_TextDisplay extends haxe_ui_backend_TextDisplayImpl {
	constructor() {
		haxe_ui_backend_TextBase._hx_skip_constructor = true;
		super();
		haxe_ui_backend_TextBase._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._depth = -1;
		this._isValidating = false;
		this._isAllInvalid = false;
		this._invalidationFlags = new haxe_ds_StringMap();
		super._hx_constructor();
	}
	get_textStyle() {
		return this._textStyle;
	}
	set_textStyle(value) {
		let _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	set_text(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	set_htmlText(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	set_left(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	set_top(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	set_width(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	set_height(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	get_textWidth() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	get_textHeight() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	set_wordWrap(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	isComponentInvalid(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			let value_length = Object.keys(this._invalidationFlags.h).length;
			while(0 < value_length) return true;
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	invalidateComponent(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textDisplay");
		}
	}
	get_depth() {
		return this._depth;
	}
	validateComponent(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	validateComponentInternal() {
		let dataInvalid = this.isComponentInvalid("data");
		let styleInvalid = this.isComponentInvalid("style");
		let positionInvalid = this.isComponentInvalid("position");
		let displayInvalid = this.isComponentInvalid("display");
		let measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			let oldTextWidth = this.get_textWidth();
			let oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
}
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
Object.assign(haxe_ui_core_TextDisplay.prototype, {
	__class__: haxe_ui_core_TextDisplay
	,_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,textWidth: null
	,textHeight: null
	,_depth: null
	,__properties__: Object.assign({}, haxe_ui_backend_TextDisplayImpl.prototype.__properties__, {get_depth: "get_depth",set_wordWrap: "set_wordWrap",get_textHeight: "get_textHeight",get_textWidth: "get_textWidth",set_height: "set_height",set_width: "set_width",set_top: "set_top",set_left: "set_left",set_htmlText: "set_htmlText",set_text: "set_text",set_textStyle: "set_textStyle",get_textStyle: "get_textStyle"})
});
class haxe_ui_core_TextInputData {
	constructor() {
		this.onChangedCallback = null;
		this.onScrollCallback = null;
		this.vscrollNativeWheel = false;
		this.vscrollPageStep = null;
		this.vscrollPageSize = 0;
		this.vscrollMax = 0;
		this.vscrollPos = 0;
		this.hscrollPageSize = 0;
		this.hscrollMax = 0;
		this.hscrollPos = 0;
		this.password = false;
	}
}
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
Object.assign(haxe_ui_core_TextInputData.prototype, {
	__class__: haxe_ui_core_TextInputData
	,password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
});
class haxe_ui_core_TextInput extends haxe_ui_backend_TextInputImpl {
	constructor() {
		haxe_ui_backend_TextBase._hx_skip_constructor = true;
		super();
		haxe_ui_backend_TextBase._hx_skip_constructor = false;
		this._hx_constructor();
	}
	_hx_constructor() {
		this._depth = -1;
		this._isValidating = false;
		this._isAllInvalid = false;
		this._invalidationFlags = new haxe_ds_StringMap();
		super._hx_constructor();
		this._isAllInvalid = true;
	}
	focus() {
		super.focus();
	}
	blur() {
		super.blur();
	}
	get_textStyle() {
		return this._textStyle;
	}
	set_textStyle(value) {
		let _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	get_data() {
		return this._inputData;
	}
	get_text() {
		return this._text;
	}
	set_text(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	set_password(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	set_left(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	set_top(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	set_width(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	get_width() {
		return this._width;
	}
	set_height(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	get_height() {
		return this._height;
	}
	get_textWidth() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	get_textHeight() {
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	set_multiline(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	set_wordWrap(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	get_hscrollPos() {
		return this._inputData.hscrollPos;
	}
	set_hscrollPos(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	get_hscrollMax() {
		return this._inputData.hscrollMax;
	}
	get_hscrollPageSize() {
		return this._inputData.hscrollPageSize;
	}
	get_vscrollPos() {
		return this._inputData.vscrollPos;
	}
	set_vscrollPos(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	get_vscrollMax() {
		return this._inputData.vscrollMax;
	}
	get_vscrollPageSize() {
		return this._inputData.vscrollPageSize;
	}
	isComponentInvalid(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			let value_length = Object.keys(this._invalidationFlags.h).length;
			while(0 < value_length) return true;
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	invalidateComponent(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textInput");
		}
	}
	get_depth() {
		return this._depth;
	}
	validateComponent(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		let flag_keys = Object.keys(this._invalidationFlags.h);
		let flag_length = flag_keys.length;
		let flag_current = 0;
		while(flag_current < flag_length) {
			let flag = flag_keys[flag_current++];
			let _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	validateComponentInternal() {
		let dataInvalid = this.isComponentInvalid("data");
		let styleInvalid = this.isComponentInvalid("style");
		let positionInvalid = this.isComponentInvalid("position");
		let displayInvalid = this.isComponentInvalid("display");
		let measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
	}
}
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
Object.assign(haxe_ui_core_TextInput.prototype, {
	__class__: haxe_ui_core_TextInput
	,_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,data: null
	,textWidth: null
	,textHeight: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollMax: null
	,vscrollPageSize: null
	,_depth: null
	,__properties__: Object.assign({}, haxe_ui_backend_TextInputImpl.prototype.__properties__, {get_depth: "get_depth",get_vscrollPageSize: "get_vscrollPageSize",get_vscrollMax: "get_vscrollMax",set_vscrollPos: "set_vscrollPos",get_vscrollPos: "get_vscrollPos",get_hscrollPageSize: "get_hscrollPageSize",get_hscrollMax: "get_hscrollMax",set_hscrollPos: "set_hscrollPos",get_hscrollPos: "get_hscrollPos",set_wordWrap: "set_wordWrap",set_multiline: "set_multiline",get_textHeight: "get_textHeight",get_textWidth: "get_textWidth",set_height: "set_height",get_height: "get_height",set_width: "set_width",get_width: "get_width",set_top: "set_top",set_left: "set_left",set_password: "set_password",set_text: "set_text",get_text: "get_text",get_data: "get_data",set_textStyle: "set_textStyle",get_textStyle: "get_textStyle"})
});
class haxe_ui_core_TypeMap {
	static addTypeInfo(className,property,type) {
		if(haxe_ui_core_TypeMap.typeInfo == null) {
			haxe_ui_core_TypeMap.typeInfo = new haxe_ds_StringMap();
		}
		let classTypeMap = haxe_ui_core_TypeMap.typeInfo.h[className];
		if(classTypeMap == null) {
			classTypeMap = new haxe_ds_StringMap();
			haxe_ui_core_TypeMap.typeInfo.h[className] = classTypeMap;
		}
		classTypeMap.h[property] = type;
	}
	static getTypeInfo(className,property) {
		if(haxe_ui_core_TypeMap.typeInfo == null) {
			return null;
		}
		let classTypeMap = haxe_ui_core_TypeMap.typeInfo.h[className];
		if(classTypeMap == null) {
			return null;
		}
		return classTypeMap.h[property];
	}
}
$hxClasses["haxe.ui.core.TypeMap"] = haxe_ui_core_TypeMap;
haxe_ui_core_TypeMap.__name__ = "haxe.ui.core.TypeMap";
class haxe_ui_data_DataSource {
	constructor(transformer) {
		this.transformer = transformer;
		this._allowCallbacks = true;
		this._changed = false;
	}
	get_size() {
		return this.handleGetSize();
	}
	get(index) {
		let r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = this.onChange;
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	indexOf(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	handleGetSize() {
		return 0;
	}
	handleGetItem(index) {
		return null;
	}
	handleIndexOf(item) {
		return 0;
	}
}
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
Object.assign(haxe_ui_data_DataSource.prototype, {
	__class__: haxe_ui_data_DataSource
	,onChange: null
	,transformer: null
	,_changed: null
	,_allowCallbacks: null
	,size: null
	,__properties__: {get_size: "get_size"}
});
class haxe_ui_data_ArrayDataSource extends haxe_ui_data_DataSource {
	constructor(transformer) {
		super(transformer);
		this._array = [];
	}
	handleGetSize() {
		return this._array.length;
	}
	handleGetItem(index) {
		return this._array[index];
	}
	handleIndexOf(item) {
		return this._array.indexOf(item);
	}
}
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = "haxe.ui.data.ArrayDataSource";
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
Object.assign(haxe_ui_data_ArrayDataSource.prototype, {
	__class__: haxe_ui_data_ArrayDataSource
	,_array: null
});
class haxe_ui_data_IDataItem {
}
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
Object.assign(haxe_ui_data_IDataItem.prototype, {
	__class__: haxe_ui_data_IDataItem
	,onDataSourceChanged: null
});
class haxe_ui_data_transformation_IItemTransformer {
}
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
Object.assign(haxe_ui_data_transformation_IItemTransformer.prototype, {
	__class__: haxe_ui_data_transformation_IItemTransformer
	,transformFrom: null
});
class haxe_ui_data_transformation_NativeTypeTransformer {
	constructor() {
	}
	transformFrom(i) {
		let o = null;
		if(typeof(i) == "string") {
			o = { text : i, value : i};
		} else if(typeof(i) == "number" && ((i | 0) === i) || typeof(i) == "number" || typeof(i) == "boolean") {
			o = { value : i};
		} else {
			o = i;
		}
		return o;
	}
}
$hxClasses["haxe.ui.data.transformation.NativeTypeTransformer"] = haxe_ui_data_transformation_NativeTypeTransformer;
haxe_ui_data_transformation_NativeTypeTransformer.__name__ = "haxe.ui.data.transformation.NativeTypeTransformer";
haxe_ui_data_transformation_NativeTypeTransformer.__interfaces__ = [haxe_ui_data_transformation_IItemTransformer];
Object.assign(haxe_ui_data_transformation_NativeTypeTransformer.prototype, {
	__class__: haxe_ui_data_transformation_NativeTypeTransformer
});
class haxe_ui_dragdrop_DragManager {
	constructor() {
		this._dragComponents = new haxe_ds_ObjectMap();
		this._mouseTargetToDragTarget = new haxe_ds_ObjectMap();
	}
	getDragOptions(component) {
		return this._dragComponents.h[component.__id__];
	}
	registerDraggable(component,dragOptions) {
		if(this.isRegisteredDraggable(component)) {
			return null;
		}
		if(dragOptions == null) {
			dragOptions = { };
		}
		if(dragOptions.mouseTarget == null) {
			dragOptions.mouseTarget = component;
		}
		if(dragOptions.dragOffsetX == null) {
			dragOptions.dragOffsetX = 0;
		}
		if(dragOptions.dragOffsetY == null) {
			dragOptions.dragOffsetY = 0;
		}
		if(dragOptions.dragTolerance == null) {
			dragOptions.dragTolerance = 1;
		}
		if(dragOptions.dragBounds == null) {
			dragOptions.dragBounds = new haxe_ui_geom_Rectangle(0,0,haxe_ui_core_Screen.get_instance().get_width(),haxe_ui_core_Screen.get_instance().get_height());
		}
		if(dragOptions.draggableStyleName == null) {
			dragOptions.draggableStyleName = "draggable";
		}
		if(dragOptions.draggingStyleName == null) {
			dragOptions.draggingStyleName = "dragging";
		}
		this._dragComponents.set(component,dragOptions);
		this._mouseTargetToDragTarget.set(dragOptions.mouseTarget,component);
		if(!dragOptions.mouseTarget.hasEvent("mousedown",$bind(this,this.onMouseDown))) {
			dragOptions.mouseTarget.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(dragOptions.draggableStyleName != null) {
			dragOptions.mouseTarget.addClass(dragOptions.draggableStyleName);
		}
		return dragOptions;
	}
	unregisterDraggable(component) {
		if(!this.isRegisteredDraggable(component)) {
			return;
		}
		let dragOptions = this.getDragOptions(component);
		if(dragOptions != null && dragOptions.mouseTarget != null) {
			dragOptions.mouseTarget.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
			this._mouseTargetToDragTarget.remove(dragOptions.mouseTarget);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._dragComponents.remove(component);
	}
	isRegisteredDraggable(component) {
		return this._dragComponents.h.__keys__[component.__id__] != null;
	}
	onMouseDown(e) {
		this._currentComponent = this._mouseTargetToDragTarget.h[e.target.__id__];
		this._currentOptions = this.getDragOptions(this._currentComponent);
		this._mouseOffset = new haxe_ui_geom_Point(e.screenX - this._currentComponent.get_left(),e.screenY - this._currentComponent.get_top());
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
	}
	onScreenCheckForDrag(e) {
		let x1 = e.screenX - this._currentComponent.get_left();
		let y1 = e.screenY - this._currentComponent.get_top();
		let x2 = this._mouseOffset.x;
		let y2 = this._mouseOffset.y;
		if(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) > this._currentOptions.dragTolerance) {
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
			haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenDrag));
			this._mouseOffset.x -= this._currentOptions.dragOffsetX;
			this._mouseOffset.y -= this._currentOptions.dragOffsetY;
			if(this._currentOptions.draggingStyleName != null) {
				this._currentComponent.addClass(this._currentOptions.draggingStyleName);
			}
			this._currentComponent.dispatch(new haxe_ui_events_UIEvent("dragStart"));
		}
	}
	onScreenDrag(e) {
		let v = e.screenX;
		let min = this._currentOptions.dragBounds.left + this._mouseOffset.x;
		let max = this._currentOptions.dragBounds.get_right() - this._currentComponent.get_width() + this._mouseOffset.x;
		let boundX;
		if(v == null || isNaN(v)) {
			boundX = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			boundX = v;
		}
		let v1 = e.screenY;
		let min1 = this._currentOptions.dragBounds.top + this._mouseOffset.y;
		let max1 = this._currentOptions.dragBounds.get_bottom() - this._currentComponent.get_height() + this._mouseOffset.y;
		let boundY;
		if(v1 == null || isNaN(v1)) {
			boundY = min1;
		} else {
			if(min1 != null && v1 < min1) {
				v1 = min1;
			} else if(max1 != null && v1 > max1) {
				v1 = max1;
			}
			boundY = v1;
		}
		this._currentComponent.moveComponent(boundX - this._mouseOffset.x,boundY - this._mouseOffset.y);
	}
	onScreenMouseUp(e) {
		if(this._currentOptions.draggingStyleName != null) {
			this._currentComponent.removeClass(this._currentOptions.draggingStyleName);
		}
		this._currentComponent.dispatch(new haxe_ui_events_UIEvent("dragEnd"));
		this._currentComponent = null;
		this._currentOptions = null;
		this._mouseOffset.x = 0;
		this._mouseOffset.y = 0;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
	}
	static get_instance() {
		if(haxe_ui_dragdrop_DragManager._instance == null) {
			haxe_ui_dragdrop_DragManager._instance = new haxe_ui_dragdrop_DragManager();
		}
		return haxe_ui_dragdrop_DragManager._instance;
	}
}
$hxClasses["haxe.ui.dragdrop.DragManager"] = haxe_ui_dragdrop_DragManager;
haxe_ui_dragdrop_DragManager.__name__ = "haxe.ui.dragdrop.DragManager";
haxe_ui_dragdrop_DragManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_dragdrop_DragManager.prototype, {
	__class__: haxe_ui_dragdrop_DragManager
	,_dragComponents: null
	,_mouseTargetToDragTarget: null
	,_currentComponent: null
	,_currentOptions: null
	,_mouseOffset: null
});
class haxe_ui_events_AnimationEvent extends haxe_ui_events_UIEvent {
	constructor(type) {
		super(type);
	}
	clone() {
		return new haxe_ui_events_AnimationEvent(this.type);
	}
}
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_AnimationEvent.prototype, {
	__class__: haxe_ui_events_AnimationEvent
});
class haxe_ui_events_FocusEvent extends haxe_ui_events_UIEvent {
	constructor(type) {
		super(type);
	}
	clone() {
		let c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_FocusEvent.prototype, {
	__class__: haxe_ui_events_FocusEvent
});
class haxe_ui_events_ItemEvent extends haxe_ui_events_UIEvent {
	constructor(type,bubble,data) {
		haxe_ui_events_UIEvent._hx_skip_constructor = true;
		super();
		haxe_ui_events_UIEvent._hx_skip_constructor = false;
		this._hx_constructor(type,bubble,data);
	}
	_hx_constructor(type,bubble,data) {
		this.itemIndex = -1;
		this.sourceEvent = null;
		this.source = null;
		super._hx_constructor(type,bubble,data);
	}
	clone() {
		let c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.itemIndex = this.itemIndex;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_ItemEvent.prototype, {
	__class__: haxe_ui_events_ItemEvent
	,source: null
	,sourceEvent: null
	,itemIndex: null
});
class haxe_ui_events_KeyboardEvent extends haxe_ui_events_UIEvent {
	constructor(type) {
		super(type);
	}
	clone() {
		let c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
}
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_KeyboardEvent.prototype, {
	__class__: haxe_ui_events_KeyboardEvent
	,keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
});
class haxe_ui_events_MouseEvent extends haxe_ui_events_UIEvent {
	constructor(type) {
		super(type);
	}
	get_localX() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	get_localY() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	clone() {
		let c = new haxe_ui_events_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_MouseEvent.prototype, {
	__class__: haxe_ui_events_MouseEvent
	,screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,localY: null
	,__properties__: {get_localY: "get_localY",get_localX: "get_localX"}
});
class haxe_ui_events_ScrollEvent extends haxe_ui_events_UIEvent {
	constructor(type) {
		super(type);
	}
	clone() {
		let c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_ScrollEvent.prototype, {
	__class__: haxe_ui_events_ScrollEvent
});
class haxe_ui_events_ValidationEvent extends haxe_ui_events_UIEvent {
	constructor(type) {
		super(type);
	}
	clone() {
		let c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
}
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
Object.assign(haxe_ui_events_ValidationEvent.prototype, {
	__class__: haxe_ui_events_ValidationEvent
});
class haxe_ui_filters_Filter {
	constructor() {
	}
}
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
Object.assign(haxe_ui_filters_Filter.prototype, {
	__class__: haxe_ui_filters_Filter
});
class haxe_ui_filters_Blur extends haxe_ui_filters_Filter {
	constructor() {
		super();
	}
}
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
Object.assign(haxe_ui_filters_Blur.prototype, {
	__class__: haxe_ui_filters_Blur
	,amount: null
});
class haxe_ui_filters_DropShadow extends haxe_ui_filters_Filter {
	constructor() {
		super();
	}
}
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
Object.assign(haxe_ui_filters_DropShadow.prototype, {
	__class__: haxe_ui_filters_DropShadow
	,distance: null
	,angle: null
	,color: null
	,alpha: null
	,blurX: null
	,blurY: null
	,strength: null
	,quality: null
	,inner: null
});
class haxe_ui_filters_FilterParser {
	static parseFilter(filterDetails) {
		let filter = null;
		if(filterDetails[0] == "drop-shadow") {
			filter = haxe_ui_filters_FilterParser.parseDropShadow(filterDetails);
		} else if(filterDetails[0] == "blur") {
			filter = haxe_ui_filters_FilterParser.parseBlur(filterDetails);
		} else if(filterDetails[0] == "outline") {
			filter = haxe_ui_filters_FilterParser.parseOutline(filterDetails);
		} else if(filterDetails[0] == "grayscale") {
			filter = haxe_ui_filters_FilterParser.parseGrayscale(filterDetails);
		}
		return filter;
	}
	static parseDropShadow(filterDetails) {
		if(filterDetails == null || filterDetails.length == 0) {
			return null;
		}
		let copy = filterDetails.slice();
		haxe_ui_filters_FilterParser.buildDefaults();
		let filterName = copy[0];
		HxOverrides.remove(copy,filterName);
		copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
		let dropShadow = new haxe_ui_filters_DropShadow();
		dropShadow.distance = copy[0];
		dropShadow.angle = copy[1];
		dropShadow.color = copy[2];
		dropShadow.alpha = copy[3];
		dropShadow.blurX = copy[4];
		dropShadow.blurY = copy[5];
		dropShadow.strength = copy[6];
		dropShadow.quality = copy[7];
		dropShadow.inner = copy[8];
		return dropShadow;
	}
	static parseBlur(filterDetails) {
		if(filterDetails == null || filterDetails.length == 0) {
			return null;
		}
		let copy = filterDetails.slice();
		haxe_ui_filters_FilterParser.buildDefaults();
		let filterName = copy[0];
		HxOverrides.remove(copy,filterName);
		copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
		let blur = new haxe_ui_filters_Blur();
		blur.amount = copy[0];
		return blur;
	}
	static parseOutline(filterDetails) {
		if(filterDetails == null || filterDetails.length == 0) {
			return null;
		}
		let copy = filterDetails.slice();
		haxe_ui_filters_FilterParser.buildDefaults();
		let filterName = copy[0];
		HxOverrides.remove(copy,filterName);
		copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
		let outline = new haxe_ui_filters_Outline();
		outline.color = copy[0];
		outline.size = copy[1];
		return outline;
	}
	static copyFilterDefaults(filterName,params) {
		let copy = [];
		let defaultParams = haxe_ui_filters_FilterParser.filterParamDefaults.h[filterName];
		if(defaultParams != null) {
			let _g = 0;
			while(_g < defaultParams.length) copy.push(defaultParams[_g++]);
		}
		if(params != null) {
			let n = 0;
			let _g = 0;
			while(_g < params.length) {
				copy[n] = params[_g++];
				++n;
			}
		}
		return copy;
	}
	static parseGrayscale(filterDetails) {
		if(filterDetails == null || filterDetails.length == 0) {
			return null;
		}
		let copy = filterDetails.slice();
		haxe_ui_filters_FilterParser.buildDefaults();
		let filterName = copy[0];
		HxOverrides.remove(copy,filterName);
		copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
		let grayscale = new haxe_ui_filters_Grayscale();
		grayscale.amount = copy[0];
		return grayscale;
	}
	static buildDefaults() {
		if(haxe_ui_filters_FilterParser.filterParamDefaults != null) {
			return;
		}
		haxe_ui_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
		haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"] = [];
		let this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
		let v = haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"].concat([4,45,0,1,4,4,1,1,false,false,false]);
		this1.h["drop-shadow"] = v;
		haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"] = [];
		let this2 = haxe_ui_filters_FilterParser.filterParamDefaults;
		let v1 = haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"].concat([1]);
		this2.h["blur"] = v1;
		haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"] = [];
		let this3 = haxe_ui_filters_FilterParser.filterParamDefaults;
		let v2 = haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"].concat([0,1]);
		this3.h["outline"] = v2;
		haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"] = [];
		let this4 = haxe_ui_filters_FilterParser.filterParamDefaults;
		let v3 = haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"].concat([100]);
		this4.h["grayscale"] = v3;
	}
}
$hxClasses["haxe.ui.filters.FilterParser"] = haxe_ui_filters_FilterParser;
haxe_ui_filters_FilterParser.__name__ = "haxe.ui.filters.FilterParser";
class haxe_ui_filters_Grayscale extends haxe_ui_filters_Filter {
	constructor() {
		super();
	}
}
$hxClasses["haxe.ui.filters.Grayscale"] = haxe_ui_filters_Grayscale;
haxe_ui_filters_Grayscale.__name__ = "haxe.ui.filters.Grayscale";
haxe_ui_filters_Grayscale.__super__ = haxe_ui_filters_Filter;
Object.assign(haxe_ui_filters_Grayscale.prototype, {
	__class__: haxe_ui_filters_Grayscale
	,amount: null
});
class haxe_ui_filters_Outline extends haxe_ui_filters_Filter {
	constructor() {
		super();
	}
}
$hxClasses["haxe.ui.filters.Outline"] = haxe_ui_filters_Outline;
haxe_ui_filters_Outline.__name__ = "haxe.ui.filters.Outline";
haxe_ui_filters_Outline.__super__ = haxe_ui_filters_Filter;
Object.assign(haxe_ui_filters_Outline.prototype, {
	__class__: haxe_ui_filters_Outline
	,color: null
	,size: null
});
class haxe_ui_focus_FocusInfo {
	constructor() {
	}
}
$hxClasses["haxe.ui.focus.FocusInfo"] = haxe_ui_focus_FocusInfo;
haxe_ui_focus_FocusInfo.__name__ = "haxe.ui.focus.FocusInfo";
Object.assign(haxe_ui_focus_FocusInfo.prototype, {
	__class__: haxe_ui_focus_FocusInfo
	,view: null
	,currentFocus: null
});
class haxe_ui_focus_FocusManager {
	constructor() {
		this._views = [];
		this._focusInfo = new haxe_ds_ObjectMap();
	}
	pushView(component) {
		this._views.push(component);
	}
	removeView(component) {
		HxOverrides.remove(this._views,component);
	}
	get_focusInfo() {
		if(this._views.length == 0) {
			return null;
		}
		let c = this._views[this._views.length - 1];
		let info = this._focusInfo.h[c.__id__];
		if(info == null) {
			info = new haxe_ui_focus_FocusInfo();
			info.view = c;
			this._focusInfo.set(c,info);
		}
		return info;
	}
	set_focus(value) {
		if(value != null && js_Boot.__implements(value,haxe_ui_focus_IFocusable) == false) {
			throw haxe_Exception.thrown("Component does not implement IFocusable");
		}
		if(this.get_focusInfo() == null) {
			return value;
		}
		if(this.get_focusInfo().currentFocus != null && this.get_focusInfo().currentFocus != value) {
			this.get_focusInfo().currentFocus.set_focus(false);
			this.get_focusInfo().currentFocus = null;
		}
		if(value != null) {
			this.get_focusInfo().currentFocus = value;
			this.get_focusInfo().currentFocus.set_focus(true);
		}
		haxe_ui_Toolkit.get_screen().set_focus(value);
		return this.get_focusInfo().currentFocus;
	}
	focusNext() {
		if(this._views.length == 0) {
			return null;
		}
		let list = [];
		let currentFocus = this.buildFocusableList(this.get_focusInfo().view,list);
		let index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		let nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		let nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	focusPrev() {
		if(this._views.length == 0) {
			return null;
		}
		let list = [];
		let currentFocus = this.buildFocusableList(this.get_focusInfo().view,list);
		let index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		let prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		let prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	buildFocusableList(c,list) {
		let currentFocus = null;
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			let f = c;
			if(f.get_allowFocus() == true) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				list.push(f);
			}
		}
		let _g = 0;
		let _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			let f = this.buildFocusableList(_g1[_g++],list);
			if(f != null) {
				currentFocus = f;
			}
		}
		return currentFocus;
	}
	static get_instance() {
		if(haxe_ui_focus_FocusManager._instance == null) {
			haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
		}
		return haxe_ui_focus_FocusManager._instance;
	}
}
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_focus_FocusManager.prototype, {
	__class__: haxe_ui_focus_FocusManager
	,_views: null
	,_focusInfo: null
	,focusInfo: null
	,__properties__: {set_focus: "set_focus",get_focusInfo: "get_focusInfo"}
});
class haxe_ui_geom_Point {
	constructor(x,y) {
		if(y == null) {
			y = 0;
		}
		if(x == null) {
			x = 0;
		}
		this.x = x;
		this.y = y;
	}
}
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
Object.assign(haxe_ui_geom_Point.prototype, {
	__class__: haxe_ui_geom_Point
	,x: null
	,y: null
});
class haxe_ui_geom_Rectangle {
	constructor(left,top,width,height) {
		if(height == null) {
			height = 0;
		}
		if(width == null) {
			width = 0;
		}
		if(top == null) {
			top = 0;
		}
		if(left == null) {
			left = 0;
		}
		this.left = left;
		this.top = top;
		this.width = width;
		this.height = height;
	}
	get_right() {
		return this.left + this.width;
	}
	get_bottom() {
		return this.top + this.height;
	}
}
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
Object.assign(haxe_ui_geom_Rectangle.prototype, {
	__class__: haxe_ui_geom_Rectangle
	,left: null
	,top: null
	,width: null
	,height: null
	,__properties__: {get_bottom: "get_bottom",get_right: "get_right"}
});
class haxe_ui_geom_Size {
	constructor(width,height) {
		if(height == null) {
			height = 0;
		}
		if(width == null) {
			width = 0;
		}
		this.width = width;
		this.height = height;
	}
}
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
Object.assign(haxe_ui_geom_Size.prototype, {
	__class__: haxe_ui_geom_Size
	,width: null
	,height: null
});
class haxe_ui_geom_Slice9 {
	static buildRects(w,h,bitmapWidth,bitmapHeight,slice) {
		let srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
		return { src : srcRects, dst : haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects)};
	}
	static buildSrcRects(bitmapWidth,bitmapHeight,slice) {
		let x1 = slice.left;
		let y1 = slice.top;
		let x2 = slice.get_right();
		let y2 = slice.get_bottom();
		let srcRects = [];
		srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
		srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
		srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
		srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
		srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
		srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
		srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
		srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
		srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
		return srcRects;
	}
	static buildDstRects(w,h,srcRects) {
		let dstRects = [];
		dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
		dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
		dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
		dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
		dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
		dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
		dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
		dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
		dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
		return dstRects;
	}
}
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
class haxe_ui_layouts_DelegateLayout extends haxe_ui_layouts_DefaultLayout {
	constructor(size) {
		super();
		this._size = size;
	}
	calcAutoSize(exclusions) {
		this._size.component = this.get_component();
		let cx = this._size.get_width();
		let cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(cx,cy);
	}
	get_usableSize() {
		let size = super.get_usableSize();
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
}
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
Object.assign(haxe_ui_layouts_DelegateLayout.prototype, {
	__class__: haxe_ui_layouts_DelegateLayout
	,_size: null
});
class haxe_ui_layouts_ComponentRectangle extends haxe_ui_geom_Rectangle {
	constructor(left,top,width,height) {
		super(left,top,width,height);
	}
	apply() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
}
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
Object.assign(haxe_ui_layouts_ComponentRectangle.prototype, {
	__class__: haxe_ui_layouts_ComponentRectangle
	,component: null
});
class haxe_ui_locale_LocaleManager {
	constructor() {
		this._localeMap = new haxe_ds_StringMap();
		this._language = "en";
	}
	get_language() {
		return this._language;
	}
	parseResource(localeId,resourceId) {
		let content = haxe_ui_ToolkitAssets.get_instance().getText(resourceId);
		if(content != null) {
			let parts = resourceId.split(".");
			let extension = parts.pop();
			let filename = parts.join(".");
			let n = filename.lastIndexOf("/");
			if(n != -1) {
				filename = HxOverrides.substr(filename,n + 1,null);
			}
			this.addStrings(localeId,haxe_ui_parsers_locale_LocaleParser.get(extension).parse(content),filename);
		}
	}
	addStrings(localeId,map,filename) {
		let stringMap = this._localeMap.h[localeId];
		if(stringMap == null) {
			stringMap = new haxe_ds_StringMap();
			this._localeMap.h[localeId] = stringMap;
		}
		let k_keys = Object.keys(map.h);
		let k_length = k_keys.length;
		let k_current = 0;
		while(k_current < k_length) {
			let k = k_keys[k_current++];
			let v = map.h[k];
			if(filename != null && filename != localeId && k.startsWith(filename) == false) {
				stringMap.h[filename + "." + k] = v;
			}
			stringMap.h[k] = v;
		}
		localeId = StringTools.replace(localeId,"-","_");
		let parts = localeId.split("_");
		if(parts.length > 1) {
			let parent = this._localeMap.h[parts[0]];
			if(parent != null) {
				let k_keys = Object.keys(parent.h);
				let k_length = k_keys.length;
				let k_current = 0;
				while(k_current < k_length) {
					let k = k_keys[k_current++];
					if(Object.prototype.hasOwnProperty.call(stringMap.h,k) == false) {
						stringMap.h[k] = parent.h[k];
					}
				}
			}
		}
	}
	getStrings(localeId) {
		let strings = this._localeMap.h[localeId];
		if(strings != null) {
			return strings;
		}
		localeId = StringTools.replace(localeId,"-","_");
		return this._localeMap.h[localeId.split("_")[0]];
	}
	hasString(id) {
		let strings = this.getStrings(this.get_language());
		if(strings == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(strings.h,id);
	}
	lookupString(id,param0,param1,param2,param3) {
		let strings = this.getStrings(this.get_language());
		if(strings == null) {
			return id;
		}
		let value = strings.h[id];
		if(value == null) {
			return id;
		}
		if(param0 != null) {
			value = StringTools.replace(value,"{0}",param0);
		}
		if(param1 != null) {
			value = StringTools.replace(value,"{1}",param1);
		}
		if(param2 != null) {
			value = StringTools.replace(value,"{2}",param2);
		}
		if(param3 != null) {
			value = StringTools.replace(value,"{3}",param3);
		}
		return value;
	}
	static get_instance() {
		if(haxe_ui_locale_LocaleManager._instance == null) {
			haxe_ui_locale_LocaleManager._instance = new haxe_ui_locale_LocaleManager();
		}
		return haxe_ui_locale_LocaleManager._instance;
	}
}
$hxClasses["haxe.ui.locale.LocaleManager"] = haxe_ui_locale_LocaleManager;
haxe_ui_locale_LocaleManager.__name__ = "haxe.ui.locale.LocaleManager";
haxe_ui_locale_LocaleManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_locale_LocaleManager.prototype, {
	__class__: haxe_ui_locale_LocaleManager
	,_language: null
	,_localeMap: null
	,__properties__: {get_language: "get_language"}
});
class haxe_ui_parsers_locale_LocaleParser {
	constructor() {
	}
	parse(data) {
		throw haxe_Exception.thrown("Locale parser not implemented!");
	}
	static get(extension) {
		haxe_ui_parsers_locale_LocaleParser.defaultParsers();
		let cls = haxe_ui_parsers_locale_LocaleParser._parsers.h[extension];
		if(cls == null) {
			throw haxe_Exception.thrown("No locale parser found for \"" + extension + "\"");
		}
		let instance = Type.createInstance(cls,[]);
		if(instance == null) {
			throw haxe_Exception.thrown("Could not create locale parser instance \"" + Std.string(cls) + "\"");
		}
		return instance;
	}
	static defaultParsers() {
		if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
			haxe_ui_parsers_locale_LocaleParser.register("properties",haxe_ui_parsers_locale_PropertiesParser);
			haxe_ui_parsers_locale_LocaleParser.register("po",haxe_ui_parsers_locale_PoParser);
		}
	}
	static register(extension,cls) {
		if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
			haxe_ui_parsers_locale_LocaleParser._parsers = new haxe_ds_StringMap();
		}
		haxe_ui_parsers_locale_LocaleParser._parsers.h[extension] = cls;
	}
}
$hxClasses["haxe.ui.parsers.locale.LocaleParser"] = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_LocaleParser.__name__ = "haxe.ui.parsers.locale.LocaleParser";
Object.assign(haxe_ui_parsers_locale_LocaleParser.prototype, {
	__class__: haxe_ui_parsers_locale_LocaleParser
});
class haxe_ui_parsers_locale_PoParser extends haxe_ui_parsers_locale_LocaleParser {
	constructor() {
		super();
	}
	parse(data) {
		let msgidEReg = new EReg("msgid *= *\"(.*)\"","");
		let msgstrEReg = new EReg("msgstr *= *\"(.*)\"","");
		let result = new haxe_ds_StringMap();
		let lines = data.split("\n");
		let currentID = null;
		let _g = 0;
		while(_g < lines.length) {
			let line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || line.startsWith("#")) {
				continue;
			}
			if(currentID == null) {
				if(msgidEReg.match(line)) {
					currentID = msgidEReg.matched(1);
				} else {
					throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
				}
			} else if(msgstrEReg.match(line)) {
				let value = msgstrEReg.matched(1);
				result.h[currentID] = value;
				currentID = null;
			} else {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
		}
		return result;
	}
}
$hxClasses["haxe.ui.parsers.locale.PoParser"] = haxe_ui_parsers_locale_PoParser;
haxe_ui_parsers_locale_PoParser.__name__ = "haxe.ui.parsers.locale.PoParser";
haxe_ui_parsers_locale_PoParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
Object.assign(haxe_ui_parsers_locale_PoParser.prototype, {
	__class__: haxe_ui_parsers_locale_PoParser
});
class haxe_ui_parsers_locale_PropertiesParser extends haxe_ui_parsers_locale_LocaleParser {
	constructor() {
		super();
	}
	parse(data) {
		let result = new haxe_ds_StringMap();
		let lines = data.split("\n");
		let _g = 0;
		while(_g < lines.length) {
			let line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || line.startsWith("#")) {
				continue;
			}
			let separator = line.indexOf("=");
			if(separator == -1) {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
			result.h[StringTools.trim(HxOverrides.substr(line,0,separator))] = StringTools.trim(HxOverrides.substr(line,separator + 1,null));
		}
		return result;
	}
}
$hxClasses["haxe.ui.parsers.locale.PropertiesParser"] = haxe_ui_parsers_locale_PropertiesParser;
haxe_ui_parsers_locale_PropertiesParser.__name__ = "haxe.ui.parsers.locale.PropertiesParser";
haxe_ui_parsers_locale_PropertiesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
Object.assign(haxe_ui_parsers_locale_PropertiesParser.prototype, {
	__class__: haxe_ui_parsers_locale_PropertiesParser
});
class hscript_Interp {
	constructor() {
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		this.resetVariables();
		this.initOps();
	}
	resetVariables() {
		this.variables = new haxe_ds_StringMap();
		let _gthis = this;
		this.variables.h["null"] = null;
		this.variables.h["true"] = true;
		this.variables.h["false"] = false;
		let this1 = this.variables;
		let value = Reflect.makeVarArgs(function(el) {
			let inf = _gthis.posInfos();
			let v = el.shift();
			if(el.length > 0) {
				inf.customParams = el;
			}
			haxe_Log.trace(Std.string(v),inf);
		});
		this1.h["trace"] = value;
	}
	posInfos() {
		return { fileName : "hscript", lineNumber : 0};
	}
	initOps() {
		let me = this;
		this.binops = new haxe_ds_StringMap();
		this.binops.h["+"] = function(e1,e2) {
			return me.expr(e1) + me.expr(e2);
		};
		this.binops.h["-"] = function(e1,e2) {
			return me.expr(e1) - me.expr(e2);
		};
		this.binops.h["*"] = function(e1,e2) {
			return me.expr(e1) * me.expr(e2);
		};
		this.binops.h["/"] = function(e1,e2) {
			return me.expr(e1) / me.expr(e2);
		};
		this.binops.h["%"] = function(e1,e2) {
			return me.expr(e1) % me.expr(e2);
		};
		this.binops.h["&"] = function(e1,e2) {
			return me.expr(e1) & me.expr(e2);
		};
		this.binops.h["|"] = function(e1,e2) {
			return me.expr(e1) | me.expr(e2);
		};
		this.binops.h["^"] = function(e1,e2) {
			return me.expr(e1) ^ me.expr(e2);
		};
		this.binops.h["<<"] = function(e1,e2) {
			return me.expr(e1) << me.expr(e2);
		};
		this.binops.h[">>"] = function(e1,e2) {
			return me.expr(e1) >> me.expr(e2);
		};
		this.binops.h[">>>"] = function(e1,e2) {
			return me.expr(e1) >>> me.expr(e2);
		};
		this.binops.h["=="] = function(e1,e2) {
			return me.expr(e1) == me.expr(e2);
		};
		this.binops.h["!="] = function(e1,e2) {
			return me.expr(e1) != me.expr(e2);
		};
		this.binops.h[">="] = function(e1,e2) {
			return me.expr(e1) >= me.expr(e2);
		};
		this.binops.h["<="] = function(e1,e2) {
			return me.expr(e1) <= me.expr(e2);
		};
		this.binops.h[">"] = function(e1,e2) {
			return me.expr(e1) > me.expr(e2);
		};
		this.binops.h["<"] = function(e1,e2) {
			return me.expr(e1) < me.expr(e2);
		};
		this.binops.h["||"] = function(e1,e2) {
			if(me.expr(e1) != true) {
				return me.expr(e2) == true;
			} else {
				return true;
			}
		};
		this.binops.h["&&"] = function(e1,e2) {
			if(me.expr(e1) == true) {
				return me.expr(e2) == true;
			} else {
				return false;
			}
		};
		this.binops.h["="] = $bind(this,this.assign);
		this.binops.h["..."] = function(e1,e2) {
			return new IntIterator(me.expr(e1),me.expr(e2));
		};
		this.assignOp("+=",function(v1,v2) {
			return v1 + v2;
		});
		this.assignOp("-=",function(v1,v2) {
			return v1 - v2;
		});
		this.assignOp("*=",function(v1,v2) {
			return v1 * v2;
		});
		this.assignOp("/=",function(v1,v2) {
			return v1 / v2;
		});
		this.assignOp("%=",function(v1,v2) {
			return v1 % v2;
		});
		this.assignOp("&=",function(v1,v2) {
			return v1 & v2;
		});
		this.assignOp("|=",function(v1,v2) {
			return v1 | v2;
		});
		this.assignOp("^=",function(v1,v2) {
			return v1 ^ v2;
		});
		this.assignOp("<<=",function(v1,v2) {
			return v1 << v2;
		});
		this.assignOp(">>=",function(v1,v2) {
			return v1 >> v2;
		});
		this.assignOp(">>>=",function(v1,v2) {
			return v1 >>> v2;
		});
	}
	assign(e1,e2) {
		let v = this.expr(e2);
		switch(e1._hx_index) {
		case 1:
			let _g = e1.v;
			let l = this.locals.h[_g];
			if(l == null) {
				this.variables.h[_g] = v;
			} else {
				l.r = v;
			}
			break;
		case 5:
			v = this.set(this.expr(e1.e),e1.f,v);
			break;
		case 16:
			let arr = this.expr(e1.e);
			let index = this.expr(e1.index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				(js_Boot.__cast(arr , haxe_IMap)).set(index,v);
			} else {
				arr[index] = v;
			}
			break;
		default:
			throw haxe_Exception.thrown(hscript_Error.EInvalidOp("="));
		}
		return v;
	}
	assignOp(op,fop) {
		let me = this;
		this.binops.h[op] = function(e1,e2) {
			return me.evalAssignOp(op,fop,e1,e2);
		};
	}
	evalAssignOp(op,fop,e1,e2) {
		let v;
		switch(e1._hx_index) {
		case 1:
			let _g = e1.v;
			let l = this.locals.h[_g];
			v = fop(this.expr(e1),this.expr(e2));
			if(l == null) {
				this.variables.h[_g] = v;
			} else {
				l.r = v;
			}
			break;
		case 5:
			let _g1 = e1.f;
			let obj = this.expr(e1.e);
			v = fop(this.get(obj,_g1),this.expr(e2));
			v = this.set(obj,_g1,v);
			break;
		case 16:
			let arr = this.expr(e1.e);
			let index = this.expr(e1.index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				v = fop((js_Boot.__cast(arr , haxe_IMap)).get(index),this.expr(e2));
				(js_Boot.__cast(arr , haxe_IMap)).set(index,v);
			} else {
				v = fop(arr[index],this.expr(e2));
				arr[index] = v;
			}
			break;
		default:
			throw haxe_Exception.thrown(hscript_Error.EInvalidOp(op));
		}
		return v;
	}
	increment(e,prefix,delta) {
		switch(e._hx_index) {
		case 1:
			let _g = e.v;
			let l = this.locals.h[_g];
			let v = l == null ? this.variables.h[_g] : l.r;
			if(prefix) {
				v += delta;
				if(l == null) {
					this.variables.h[_g] = v;
				} else {
					l.r = v;
				}
			} else if(l == null) {
				this.variables.h[_g] = v + delta;
			} else {
				l.r = v + delta;
			}
			return v;
		case 5:
			let _g1 = e.f;
			let obj = this.expr(e.e);
			let v1 = this.get(obj,_g1);
			if(prefix) {
				v1 += delta;
				this.set(obj,_g1,v1);
			} else {
				this.set(obj,_g1,v1 + delta);
			}
			return v1;
		case 16:
			let arr = this.expr(e.e);
			let index = this.expr(e.index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				let v = (js_Boot.__cast(arr , haxe_IMap)).get(index);
				if(prefix) {
					v += delta;
					(js_Boot.__cast(arr , haxe_IMap)).set(index,v);
				} else {
					(js_Boot.__cast(arr , haxe_IMap)).set(index,v + delta);
				}
				return v;
			} else {
				let v = arr[index];
				if(prefix) {
					v += delta;
					arr[index] = v;
				} else {
					arr[index] = v + delta;
				}
				return v;
			}
			break;
		default:
			throw haxe_Exception.thrown(hscript_Error.EInvalidOp(delta > 0 ? "++" : "--"));
		}
	}
	execute(expr) {
		this.depth = 0;
		this.locals = new haxe_ds_StringMap();
		this.declared = [];
		return this.exprReturn(expr);
	}
	exprReturn(e) {
		try {
			return this.expr(e);
		} catch( _g ) {
			let _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				switch(_g1._hx_index) {
				case 0:
					throw haxe_Exception.thrown("Invalid break");
				case 1:
					throw haxe_Exception.thrown("Invalid continue");
				case 2:
					let v = this.returnValue;
					this.returnValue = null;
					return v;
				}
			} else {
				throw _g;
			}
		}
	}
	duplicate(h) {
		let h2 = new haxe_ds_StringMap();
		let k_keys = Object.keys(h.h);
		let k_length = k_keys.length;
		let k_current = 0;
		while(k_current < k_length) {
			let k = k_keys[k_current++];
			h2.h[k] = h.h[k];
		}
		return h2;
	}
	restore(old) {
		while(this.declared.length > old) {
			let d = this.declared.pop();
			this.locals.h[d.n] = d.old;
		}
	}
	resolve(id) {
		let l = this.locals.h[id];
		if(l != null) {
			return l.r;
		}
		let v = this.variables.h[id];
		if(v == null && !Object.prototype.hasOwnProperty.call(this.variables.h,id)) {
			throw haxe_Exception.thrown(hscript_Error.EUnknownVariable(id));
		}
		return v;
	}
	expr(e) {
		let _gthis = this;
		switch(e._hx_index) {
		case 0:
			let _g = e.c;
			switch(_g._hx_index) {
			case 0:
				return _g.v;
			case 1:
				return _g.f;
			case 2:
				return _g.s;
			}
			break;
		case 1:
			return this.resolve(e.v);
		case 2:
			let _g1 = e.n;
			let _g2 = e.e;
			this.declared.push({ n : _g1, old : this.locals.h[_g1]});
			let this1 = this.locals;
			let value = _g2 == null ? null : this.expr(_g2);
			this1.h[_g1] = { r : value};
			return null;
		case 3:
			return this.expr(e.e);
		case 4:
			let _g3 = e.e;
			let old = this.declared.length;
			let v = null;
			let _g4 = 0;
			while(_g4 < _g3.length) v = this.expr(_g3[_g4++]);
			this.restore(old);
			return v;
		case 5:
			return this.get(this.expr(e.e),e.f);
		case 6:
			let _g5 = e.op;
			let fop = this.binops.h[_g5];
			if(fop == null) {
				throw haxe_Exception.thrown(hscript_Error.EInvalidOp(_g5));
			}
			return fop(e.e1,e.e2);
		case 7:
			let _g6 = e.op;
			let _g7 = e.prefix;
			let _g8 = e.e;
			switch(_g6) {
			case "!":
				return this.expr(_g8) != true;
			case "++":
				return this.increment(_g8,_g7,1);
			case "-":
				return -this.expr(_g8);
			case "--":
				return this.increment(_g8,_g7,-1);
			case "~":
				return ~this.expr(_g8);
			default:
				throw haxe_Exception.thrown(hscript_Error.EInvalidOp(_g6));
			}
			break;
		case 8:
			let _g9 = e.e;
			let _g10 = e.params;
			let args = [];
			let _g11 = 0;
			while(_g11 < _g10.length) args.push(this.expr(_g10[_g11++]));
			if(_g9._hx_index == 5) {
				let _g = _g9.f;
				let obj = this.expr(_g9.e);
				if(obj == null) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidAccess(_g));
				}
				return this.fcall(obj,_g,args);
			} else {
				return this.call(null,this.expr(_g9),args);
			}
			break;
		case 9:
			let _g12 = e.e2;
			if(this.expr(e.cond) == true) {
				return this.expr(e.e1);
			} else if(_g12 == null) {
				return null;
			} else {
				return this.expr(_g12);
			}
			break;
		case 10:
			this.whileLoop(e.cond,e.e);
			return null;
		case 11:
			this.forLoop(e.v,e.it,e.e);
			return null;
		case 12:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SBreak);
		case 13:
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SContinue);
		case 14:
			let params = e.args;
			let fexpr = e.e;
			let name = e.name;
			let capturedLocals = this.duplicate(this.locals);
			let me = this;
			let minParams = 0;
			let _g13 = 0;
			while(_g13 < params.length) if(!params[_g13++].opt) {
				minParams += 1;
			}
			let f = Reflect.makeVarArgs(function(args) {
				if((args == null ? 0 : args.length) != params.length) {
					if(args.length < minParams) {
						let str = "Invalid number of parameters. Got " + args.length + ", required " + minParams;
						if(name != null) {
							str += " for function '" + name + "'";
						}
						throw haxe_Exception.thrown(hscript_Error.ECustom(str));
					}
					let args2 = [];
					let extraParams = args.length - minParams;
					let pos = 0;
					let _g = 0;
					while(_g < params.length) if(params[_g++].opt) {
						if(extraParams > 0) {
							args2.push(args[pos++]);
							--extraParams;
						} else {
							args2.push(null);
						}
					} else {
						args2.push(args[pos++]);
					}
					args = args2;
				}
				let old = me.locals;
				let depth = me.depth;
				me.depth++;
				me.locals = me.duplicate(capturedLocals);
				let _g = 0;
				let _g1 = params.length;
				while(_g < _g1) {
					let i = _g++;
					me.locals.h[params[i].name] = { r : args[i]};
				}
				let r = null;
				if(_gthis.inTry) {
					try {
						r = me.exprReturn(fexpr);
					} catch( _g ) {
						let _g1 = haxe_Exception.caught(_g).unwrap();
						me.locals = old;
						me.depth = depth;
						throw haxe_Exception.thrown(_g1);
					}
				} else {
					r = me.exprReturn(fexpr);
				}
				me.locals = old;
				me.depth = depth;
				return r;
			});
			if(name != null) {
				if(this.depth == 0) {
					this.variables.h[name] = f;
				} else {
					this.declared.push({ n : name, old : this.locals.h[name]});
					let ref = { r : f};
					this.locals.h[name] = ref;
					capturedLocals.h[name] = ref;
				}
			}
			return f;
		case 15:
			let _g14 = e.e;
			this.returnValue = _g14 == null ? null : this.expr(_g14);
			throw haxe_Exception.thrown(hscript__$Interp_Stop.SReturn);
		case 16:
			let arr = this.expr(e.e);
			let index = this.expr(e.index);
			if(js_Boot.__implements(arr,haxe_IMap)) {
				return (js_Boot.__cast(arr , haxe_IMap)).get(index);
			} else {
				return arr[index];
			}
			break;
		case 17:
			let _g15 = e.e;
			let tmp;
			if(_g15.length > 0) {
				let _g = _g15[0];
				tmp = _g._hx_index == 6 && _g.op == "=>";
			} else {
				tmp = false;
			}
			if(tmp) {
				let isAllString = true;
				let isAllInt = true;
				let isAllObject = true;
				let isAllEnum = true;
				let keys = [];
				let values = [];
				let _g = 0;
				while(_g < _g15.length) {
					let e = _g15[_g];
					++_g;
					if(e._hx_index == 6) {
						if(e.op == "=>") {
							let key = this.expr(e.e1);
							let value = this.expr(e.e2);
							isAllString = isAllString && typeof(key) == "string";
							isAllInt = isAllInt && (typeof(key) == "number" && ((key | 0) === key));
							isAllObject = isAllObject && Reflect.isObject(key);
							isAllEnum = isAllEnum && Reflect.isEnumValue(key);
							keys.push(key);
							values.push(value);
						} else {
							throw haxe_Exception.thrown("=> expected");
						}
					} else {
						throw haxe_Exception.thrown("=> expected");
					}
				}
				let map;
				if(isAllInt) {
					map = new haxe_ds_IntMap();
				} else if(isAllString) {
					map = new haxe_ds_StringMap();
				} else if(isAllEnum) {
					map = new haxe_ds_EnumValueMap();
				} else if(isAllObject) {
					map = new haxe_ds_ObjectMap();
				} else {
					throw haxe_Exception.thrown("Inconsistent key types");
				}
				let _g1 = 0;
				let _g2 = keys.length;
				while(_g1 < _g2) {
					let n = _g1++;
					(js_Boot.__cast(map , haxe_IMap)).set(keys[n],values[n]);
				}
				return map;
			} else {
				let a = [];
				let _g = 0;
				while(_g < _g15.length) a.push(this.expr(_g15[_g++]));
				return a;
			}
			break;
		case 18:
			let _g16 = e.cl;
			let _g17 = e.params;
			let a = [];
			let _g18 = 0;
			while(_g18 < _g17.length) a.push(this.expr(_g17[_g18++]));
			return this.cnew(_g16,a);
		case 19:
			throw haxe_Exception.thrown(this.expr(e.e));
		case 20:
			let _g19 = e.e;
			let _g20 = e.v;
			let _g21 = e.ecatch;
			let old1 = this.declared.length;
			let oldTry = this.inTry;
			try {
				this.inTry = true;
				let v = this.expr(_g19);
				this.restore(old1);
				this.inTry = oldTry;
				return v;
			} catch( _g ) {
				let _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					this.inTry = oldTry;
					throw haxe_Exception.thrown(_g1);
				} else {
					this.restore(old1);
					this.inTry = oldTry;
					this.declared.push({ n : _g20, old : this.locals.h[_g20]});
					this.locals.h[_g20] = { r : _g1};
					let v = this.expr(_g21);
					this.restore(old1);
					return v;
				}
			}
			break;
		case 21:
			let _g22 = e.fl;
			let o = { };
			let _g23 = 0;
			while(_g23 < _g22.length) {
				let f = _g22[_g23];
				++_g23;
				this.set(o,f.name,this.expr(f.e));
			}
			return o;
		case 22:
			if(this.expr(e.cond) == true) {
				return this.expr(e.e1);
			} else {
				return this.expr(e.e2);
			}
			break;
		case 23:
			let _g24 = e.cases;
			let _g25 = e.defaultExpr;
			let val = this.expr(e.e);
			let match = false;
			let _g26 = 0;
			while(_g26 < _g24.length) {
				let c = _g24[_g26];
				++_g26;
				let _g = 0;
				let _g1 = c.values;
				while(_g < _g1.length) if(this.expr(_g1[_g++]) == val) {
					match = true;
					break;
				}
				if(match) {
					val = this.expr(c.expr);
					break;
				}
			}
			if(!match) {
				val = _g25 == null ? null : this.expr(_g25);
			}
			return val;
		case 24:
			this.doWhileLoop(e.cond,e.e);
			return null;
		case 25:
			return this.expr(e.e);
		case 26:
			return this.expr(e.e);
		}
	}
	doWhileLoop(econd,e) {
		let old = this.declared.length;
		_hx_loop1: while(true) {
			try {
				this.expr(e);
			} catch( _g ) {
				let _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					let err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
			if(!(this.expr(econd) == true)) {
				break;
			}
		}
		this.restore(old);
	}
	whileLoop(econd,e) {
		let old = this.declared.length;
		_hx_loop1: while(this.expr(econd) == true) try {
			this.expr(e);
		} catch( _g ) {
			let _g1 = haxe_Exception.caught(_g).unwrap();
			if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
				let err = _g1;
				switch(err._hx_index) {
				case 0:
					break _hx_loop1;
				case 1:
					break;
				case 2:
					throw haxe_Exception.thrown(err);
				}
			} else {
				throw _g;
			}
		}
		this.restore(old);
	}
	makeIterator(v) {
		try {
			v = $getIterator(v);
		} catch( _g ) {
		}
		if(v.hasNext == null || v.next == null) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidIterator(v));
		}
		return v;
	}
	forLoop(n,it,e) {
		let old = this.declared.length;
		this.declared.push({ n : n, old : this.locals.h[n]});
		let it1 = this.makeIterator(this.expr(it));
		_hx_loop1: while(it1.hasNext()) {
			let this1 = this.locals;
			let value = { r : it1.next()};
			this1.h[n] = value;
			try {
				this.expr(e);
			} catch( _g ) {
				let _g1 = haxe_Exception.caught(_g).unwrap();
				if(js_Boot.__instanceof(_g1,hscript__$Interp_Stop)) {
					let err = _g1;
					switch(err._hx_index) {
					case 0:
						break _hx_loop1;
					case 1:
						break;
					case 2:
						throw haxe_Exception.thrown(err);
					}
				} else {
					throw _g;
				}
			}
		}
		this.restore(old);
	}
	get(o,f) {
		if(o == null) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidAccess(f));
		}
		return Reflect.getProperty(o,f);
	}
	set(o,f,v) {
		if(o == null) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidAccess(f));
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	fcall(o,f,args) {
		return this.call(o,this.get(o,f),args);
	}
	call(o,f,args) {
		return f.apply(o,args);
	}
	cnew(cl,args) {
		let c = $hxClasses[cl];
		if(c == null) {
			c = this.resolve(cl);
		}
		return Type.createInstance(c,args);
	}
}
$hxClasses["hscript.Interp"] = hscript_Interp;
hscript_Interp.__name__ = "hscript.Interp";
Object.assign(hscript_Interp.prototype, {
	__class__: hscript_Interp
	,variables: null
	,locals: null
	,binops: null
	,depth: null
	,inTry: null
	,declared: null
	,returnValue: null
});
class haxe_ui_scripting_ScriptInterp extends hscript_Interp {
	constructor() {
		super();
		if(haxe_ui_scripting_ScriptInterp._staticClasses != null) {
			let name_keys = Object.keys(haxe_ui_scripting_ScriptInterp._staticClasses.h);
			let name_length = name_keys.length;
			let name_current = 0;
			while(name_current < name_length) {
				let name = name_keys[name_current++];
				this.variables.h[name] = haxe_ui_scripting_ScriptInterp._staticClasses.h[name];
			}
		}
		this.variables.h["isVar"] = $bind(this,this.isVar);
	}
	isVar(varName) {
		return Object.prototype.hasOwnProperty.call(this.variables.h,varName);
	}
	cnew(cl,args) {
		if(haxe_ui_scripting_ScriptInterp._classAliases != null && Object.prototype.hasOwnProperty.call(haxe_ui_scripting_ScriptInterp._classAliases.h,cl)) {
			cl = haxe_ui_scripting_ScriptInterp._classAliases.h[cl];
		}
		return super.cnew(cl,args);
	}
	get(o,f) {
		if(o == null) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidAccess(f));
		}
		return this.parseResult(Reflect.getProperty(o,f));
	}
	parseResult(v) {
		if(v == null) {
			return v;
		}
		if(((v) instanceof haxe_ui_core_Component) || ((v) instanceof Array)) {
			return v;
		}
		let temp = Std.string(v);
		let regexp = new EReg("^_?(Bool|Float|Int|String)\\((.*)\\)","g");
		if(regexp.match(temp) == false) {
			return v;
		}
		let m1 = regexp.matched(1);
		let m2 = regexp.matched(2);
		switch(m1) {
		case "Bool":
			return parseFloat(m2);
		case "Float":
			return parseFloat(m2);
		case "Int":
			return Std.parseInt(m2);
		case "String":
			if(m2 == null) {
				return "null";
			} else {
				return "" + m2;
			}
			break;
		default:
		}
		return v;
	}
	set(o,f,v) {
		if(o == null) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidAccess(f));
		}
		Reflect.setProperty(o,f,v);
		return v;
	}
	static addClassAlias(alias,classPath) {
		if(haxe_ui_scripting_ScriptInterp._classAliases == null) {
			haxe_ui_scripting_ScriptInterp._classAliases = new haxe_ds_StringMap();
		}
		haxe_ui_scripting_ScriptInterp._classAliases.h[alias] = classPath;
	}
	static addStaticClass(alias,c) {
		if(haxe_ui_scripting_ScriptInterp._staticClasses == null) {
			haxe_ui_scripting_ScriptInterp._staticClasses = new haxe_ds_StringMap();
		}
		haxe_ui_scripting_ScriptInterp._staticClasses.h[alias] = c;
	}
}
$hxClasses["haxe.ui.scripting.ScriptInterp"] = haxe_ui_scripting_ScriptInterp;
haxe_ui_scripting_ScriptInterp.__name__ = "haxe.ui.scripting.ScriptInterp";
haxe_ui_scripting_ScriptInterp.__super__ = hscript_Interp;
Object.assign(haxe_ui_scripting_ScriptInterp.prototype, {
	__class__: haxe_ui_scripting_ScriptInterp
});
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__:true,__constructs__:null
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PERCENT",$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PX",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="REM",$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="CALC",$_.__params__ = ["s"],$_)
};
haxe_ui_styles_Dimension.__constructs__ = [haxe_ui_styles_Dimension.PERCENT,haxe_ui_styles_Dimension.PX,haxe_ui_styles_Dimension.VW,haxe_ui_styles_Dimension.VH,haxe_ui_styles_Dimension.REM,haxe_ui_styles_Dimension.CALC];
var haxe_ui_styles_EasingFunction = $hxEnums["haxe.ui.styles.EasingFunction"] = { __ename__:true,__constructs__:null
	,LINEAR: {_hx_name:"LINEAR",_hx_index:0,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE: {_hx_name:"EASE",_hx_index:1,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN: {_hx_name:"EASE_IN",_hx_index:2,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_OUT: {_hx_name:"EASE_OUT",_hx_index:3,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN_OUT: {_hx_name:"EASE_IN_OUT",_hx_index:4,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
};
haxe_ui_styles_EasingFunction.__constructs__ = [haxe_ui_styles_EasingFunction.LINEAR,haxe_ui_styles_EasingFunction.EASE,haxe_ui_styles_EasingFunction.EASE_IN,haxe_ui_styles_EasingFunction.EASE_OUT,haxe_ui_styles_EasingFunction.EASE_IN_OUT];
class haxe_ui_styles_Parser {
	constructor() {
	}
	parse(source) {
		let _gthis = this;
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		let styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			let i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			let _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e) {
			let id = e.matched(1);
			let data = e.matched(2);
			let keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e) {
				let selector = e.matched(1);
				let directives = e.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				let keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			styleSheet.addAnimation(new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes));
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e) {
			let selector = "";
			if(e.matched(2) == null) {
				selector = StringTools.trim(e.matched(5).split("\r\n").join("\n"));
			} else {
				selector = StringTools.trim(e.matched(2).split("\r\n").join("\n"));
			}
			selector = selector.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector.indexOf("@media") != -1) {
				let mediaQuery = selector.substring(selector.indexOf("(") + 1,selector.lastIndexOf(")"));
				let mediaStyleSheet = new haxe_ui_styles_Parser().parse(e.matched(3) + "\n}");
				let mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				let directives = _gthis.parseDirectives(e.matched(6));
				let selectors = selector.split(",");
				let _g = 0;
				while(_g < selectors.length) {
					let s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	parseDirectives(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		let ret = [];
		let rules = rulesString.split(";");
		let _g = 0;
		while(_g < rules.length) {
			let d = this.parseDirective(rules[_g++]);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	parseDirective(line) {
		let d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			let parts = line.split(":");
			let cssDirective = StringTools.trim(parts[0]);
			let cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
}
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
Object.assign(haxe_ui_styles_Parser.prototype, {
	__class__: haxe_ui_styles_Parser
});
class haxe_ui_styles_Style {
	constructor(left,top,autoWidth,width,percentWidth,initialWidth,initialPercentWidth,minWidth,minPercentWidth,maxWidth,maxPercentWidth,autoHeight,height,percentHeight,initialHeight,initialPercentHeight,minHeight,minPercentHeight,maxHeight,maxPercentHeight,padding,paddingTop,paddingLeft,paddingRight,paddingBottom,marginTop,marginLeft,marginRight,marginBottom,horizontalSpacing,verticalSpacing,color,backgroundColor,backgroundColorEnd,backgroundGradientStyle,backgroundOpacity,backgroundImage,backgroundImageRepeat,backgroundImageClipTop,backgroundImageClipLeft,backgroundImageClipBottom,backgroundImageClipRight,backgroundImageSliceTop,backgroundImageSliceLeft,backgroundImageSliceBottom,backgroundImageSliceRight,borderColor,borderTopColor,borderLeftColor,borderBottomColor,borderRightColor,borderSize,borderTopSize,borderLeftSize,borderBottomSize,borderRightSize,borderRadius,borderRadiusTopLeft,borderRadiusTopRight,borderRadiusBottomLeft,borderRadiusBottomRight,borderOpacity,borderStyle,icon,iconPosition,horizontalAlign,verticalAlign,textAlign,opacity,clip,native,fontName,fontSize,fontBold,fontUnderline,fontItalic,cursor,hidden,filter,backdropFilter,resource,animationName,animationOptions,mode,pointerEvents,contentType) {
		this.left = left;
		this.top = top;
		this.autoWidth = autoWidth;
		this.width = width;
		this.percentWidth = percentWidth;
		this.initialWidth = initialWidth;
		this.initialPercentWidth = initialPercentWidth;
		this.minWidth = minWidth;
		this.minPercentWidth = minPercentWidth;
		this.maxWidth = maxWidth;
		this.maxPercentWidth = maxPercentWidth;
		this.autoHeight = autoHeight;
		this.height = height;
		this.percentHeight = percentHeight;
		this.initialHeight = initialHeight;
		this.initialPercentHeight = initialPercentHeight;
		this.minHeight = minHeight;
		this.minPercentHeight = minPercentHeight;
		this.maxHeight = maxHeight;
		this.maxPercentHeight = maxPercentHeight;
		this.padding = padding;
		this.paddingTop = paddingTop;
		this.paddingLeft = paddingLeft;
		this.paddingRight = paddingRight;
		this.paddingBottom = paddingBottom;
		this.marginTop = marginTop;
		this.marginLeft = marginLeft;
		this.marginRight = marginRight;
		this.marginBottom = marginBottom;
		this.horizontalSpacing = horizontalSpacing;
		this.verticalSpacing = verticalSpacing;
		this.color = color;
		this.backgroundColor = backgroundColor;
		this.backgroundColorEnd = backgroundColorEnd;
		this.backgroundGradientStyle = backgroundGradientStyle;
		this.backgroundOpacity = backgroundOpacity;
		this.backgroundImage = backgroundImage;
		this.backgroundImageRepeat = backgroundImageRepeat;
		this.backgroundImageClipTop = backgroundImageClipTop;
		this.backgroundImageClipLeft = backgroundImageClipLeft;
		this.backgroundImageClipBottom = backgroundImageClipBottom;
		this.backgroundImageClipRight = backgroundImageClipRight;
		this.backgroundImageSliceTop = backgroundImageSliceTop;
		this.backgroundImageSliceLeft = backgroundImageSliceLeft;
		this.backgroundImageSliceBottom = backgroundImageSliceBottom;
		this.backgroundImageSliceRight = backgroundImageSliceRight;
		this.borderColor = borderColor;
		this.borderTopColor = borderTopColor;
		this.borderLeftColor = borderLeftColor;
		this.borderBottomColor = borderBottomColor;
		this.borderRightColor = borderRightColor;
		this.borderSize = borderSize;
		this.borderTopSize = borderTopSize;
		this.borderLeftSize = borderLeftSize;
		this.borderBottomSize = borderBottomSize;
		this.borderRightSize = borderRightSize;
		this.borderRadius = borderRadius;
		this.borderRadiusTopLeft = borderRadiusTopLeft;
		this.borderRadiusTopRight = borderRadiusTopRight;
		this.borderRadiusBottomLeft = borderRadiusBottomLeft;
		this.borderRadiusBottomRight = borderRadiusBottomRight;
		this.borderOpacity = borderOpacity;
		this.borderStyle = borderStyle;
		this.icon = icon;
		this.iconPosition = iconPosition;
		this.horizontalAlign = horizontalAlign;
		this.verticalAlign = verticalAlign;
		this.textAlign = textAlign;
		this.opacity = opacity;
		this.clip = clip;
		this.native = native;
		this.fontName = fontName;
		this.fontSize = fontSize;
		this.fontBold = fontBold;
		this.fontUnderline = fontUnderline;
		this.fontItalic = fontItalic;
		this.cursor = cursor;
		this.hidden = hidden;
		this.filter = filter;
		this.backdropFilter = backdropFilter;
		this.resource = resource;
		this.animationName = animationName;
		this.animationOptions = animationOptions;
		this.mode = mode;
		this.pointerEvents = pointerEvents;
		this.contentType = contentType;
	}
	mergeDirectives(map) {
		let key_keys = Object.keys(map.h);
		let key_length = key_keys.length;
		let key_current = 0;
		while(key_current < key_length) {
			let key = key_keys[key_current++];
			let v = map.h[key];
			switch(key) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				let _g = v.value;
				let tmp = _g._hx_index == 6 ? _g.v == "infinite" ? -1 : 0 : haxe_ui_styles_ValueTools.int(v.value);
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "backdrop-filter":
				let _g1 = v.value;
				switch(_g1._hx_index) {
				case 5:
					let arr = haxe_ui_styles_ValueTools.array(_g1.vl);
					arr.splice(0,0,_g1.f);
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter(arr)];
					break;
				case 6:
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter([_g1.v])];
					break;
				case 9:
					this.backdropFilter = null;
					break;
				default:
				}
				break;
			case "background-color":
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(Object.prototype.hasOwnProperty.call(map.h,"background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(map.h["background-color-end"].value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-left-radius":
				this.borderRadiusBottomLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-right-radius":
				this.borderRadiusBottomRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderBottomSize = 0;
				} else {
					this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderLeftSize = 0;
				} else {
					this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderRightSize = 0;
				} else {
					this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-left-radius":
				this.borderRadiusTopLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-right-radius":
				this.borderRadiusTopRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-size":case "border-top-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderTopSize = 0;
				} else {
					this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "content-type":
				this.contentType = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "filter":
				let _g2 = v.value;
				switch(_g2._hx_index) {
				case 5:
					let arr1 = haxe_ui_styles_ValueTools.array(_g2.vl);
					arr1.splice(0,0,_g2.f);
					this.filter = [haxe_ui_filters_FilterParser.parseFilter(arr1)];
					break;
				case 6:
					this.filter = [haxe_ui_filters_FilterParser.parseFilter([_g2.v])];
					break;
				case 9:
					this.filter = null;
					break;
				default:
				}
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-family":case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "pointer-events":
				if(v.value._hx_index == 9) {
					this.pointerEvents = "none";
				} else {
					this.pointerEvents = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			}
		}
	}
	apply(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.minPercentWidth != null) {
			this.minPercentWidth = s.minPercentWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.maxPercentWidth != null) {
			this.maxPercentWidth = s.maxPercentWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.minPercentHeight != null) {
			this.minPercentHeight = s.minPercentHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.maxPercentHeight != null) {
			this.maxPercentHeight = s.maxPercentHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderRadiusTopLeft != null) {
			this.borderRadiusTopLeft = s.borderRadiusTopLeft;
		}
		if(s.borderRadiusTopRight != null) {
			this.borderRadiusTopRight = s.borderRadiusTopRight;
		}
		if(s.borderRadiusBottomLeft != null) {
			this.borderRadiusBottomLeft = s.borderRadiusBottomLeft;
		}
		if(s.borderRadiusBottomRight != null) {
			this.borderRadiusBottomRight = s.borderRadiusBottomRight;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.backdropFilter != null) {
			this.backdropFilter = s.backdropFilter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
		if(s.pointerEvents != null) {
			this.pointerEvents = s.pointerEvents;
		}
		if(s.contentType != null) {
			this.contentType = s.contentType;
		}
	}
	equalTo(s) {
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.minPercentWidth != this.minPercentWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.maxPercentWidth != this.maxPercentWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.minPercentHeight != this.minPercentHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.maxPercentHeight != this.maxPercentHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.backgroundImage != this.backgroundImage) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderRadiusTopLeft != this.borderRadiusTopLeft) {
			return false;
		}
		if(s.borderRadiusTopRight != this.borderRadiusTopRight) {
			return false;
		}
		if(s.borderRadiusBottomLeft != this.borderRadiusBottomLeft) {
			return false;
		}
		if(s.borderRadiusBottomRight != this.borderRadiusBottomRight) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.backdropFilter != this.backdropFilter) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.icon != this.icon) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		if(s.pointerEvents != this.pointerEvents) {
			return false;
		}
		if(s.contentType != this.contentType) {
			return false;
		}
		return true;
	}
}
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
Object.assign(haxe_ui_styles_Style.prototype, {
	__class__: haxe_ui_styles_Style
	,left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,minWidth: null
	,minPercentWidth: null
	,maxWidth: null
	,maxPercentWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,minHeight: null
	,minPercentHeight: null
	,maxHeight: null
	,maxPercentHeight: null
	,padding: null
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundOpacity: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderRadiusTopLeft: null
	,borderRadiusTopRight: null
	,borderRadiusBottomLeft: null
	,borderRadiusBottomRight: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,cursor: null
	,hidden: null
	,filter: null
	,backdropFilter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,pointerEvents: null
	,contentType: null
});
class haxe_ui_styles_StyleSheet {
	constructor() {
		this._animations = new haxe_ds_StringMap();
		this._mediaQueries = [];
		this._rules = [];
		this._imports = [];
	}
	get_animations() {
		return this._animations;
	}
	addImport(el) {
		this._imports.push(el);
	}
	get_imports() {
		return this._imports;
	}
	get_rules() {
		let r = this._rules.slice();
		let _g = 0;
		let _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			let mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	removeAllRules() {
		this._rules = [];
	}
	clear() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	addRule(el) {
		this._rules.push(el);
	}
	addMediaQuery(el) {
		this._mediaQueries.push(el);
	}
	addAnimation(el) {
		this._animations.h[el.id] = el;
	}
	parse(css) {
		let ss = new haxe_ui_styles_Parser().parse(css);
		let f = new haxe_ui_styles_StyleSheet();
		let _g = 0;
		let _g1 = ss.get_imports();
		while(_g < _g1.length) {
			let i = _g1[_g++];
			let importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			f.merge(new haxe_ui_styles_Parser().parse(importCss));
		}
		f.merge(ss);
		this.merge(f);
	}
	merge(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		let k_keys = Object.keys(styleSheet._animations.h);
		let k_length = k_keys.length;
		let k_current = 0;
		while(k_current < k_length) {
			let k = k_keys[k_current++];
			this._animations.h[k] = styleSheet._animations.h[k];
		}
	}
	buildStyleFor(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		let _g = 0;
		let _g1 = this.get_rules();
		while(_g < _g1.length) {
			let r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
}
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
Object.assign(haxe_ui_styles_StyleSheet.prototype, {
	__class__: haxe_ui_styles_StyleSheet
	,name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,imports: null
	,rules: null
	,__properties__: {get_rules: "get_rules",get_imports: "get_imports",get_animations: "get_animations"}
});
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__:true,__constructs__:null
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VDimension",$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VColor",$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VCall",$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VConstant",$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VComposite",$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VTime",$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_name:"VNone",_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
haxe_ui_styles_Value.__constructs__ = [haxe_ui_styles_Value.VString,haxe_ui_styles_Value.VNumber,haxe_ui_styles_Value.VBool,haxe_ui_styles_Value.VDimension,haxe_ui_styles_Value.VColor,haxe_ui_styles_Value.VCall,haxe_ui_styles_Value.VConstant,haxe_ui_styles_Value.VComposite,haxe_ui_styles_Value.VTime,haxe_ui_styles_Value.VNone];
class haxe_ui_styles_ValueTools {
	static parse(s) {
		let v = null;
		let hasSpace = s.indexOf(" ") != -1;
		if(s.endsWith("%") == true && hasSpace == false) {
			v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
		} else if(s.endsWith("px") == true && hasSpace == false) {
			v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
		} else if(s.endsWith("vw") == true && hasSpace == false) {
			v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
		} else if(s.endsWith("vh") == true && hasSpace == false) {
			v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
		} else if(s.endsWith("rem") == true && hasSpace == false) {
			v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
		} else if(haxe_ui_styles_ValueTools.validColor(s)) {
			v = haxe_ui_styles_ValueTools.parseColor(s);
		} else if(s == "none") {
			v = haxe_ui_styles_Value.VNone;
		} else if(s.indexOf("(") != -1 && s.endsWith(")")) {
			let n = s.indexOf("(");
			let f = HxOverrides.substr(s,0,n);
			let params = HxOverrides.substr(s,n + 1,s.length - n - 2);
			if(f == "calc") {
				params = "'" + params + "'";
			}
			let vl = [];
			let _g = 0;
			let _g1 = params.split(",");
			while(_g < _g1.length) {
				let p = _g1[_g];
				++_g;
				p = StringTools.trim(p);
				vl.push(haxe_ui_styles_ValueTools.parse(p));
			}
			v = haxe_ui_styles_Value.VCall(f,vl);
		} else if(s.startsWith("\"") && s.endsWith("\"")) {
			v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
		} else if(s.startsWith("'") && s.endsWith("'")) {
			v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
		} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
			v = haxe_ui_styles_Value.VNumber(parseFloat(s));
		} else if(s == "true" || s == "false") {
			v = haxe_ui_styles_Value.VBool(s == "true");
		} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
			v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
		} else {
			let arr = s.split(" ");
			if(arr.length == 1) {
				v = haxe_ui_styles_Value.VConstant(s);
			} else {
				let vl = [];
				let _g = 0;
				while(_g < arr.length) {
					let a = arr[_g];
					++_g;
					a = StringTools.trim(a);
					vl.push(haxe_ui_styles_ValueTools.parse(a));
				}
				v = haxe_ui_styles_Value.VComposite(vl);
			}
		}
		return v;
	}
	static composite(value) {
		if(value == null) {
			return null;
		}
		switch(value._hx_index) {
		case 1:
			return [value];
		case 3:
			return [value];
		case 7:
			return value.vl;
		case 9:
			return [];
		default:
			return null;
		}
	}
	static isNum(s) {
		let b = true;
		let _g = 0;
		let _g1 = s.length;
		while(_g < _g1) {
			let c = HxOverrides.cca(s,_g++);
			if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
				b = false;
				break;
			}
		}
		return b;
	}
	static parseColor(s) {
		if(s.startsWith("#")) {
			s = s.substring(1);
			if(s.length == 6) {
				return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s));
			} else if(s.length == 3) {
				return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2)));
			}
		} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
			return haxe_ui_styles_Value.VColor(haxe_ui_styles_ValueTools.colors.h[s]);
		}
		return null;
	}
	static validColor(s) {
		if(s.startsWith("#") && (s.length == 7 || s.length == 4)) {
			return true;
		} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
			return true;
		}
		return false;
	}
	static time(value) {
		if(value == null) {
			return null;
		}
		if(value._hx_index == 8) {
			let _g = value.v;
			switch(value.unit) {
			case "ms":
				return _g / 1000;
			case "s":
				return _g;
			default:
				return null;
			}
		} else {
			return null;
		}
	}
	static string(value) {
		if(value == null) {
			return null;
		}
		switch(value._hx_index) {
		case 0:
			return value.v;
		case 2:
			let _g = value.v;
			if(_g == null) {
				return "null";
			} else {
				return "" + _g;
			}
			break;
		case 5:
			return haxe_ui_styles_ValueTools.call(value.f,value.vl);
		case 6:
			return value.v;
		default:
			return null;
		}
	}
	static bool(value) {
		if(value == null) {
			return null;
		}
		if(value._hx_index == 2) {
			return value.v;
		} else {
			return null;
		}
	}
	static int(value) {
		if(value == null) {
			return null;
		}
		switch(value._hx_index) {
		case 1:
			return value.v | 0;
		case 4:
			return value.v;
		case 5:
			return haxe_ui_styles_ValueTools.call(value.f,value.vl);
		case 9:
			return null;
		default:
			return null;
		}
	}
	static float(value) {
		if(value == null) {
			return null;
		}
		switch(value._hx_index) {
		case 1:
			return value.v;
		case 4:
			return value.v;
		case 9:
			return null;
		default:
			return null;
		}
	}
	static any(v) {
		if(v == null) {
			return null;
		}
		switch(v._hx_index) {
		case 1:
			return v.v;
		case 2:
			return v.v;
		case 3:
			let _g = v.v;
			if(_g._hx_index == 1) {
				return _g.value;
			} else {
				return null;
			}
			break;
		case 4:
			return v.v;
		default:
			return null;
		}
	}
	static array(vl) {
		let arr = [];
		let _g = 0;
		while(_g < vl.length) {
			let a = haxe_ui_styles_ValueTools.any(vl[_g++]);
			if(a != null) {
				arr.push(a);
			}
		}
		return arr;
	}
	static percent(value) {
		if(value == null) {
			return null;
		}
		if(value._hx_index == 3) {
			let _g = value.v;
			if(_g._hx_index == 0) {
				return _g.value;
			} else {
				return null;
			}
		} else {
			return null;
		}
	}
	static constant(value,required) {
		if(value == null) {
			return false;
		}
		if(value._hx_index == 6) {
			return value.v == required;
		} else {
			return false;
		}
	}
	static calcDimension(value) {
		if(value == null) {
			return null;
		}
		switch(value._hx_index) {
		case 1:
			return value.v;
		case 3:
			let _g = value.v;
			switch(_g._hx_index) {
			case 1:
				return _g.value;
			case 2:
				return _g.value / 100 * haxe_ui_core_Screen.get_instance().get_width();
			case 3:
				return _g.value / 100 * haxe_ui_core_Screen.get_instance().get_height();
			case 4:
				return _g.value * haxe_ui_Toolkit.pixelsPerRem;
			default:
				return null;
			}
			break;
		case 5:
			return haxe_ui_styles_ValueTools.call(value.f,value.vl);
		case 9:
			return null;
		default:
			return null;
		}
	}
	static calcEasing(value) {
		switch(value._hx_index) {
		case 0:
			switch(value.v) {
			case "ease":
				return haxe_ui_styles_EasingFunction.EASE;
			case "ease-in":
				return haxe_ui_styles_EasingFunction.EASE_IN;
			case "ease-in-out":
				return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
			case "ease-out":
				return haxe_ui_styles_EasingFunction.EASE_OUT;
			case "linear":
				return haxe_ui_styles_EasingFunction.LINEAR;
			default:
				return null;
			}
			break;
		case 6:
			switch(value.v) {
			case "ease":
				return haxe_ui_styles_EasingFunction.EASE;
			case "ease-in":
				return haxe_ui_styles_EasingFunction.EASE_IN;
			case "ease-in-out":
				return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
			case "ease-out":
				return haxe_ui_styles_EasingFunction.EASE_OUT;
			case "linear":
				return haxe_ui_styles_EasingFunction.LINEAR;
			default:
				return null;
			}
			break;
		default:
			return null;
		}
	}
	static call(f,vl) {
		switch(f) {
		case "calc":
			let program = new hscript_Parser().parseString(haxe_ui_styles_ValueTools.string(vl[0]));
			return new hscript_Interp().expr(program);
		case "platform-color":
			return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
		case "theme-icon":case "theme-image":
			haxe_Log.trace("here",{ fileName : "haxe/ui/styles/ValueTools.hx", lineNumber : 386, className : "haxe.ui.styles.ValueTools", methodName : "call"});
			return haxe_ui_themes_ThemeManager.get_instance().image(haxe_ui_styles_ValueTools.string(vl[0]));
		default:
			return null;
		}
	}
}
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
class haxe_ui_styles_animation_AnimationOptions {
	constructor(duration,delay,iterationCount,easingFunction,direction,fillMode) {
		this.duration = duration;
		this.delay = delay;
		this.iterationCount = iterationCount;
		this.easingFunction = easingFunction;
		this.direction = direction;
		this.fillMode = fillMode;
	}
	compareTo(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	compareToAnimation(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
}
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
Object.assign(haxe_ui_styles_animation_AnimationOptions.prototype, {
	__class__: haxe_ui_styles_animation_AnimationOptions
	,duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
});
class haxe_ui_styles_animation_Animation {
	constructor(target,options) {
		this._initialized = false;
		this._currentIterationCount = -1;
		this._currentKeyFrameIndex = -1;
		this.iterationCount = 1;
		this.fillMode = "forwards";
		this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
		this.duration = 0;
		this.direction = "normal";
		this.delay = 0;
		this.target = target;
		if(options != null) {
			if(options.duration != null) {
				this.duration = options.duration;
			}
			if(options.easingFunction != null) {
				this.easingFunction = options.easingFunction;
			}
			if(options.delay != null) {
				this.delay = options.delay;
			}
			if(options.iterationCount != null) {
				this.iterationCount = options.iterationCount;
			}
			if(options.direction != null) {
				this.direction = options.direction;
			}
			if(options.fillMode != null) {
				this.fillMode = options.fillMode;
			}
		}
	}
	run(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	stop() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		let currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	get_keyframeCount() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	get_currentKeyFrame() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	_initialize() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		let currentTime = 0;
		let _g = 0;
		let _g1 = this._keyframes;
		while(_g < _g1.length) {
			let keyframe = _g1[_g];
			++_g;
			switch(this.direction) {
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			case "alternate":case "normal":
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			let keyframe = new haxe_ui_styles_animation_KeyFrame();
			keyframe.time = this.delay;
			keyframe.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe);
		} else if(this.delay < 0) {
			currentTime = 0;
			let lastKeyframe = null;
			while(this._keyframes.length > 0) {
				let keyframe = this._keyframes[0];
				currentTime -= keyframe.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe;
					this._keyframes.splice(0,1);
				} else {
					keyframe.delay = -(currentTime - this.delay + keyframe.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	_runNextKeyframe(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			let _g = $bind(this,this._runNextKeyframe);
			let onFinish1 = onFinish;
			let tmp = function() {
				_g(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	_addAlternateKeyframes() {
		let i = this._keyframes.length;
		while(--i >= 0) {
			let keyframe = this._keyframes[i];
			let newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	_reverseCurrentKeyframes() {
		this._keyframes.reverse();
		let func = this._getReverseEasingFunction(this.easingFunction);
		let _g = 0;
		let _g1 = this._keyframes;
		while(_g < _g1.length) _g1[_g++].easingFunction = func;
	}
	_getReverseEasingFunction(easingFunction) {
		switch(easingFunction._hx_index) {
		case 2:
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case 3:
			return haxe_ui_styles_EasingFunction.EASE_IN;
		default:
			return easingFunction;
		}
	}
	_saveState() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		let _g = 0;
		let _g1 = this._keyframes;
		while(_g < _g1.length) {
			let _g2 = 0;
			let _g3 = _g1[_g++].directives;
			while(_g2 < _g3.length) {
				let property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(_g3[_g2++].directive);
				if(!Object.prototype.hasOwnProperty.call(this._initialState.h,property)) {
					let this1 = this._initialState;
					let value = Reflect.getProperty(this.target,property);
					this1.h[property] = value;
				}
			}
		}
	}
	_restoreState() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			let property_keys = Object.keys(this._initialState.h);
			let property_length = property_keys.length;
			let property_current = 0;
			while(property_current < property_length) {
				let property = property_keys[property_current++];
				Reflect.setProperty(this.target,property,this._initialState.h[property]);
			}
			this._initialState = null;
		}
	}
	_shouldRestoreState() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	static createWithKeyFrames(animationKeyFrames,target,options) {
		let animation = new haxe_ui_styles_animation_Animation(target,options);
		animation.name = animationKeyFrames.id;
		if(animation._keyframes == null) {
			animation._keyframes = [];
		}
		let _g = 0;
		let _g1 = animationKeyFrames.get_keyFrames();
		while(_g < _g1.length) {
			let keyFrame = _g1[_g];
			++_g;
			let kf = new haxe_ui_styles_animation_KeyFrame();
			let _g2 = keyFrame.time;
			if(_g2._hx_index == 3) {
				let _g = _g2.v;
				if(_g._hx_index == 0) {
					kf.time = _g.value / 100;
					kf.easingFunction = animation.easingFunction;
					kf.directives = keyFrame.directives;
					animation._keyframes.push(kf);
				}
			}
		}
		return animation;
	}
}
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
Object.assign(haxe_ui_styles_animation_Animation.prototype, {
	__class__: haxe_ui_styles_animation_Animation
	,delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,__properties__: {get_keyframeCount: "get_keyframeCount",get_currentKeyFrame: "get_currentKeyFrame"}
});
class haxe_ui_styles_animation_KeyFrame {
	constructor() {
		this.delay = 0;
		this.time = 0;
		this.directives = [];
	}
	stop() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	run(target,cb) {
		if(this._actuator != null) {
			return;
		}
		let properties = { };
		let _gthis = this;
		let _g = 0;
		let _g1 = this.directives;
		while(_g < _g1.length) {
			let d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},null));
		this._actuator.run();
	}
}
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
Object.assign(haxe_ui_styles_animation_KeyFrame.prototype, {
	__class__: haxe_ui_styles_animation_KeyFrame
	,directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
});
class haxe_ui_styles_animation_util_ActuatorOptions {
	constructor(delay,easingFunction,onComplete,onUpdate) {
		this.delay = delay;
		this.easingFunction = easingFunction;
		this.onComplete = onComplete;
		this.onUpdate = onUpdate;
	}
}
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
Object.assign(haxe_ui_styles_animation_util_ActuatorOptions.prototype, {
	__class__: haxe_ui_styles_animation_util_ActuatorOptions
	,delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
});
class haxe_ui_styles_animation_util_Actuator {
	constructor(target,properties,duration,options) {
		this.delay = 0;
		this.duration = 0;
		this.target = target;
		this.properties = properties;
		this.duration = duration;
		if(options != null) {
			this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : haxe_ui_styles_EasingFunction.EASE);
			if(options.delay != null) {
				this.delay = options.delay;
			}
			if(options.onComplete != null) {
				this._onComplete = options.onComplete;
			}
			if(options.onUpdate != null) {
				this._onUpdate = options.onUpdate;
			}
		}
	}
	stop() {
		this._stopped = true;
	}
	run() {
		this._initialize();
		this._stopped = false;
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			this._currentTime = HxOverrides.now() / 1000;
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay($bind(this,this._nextFrame),this.delay * 1000 | 0);
			} else {
				new haxe_ui_CallLater($bind(this,this._nextFrame));
			}
		}
	}
	_initialize() {
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		this._stringPropertyDetails = [];
		let _g = 0;
		let _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			let p = _g1[_g];
			++_g;
			let componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			let end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				let _g = end.v;
				if(_g._hx_index == 0) {
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			let start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				switch(end._hx_index) {
				case 0:
					start = end.v;
					break;
				case 1:
					start = 0;
					break;
				case 3:
					let _g2 = end.v;
					if(_g2._hx_index == 0) {
						start = 0;
					}
					break;
				default:
				}
			}
			let isVariant = false;
			if(start != null) {
				if(start._hx_index == 2) {
					start = start.s;
					isVariant = true;
				}
			}
			if(end != null) {
				if(end._hx_index == 2) {
					end = end.s;
					isVariant = true;
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 0:
				let startVal = start;
				let endVal = haxe_ui_styles_ValueTools.string(end);
				if(endVal.indexOf("[[") != -1) {
					let before = HxOverrides.substr(endVal,0,endVal.indexOf("[["));
					let after = HxOverrides.substr(endVal,endVal.indexOf("]]") + 2,null);
					let s = StringTools.replace(startVal,before,"");
					s = StringTools.replace(s,after,"");
					let startInt = Std.parseInt(s);
					let s1 = StringTools.replace(endVal,before + "[[","");
					s1 = StringTools.replace(s1,"]]" + after,"");
					let endInt = Std.parseInt(s1);
					let details = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					details.pattern = before + "[[n]]" + after;
					details.startInt = startInt;
					details.changeInt = endInt - startInt;
					let c = js_Boot.getClass(this.target);
					let typeInfo = haxe_ui_core_TypeMap.getTypeInfo(c.__name__,componentProperty);
					if(typeInfo != null && isVariant == false && typeInfo == "Variant") {
						isVariant = true;
					}
					details.isVariant = isVariant;
					this._stringPropertyDetails.push(details);
				} else {
					this._stringPropertyDetails.push(new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal));
				}
				break;
			case 3:
				let _g3 = end.v;
				if(_g3._hx_index == 0) {
					let val = _g3.value;
					if(val != null) {
						this._propertyDetails.push(new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start));
					}
				} else {
					let val = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val != null) {
						this._propertyDetails.push(new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start));
					} else {
						this._propertyDetails.push(new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start));
					}
				}
				break;
			case 4:
				let startColor = js_Boot.__cast(start , Int);
				let endColor = end.v;
				let details = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details);
				break;
			default:
				let val = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val != null) {
					this._propertyDetails.push(new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start));
				} else {
					this._propertyDetails.push(new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start));
				}
			}
		}
	}
	_nextFrame() {
		if(this._stopped == true) {
			return;
		}
		let currentTime = HxOverrides.now() / 1000;
		let delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		let tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime);
		}
		if(delta >= this.duration) {
			this._finish();
		} else {
			new haxe_ui_CallLater($bind(this,this._nextFrame));
		}
	}
	_apply(position) {
		position = this._easeFunc(position);
		let _g = 0;
		let _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			let details = _g1[_g];
			++_g;
			Reflect.setProperty(this.target,details.propertyName,details.start + details.change * position);
		}
		let _g2 = 0;
		let _g3 = this._stringPropertyDetails;
		while(_g2 < _g3.length) {
			let details = _g3[_g2];
			++_g2;
			if(details.pattern != null) {
				let newString = StringTools.replace(details.pattern,"[[n]]","" + (details.startInt + position * details.changeInt | 0));
				if(details.isVariant) {
					let v = haxe_ui_util_Variant.fromString(newString);
					Reflect.setProperty(this.target,details.propertyName,v);
				} else {
					Reflect.setProperty(this.target,details.propertyName,newString);
				}
			} else if(position != 1) {
				Reflect.setProperty(this.target,details.propertyName,details.start);
			} else {
				Reflect.setProperty(this.target,details.propertyName,details.end);
			}
		}
		let _g4 = 0;
		let _g5 = this._colorPropertyDetails;
		while(_g4 < _g5.length) {
			let details = _g5[_g4];
			++_g4;
			Reflect.setProperty(details.target,details.propertyName,haxe_ui_util_Color.fromComponents((details.start >> 16 & 255) + details.changeR * position | 0,(details.start >> 8 & 255) + details.changeG * position | 0,(details.start & 255) + details.changeB * position | 0,(details.start >> 24 & 255) + details.changeA * position | 0));
		}
	}
	_finish() {
		this._stopped = true;
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
}
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
Object.assign(haxe_ui_styles_animation_util_Actuator.prototype, {
	__class__: haxe_ui_styles_animation_util_Actuator
	,target: null
	,properties: null
	,duration: null
	,delay: null
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_stringPropertyDetails: null
});
class haxe_ui_styles_animation_util__$Actuator_Ease {
	static get(easingFunction) {
		switch(easingFunction._hx_index) {
		case 0:
			return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
		case 2:
			return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
		case 3:
			return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
		case 1:case 4:
			return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
		}
	}
	static linear(k) {
		return k;
	}
	static easeIn(k) {
		return k * k * k;
	}
	static easeOut(k) {
		return --k * k * k + 1;
	}
	static easeInOut(k) {
		if((k /= 0.5) < 1) {
			return 0.5 * k * k * k;
		} else {
			return 0.5 * ((k -= 2) * k * k + 2);
		}
	}
}
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
class haxe_ui_styles_animation_util_ColorPropertyDetails {
	constructor(target,propertyName,start,changeR,changeG,changeB,changeA) {
		this.target = target;
		this.propertyName = propertyName;
		this.start = start;
		this.changeR = changeR;
		this.changeG = changeG;
		this.changeB = changeB;
		this.changeA = changeA;
	}
}
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
Object.assign(haxe_ui_styles_animation_util_ColorPropertyDetails.prototype, {
	__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
	,changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
});
class haxe_ui_styles_animation_util_PropertyDetails {
	constructor(target,propertyName,start,change) {
		this.target = target;
		this.propertyName = propertyName;
		this.start = start;
		this.change = change;
	}
}
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
Object.assign(haxe_ui_styles_animation_util_PropertyDetails.prototype, {
	__class__: haxe_ui_styles_animation_util_PropertyDetails
	,change: null
	,propertyName: null
	,start: null
	,target: null
});
class haxe_ui_styles_animation_util_StringPropertyDetails {
	constructor(target,propertyName,start,end) {
		this.isVariant = false;
		this.pattern = null;
		this.target = target;
		this.propertyName = propertyName;
		this.start = start;
		this.end = end;
	}
}
$hxClasses["haxe.ui.styles.animation.util.StringPropertyDetails"] = haxe_ui_styles_animation_util_StringPropertyDetails;
haxe_ui_styles_animation_util_StringPropertyDetails.__name__ = "haxe.ui.styles.animation.util.StringPropertyDetails";
Object.assign(haxe_ui_styles_animation_util_StringPropertyDetails.prototype, {
	__class__: haxe_ui_styles_animation_util_StringPropertyDetails
	,propertyName: null
	,start: null
	,end: null
	,target: null
	,startInt: null
	,changeInt: null
	,pattern: null
	,isVariant: null
});
class haxe_ui_styles_elements_AnimationKeyFrame {
	constructor() {
	}
}
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
Object.assign(haxe_ui_styles_elements_AnimationKeyFrame.prototype, {
	__class__: haxe_ui_styles_elements_AnimationKeyFrame
	,time: null
	,directives: null
});
class haxe_ui_styles_elements_AnimationKeyFrames {
	constructor(id,keyframes) {
		this._keyframes = [];
		this.id = id;
		this._keyframes = keyframes;
	}
	get_keyFrames() {
		return this._keyframes;
	}
}
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
Object.assign(haxe_ui_styles_elements_AnimationKeyFrames.prototype, {
	__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,id: null
	,_keyframes: null
	,keyFrames: null
	,__properties__: {get_keyFrames: "get_keyFrames"}
});
class haxe_ui_styles_elements_Directive {
	constructor(directive,value,defective) {
		if(defective == null) {
			defective = false;
		}
		this.defective = false;
		this.value = null;
		this.directive = null;
		this.directive = directive;
		this.value = value;
		this.defective = defective;
	}
}
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
Object.assign(haxe_ui_styles_elements_Directive.prototype, {
	__class__: haxe_ui_styles_elements_Directive
	,directive: null
	,value: null
	,defective: null
});
class haxe_ui_styles_elements_ImportElement {
	constructor(url) {
		this.url = url;
	}
}
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
Object.assign(haxe_ui_styles_elements_ImportElement.prototype, {
	__class__: haxe_ui_styles_elements_ImportElement
	,url: null
});
class haxe_ui_styles_elements_MediaQuery {
	constructor(directives,styleSheet) {
		this._directives = [];
		this._directives = directives;
		this._styleSheet = styleSheet;
	}
	get_relevant() {
		let b = true;
		let _g = 0;
		let _g1 = this._directives;
		while(_g < _g1.length) {
			let d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				let sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				let sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				let v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
			}
		}
		return b;
	}
	buildRatio(s) {
		let p = s.split("/");
		return Std.parseInt(StringTools.trim(p[0])) / Std.parseInt(StringTools.trim(p[1]));
	}
	get_styleSheet() {
		return this._styleSheet;
	}
}
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
Object.assign(haxe_ui_styles_elements_MediaQuery.prototype, {
	__class__: haxe_ui_styles_elements_MediaQuery
	,_directives: null
	,_styleSheet: null
	,relevant: null
	,styleSheet: null
	,__properties__: {get_styleSheet: "get_styleSheet",get_relevant: "get_relevant"}
});
class haxe_ui_styles_elements_RuleElement {
	constructor(selector,directives) {
		this.directives = new haxe_ds_StringMap();
		this.selector = new haxe_ui_styles_elements_Selector(selector);
		let _g = 0;
		while(_g < directives.length) this.processDirective(directives[_g++]);
	}
	match(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	processDirective(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-bottom":
			this.processComposite(d,["border-bottom-size","border-bottom-style","border-bottom-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-left":
			this.processComposite(d,["border-left-size","border-left-style","border-left-color"]);
			break;
		case "border-right":
			this.processComposite(d,["border-right-size","border-right-style","border-right-color"]);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "border-top":
			this.processComposite(d,["border-top-size","border-top-style","border-top-color"]);
			break;
		case "font-style":
			let v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			let _g = 0;
			while(_g < v1.length) {
				let s = haxe_ui_styles_ValueTools.string(v1[_g++]).toLowerCase();
				if(s == "bold") {
					this.directives.h["font-bold"] = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
				} else if(s == "italic") {
					this.directives.h["font-italic"] = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
				} else if(s == "underline") {
					this.directives.h["font-underline"] = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
				}
			}
			break;
		case "margin":
			let vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			let vl1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl1.length == 4 || vl1.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl1.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl1[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl1[1]),["padding-left","padding-right"]);
			} else if(vl1.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			this.directives.h[d.directive] = d;
		}
	}
	processComposite(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		let _g = 0;
		while(_g < parts.length) {
			let p = parts[_g];
			++_g;
			let _this = this.directives;
			if(Object.prototype.hasOwnProperty.call(_this.h,p)) {
				delete(_this.h[p]);
			}
		}
		let _g1 = d.value;
		switch(_g1._hx_index) {
		case 1:
			let _g2 = 0;
			while(_g2 < parts.length) {
				let p = parts[_g2];
				++_g2;
				this.directives.h[p] = new haxe_ui_styles_elements_Directive(p,d.value);
			}
			break;
		case 3:
			let _g3 = _g1.v;
			let _g4 = 0;
			while(_g4 < parts.length) {
				let p = parts[_g4];
				++_g4;
				this.directives.h[p] = new haxe_ui_styles_elements_Directive(p,haxe_ui_styles_Value.VDimension(_g3));
			}
			break;
		case 4:
			if(duplicate == false) {
				this.directives.h[parts[0]] = new haxe_ui_styles_elements_Directive(parts[0],d.value);
			} else {
				let _g = 0;
				while(_g < parts.length) {
					let p = parts[_g];
					++_g;
					this.directives.h[p] = new haxe_ui_styles_elements_Directive(p,d.value);
				}
			}
			break;
		case 6:
			break;
		case 7:
			let _g5 = _g1.vl;
			let n = 0;
			let _g6 = 0;
			while(_g6 < parts.length) {
				let p = parts[_g6];
				++_g6;
				if(_g5[n] != null) {
					let nd = new haxe_ui_styles_elements_Directive(p,_g5[n]);
					this.processDirective(nd);
					this.directives.h[p] = nd;
				}
				++n;
			}
			break;
		case 9:
			let _g7 = 0;
			while(_g7 < parts.length) {
				let p = parts[_g7];
				++_g7;
				let nd = new haxe_ui_styles_elements_Directive(p,d.value);
				this.processDirective(nd);
				this.directives.h[p] = nd;
			}
			break;
		default:
		}
	}
	static ruleMatch(c,d) {
		if(c.nodeName == "*") {
			return true;
		}
		if(c.pseudoClass != null) {
			if(d.classes.indexOf(":" + c.pseudoClass) == -1) {
				return false;
			}
		}
		if(c.className != null) {
			let _g = 0;
			let _g1 = c.get_classNameParts();
			while(_g < _g1.length) if(d.classes.indexOf(_g1[_g++]) == -1) {
				return false;
			}
		}
		if(c.nodeName != null) {
			let c1 = js_Boot.getClass(d);
			let className = c1.__name__.split(".").pop().toLowerCase();
			if(c.nodeName != className) {
				return false;
			}
		}
		if(c.id != null && c.id != d.get_id()) {
			return false;
		}
		if(c.parent != null) {
			if(c.direct == true) {
				let p = d.parentComponent;
				if(p == null) {
					return false;
				}
				if(!haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
					return false;
				}
			} else {
				let p = d.parentComponent;
				while(p != null) {
					if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
						break;
					}
					p = p.parentComponent;
				}
				if(p == null) {
					return false;
				}
			}
		}
		return true;
	}
}
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
Object.assign(haxe_ui_styles_elements_RuleElement.prototype, {
	__class__: haxe_ui_styles_elements_RuleElement
	,selector: null
	,directives: null
});
class haxe_ui_styles_elements_Selector {
	constructor(s) {
		this.parts = [];
		s = StringTools.replace(s,">"," > ");
		let p = s.split(" ");
		let parent = null;
		let nextDirect = false;
		let _g = 0;
		while(_g < p.length) {
			let i = p[_g];
			++_g;
			i = StringTools.trim(i);
			if(i.length == 0) {
				continue;
			}
			if(i == ">") {
				nextDirect = true;
				continue;
			}
			let current = new haxe_ui_styles_elements_SelectorPart();
			if(nextDirect == true) {
				current.direct = true;
				nextDirect = false;
			}
			current.parent = parent;
			let p1 = i.split(":");
			current.pseudoClass = p1[1];
			let main = p1[0];
			if(main.charAt(0) == ".") {
				current.className = main.substring(1);
			} else {
				let p2 = main.split(".");
				if(p2[0].charAt(0) == "#") {
					current.id = p2[0].substring(1);
				} else {
					current.nodeName = p2[0].toLowerCase();
				}
				current.className = p2[1];
			}
			this.parts.push(current);
			parent = current;
		}
	}
}
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
Object.assign(haxe_ui_styles_elements_Selector.prototype, {
	__class__: haxe_ui_styles_elements_Selector
	,parts: null
});
class haxe_ui_styles_elements_SelectorPart {
	constructor() {
		this._parts = null;
		this.direct = false;
		this.nodeName = null;
		this.id = null;
		this.className = null;
		this.pseudoClass = null;
		this.parent = null;
	}
	get_classNameParts() {
		if(this.className == null) {
			return null;
		}
		if(this._parts == null) {
			this._parts = this.className.split(".");
		}
		return this._parts;
	}
}
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
Object.assign(haxe_ui_styles_elements_SelectorPart.prototype, {
	__class__: haxe_ui_styles_elements_SelectorPart
	,parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,direct: null
	,_parts: null
	,classNameParts: null
	,__properties__: {get_classNameParts: "get_classNameParts"}
});
class haxe_ui_themes_Theme {
	constructor() {
		this.styles = [];
		this.images = [];
	}
}
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
Object.assign(haxe_ui_themes_Theme.prototype, {
	__class__: haxe_ui_themes_Theme
	,parent: null
	,styles: null
	,images: null
});
class haxe_ui_themes_ThemeManager {
	constructor() {
		this._themes = new haxe_ds_StringMap();
	}
	getTheme(themeName) {
		let theme = this._themes.h[themeName];
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			this._themes.h[themeName] = theme;
		}
		return theme;
	}
	addStyleResource(themeName,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority});
	}
	applyTheme(themeName) {
		haxe_ui_Toolkit.styleSheet.clear("default");
		let entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		let _g = 0;
		while(_g < entries.length) this.applyResource(entries[_g++].resourceId);
		let images = [];
		this.buildThemeImages("global",images);
		this.buildThemeImages(themeName,images);
		haxe_ds_ArraySort.sort(images,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		let _g1 = 0;
		while(_g1 < images.length) {
			let i = images[_g1];
			++_g1;
			if(this._themeImages == null) {
				this._themeImages = new haxe_ds_StringMap();
			}
			this._themeImages.h[i.id] = i;
		}
	}
	applyResource(resourceId) {
		let style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		if(style != null) {
			this.addStyleString(style);
		}
	}
	addStyleString(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	buildThemeEntries(themeName,arr) {
		let theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		let _g = 0;
		let _g1 = theme.styles;
		while(_g < _g1.length) arr.push(_g1[_g++]);
	}
	buildThemeImages(themeName,arr) {
		let theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeImages(theme.parent,arr);
		}
		let _g = 0;
		let _g1 = theme.images;
		while(_g < _g1.length) arr.push(_g1[_g++]);
	}
	image(id) {
		let image = this._themeImages.h[id];
		if(image == null) {
			return null;
		}
		return image.resourceId;
	}
	static get_instance() {
		if(haxe_ui_themes_ThemeManager._instance == null) {
			haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
		}
		return haxe_ui_themes_ThemeManager._instance;
	}
}
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_themes_ThemeManager.prototype, {
	__class__: haxe_ui_themes_ThemeManager
	,_themes: null
	,_themeImages: null
});
class haxe_ui_tooltips_ToolTip extends haxe_ui_containers_Box {
	constructor() {
		super();
	}
	registerBehaviours() {
		super.registerBehaviours();
	}
	cloneComponent() {
		let c = super.cloneComponent();
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			let _g = 0;
			let _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) c.addComponent(_g1[_g++].cloneComponent());
		}
		haxe_ui_binding_BindingManager.get_instance().cloneBinding(this,c);
		return c;
	}
	self() {
		return new haxe_ui_tooltips_ToolTip();
	}
}
$hxClasses["haxe.ui.tooltips.ToolTip"] = haxe_ui_tooltips_ToolTip;
haxe_ui_tooltips_ToolTip.__name__ = "haxe.ui.tooltips.ToolTip";
haxe_ui_tooltips_ToolTip.__super__ = haxe_ui_containers_Box;
Object.assign(haxe_ui_tooltips_ToolTip.prototype, {
	__class__: haxe_ui_tooltips_ToolTip
});
class haxe_ui_tooltips_ToolTipManager {
	constructor() {
		this._toolTipContents = null;
		this._toolTip = null;
		this._timer = null;
		this._currentComponent = null;
		this._lastMouseEvent = null;
		this._toolTipOptions = new haxe_ds_ObjectMap();
	}
	registerTooltip(target,options) {
		if(this._toolTipOptions.h.__keys__[target.__id__] != null) {
			return;
		}
		if(options == null) {
			options = { };
		}
		if(options.tipData == null) {
			options.tipData = { text : target.get_tooltip()};
		}
		this._toolTipOptions.set(target,options);
		target.registerEvent("mouseover",$bind(this,this.onTargetMouseOver));
	}
	unregisterTooltip(target) {
		target.unregisterEvent("mouseover",$bind(this,this.onTargetMouseOver));
		target.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
		target.unregisterEvent("mousemove",$bind(this,this.onTargetMouseMove));
		this._toolTipOptions.remove(target);
	}
	getTooltipOptions(target) {
		return this._toolTipOptions.h[target.__id__];
	}
	updateTooltipRenderer(target,renderer) {
		if(this._toolTipOptions.h.__keys__[target.__id__] == null) {
			return;
		}
		this._toolTipOptions.h[target.__id__].renderer = renderer;
	}
	onTargetMouseOver(event) {
		this.stopCurrent();
		this._lastMouseEvent = event;
		this._currentComponent = event.target;
		event.target.registerEvent("mouseout",$bind(this,this.onTargetMouseOut));
		event.target.registerEvent("mousemove",$bind(this,this.onTargetMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this.startTimer();
	}
	onTargetMouseMove(event) {
		if(this._toolTip != null && this._toolTip.get_hidden() == false) {
			return;
		}
		this.stopTimer();
		this.startTimer();
	}
	onTargetMouseOut(event) {
		this.stopCurrent();
		this.hideToolTip();
	}
	onDelayTimer() {
		this._timer.stop();
		this._timer = null;
		this.showToolTip();
	}
	onScreenMouseMove(event) {
		this._lastMouseEvent = event;
	}
	onScreenMouseDown(event) {
		this.hideToolTip();
	}
	startTimer() {
		this._timer = new haxe_ui_util_Timer(haxe_ui_tooltips_ToolTipManager.defaultDelay,$bind(this,this.onDelayTimer));
	}
	stopTimer() {
		if(this._timer != null) {
			this._timer.stop();
			this._timer = null;
		}
	}
	stopCurrent() {
		if(this._currentComponent != null) {
			this._currentComponent.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
			this._currentComponent = null;
		}
		this.stopTimer();
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	createToolTip() {
		if(this._toolTip != null) {
			return;
		}
		this._toolTip = new haxe_ui_tooltips_ToolTip();
	}
	showToolTip() {
		if(this._currentComponent == null) {
			return;
		}
		this.createToolTip();
		this._toolTip.hide();
		let _gthis = this;
		let options = this._toolTipOptions.h[this._currentComponent.__id__];
		let renderer = this.createToolTipRenderer(options);
		let _this = this._toolTip;
		if((_this._children == null ? [] : _this._children)[0] != renderer) {
			let _this = this._toolTip;
			if((_this._children == null ? [] : _this._children).length > 0) {
				this._toolTip.removeComponentAt(0,false);
			}
			this._toolTip.addComponent(renderer);
		}
		renderer.set_data(options.tipData);
		haxe_ui_core_Screen.get_instance().addComponent(this._toolTip);
		haxe_ui_core_Screen.get_instance().setComponentIndex(this._toolTip,haxe_ui_core_Screen.get_instance().rootComponents.length - 1);
		this._toolTip.validateNow();
		this.positionToolTip();
		haxe_ui_Toolkit.callLater(function() {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				_gthis._toolTip.fadeIn();
			} else {
				_gthis._toolTip.show();
			}
		});
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	positionToolTip() {
		let x = this._lastMouseEvent.screenX + this._toolTip.get_marginLeft();
		let y = this._lastMouseEvent.screenY + this._toolTip.get_marginTop();
		let w = this._toolTip.get_width();
		let h = this._toolTip.get_height();
		let maxX = haxe_ui_core_Screen.get_instance().get_width();
		let maxY = haxe_ui_core_Screen.get_instance().get_height();
		if(x + w > maxX) {
			x -= w;
		}
		if(y + h > maxY) {
			y = this._lastMouseEvent.screenY - h - this._toolTip.get_marginTop() / 2;
		}
		this._toolTip.set_left(x);
		this._toolTip.set_top(y);
	}
	hideToolTip() {
		if(this._toolTip != null) {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				this._toolTip.fadeOut();
			} else {
				this._toolTip.hide();
			}
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	createToolTipRenderer(options) {
		if(options.renderer != null) {
			return options.renderer;
		}
		if(haxe_ui_tooltips_ToolTipManager.defaultRenderer != null) {
			return haxe_ui_tooltips_ToolTipManager.defaultRenderer;
		}
		if(this._toolTipContents != null) {
			return this._toolTipContents;
		}
		this._toolTipContents = new haxe_ui_core_ItemRenderer();
		let label = new haxe_ui_components_Label();
		label.set_id("text");
		this._toolTipContents.addComponent(label);
		return this._toolTipContents;
	}
	static get_instance() {
		if(haxe_ui_tooltips_ToolTipManager._instance == null) {
			haxe_ui_tooltips_ToolTipManager._instance = new haxe_ui_tooltips_ToolTipManager();
		}
		return haxe_ui_tooltips_ToolTipManager._instance;
	}
}
$hxClasses["haxe.ui.tooltips.ToolTipManager"] = haxe_ui_tooltips_ToolTipManager;
haxe_ui_tooltips_ToolTipManager.__name__ = "haxe.ui.tooltips.ToolTipManager";
haxe_ui_tooltips_ToolTipManager.__properties__ = {get_instance: "get_instance"};
Object.assign(haxe_ui_tooltips_ToolTipManager.prototype, {
	__class__: haxe_ui_tooltips_ToolTipManager
	,_lastMouseEvent: null
	,_toolTipOptions: null
	,_currentComponent: null
	,_timer: null
	,_toolTip: null
	,_toolTipContents: null
});
class haxe_ui_util_CallbackMap {
	constructor() {
		this._map = new haxe_ds_StringMap();
	}
	add(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		let b = false;
		let arr = this._map.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			this._map.h[key] = arr;
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	remove(key,callback) {
		let b = false;
		let arr = this._map.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				let _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				b = true;
			}
		}
		return b;
	}
	removeAll(key) {
		let arr = this._map.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			let _this = this._map;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	invokeAndRemove(key,param) {
		let arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			let listener = arr.iterator();
			while(listener.hasNext()) listener.next().callback(param);
		}
	}
	count(key) {
		let n = 0;
		let arr = this._map.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
}
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
Object.assign(haxe_ui_util_CallbackMap.prototype, {
	__class__: haxe_ui_util_CallbackMap
	,_map: null
});
class haxe_ui_util_Color {
	static fromComponents(r,g,b,a) {
		return (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	}
}
class haxe_ui_util_ComponentUtil {
	static getDepth(target) {
		let count = 0;
		while(target.parentComponent != null) {
			target = target.parentComponent;
			++count;
		}
		return count;
	}
}
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
class haxe_ui_util_FunctionArray {
	constructor() {
		this._array = [];
	}
	get(index) {
		return this._array[index].callback;
	}
	get_length() {
		return this._array.length;
	}
	push(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		let listener = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		let _g = 0;
		let _g1 = this._array.length;
		while(_g < _g1) {
			let i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	indexOf(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		let _g = fromIndex;
		let _g1 = this._array.length;
		while(_g < _g1) {
			let i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	remove(x) {
		let index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	contains(x) {
		return this.indexOf(x) != -1;
	}
	iterator() {
		return new haxe_iterators_ArrayIterator(this._array);
	}
	copy() {
		let fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
}
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
Object.assign(haxe_ui_util_FunctionArray.prototype, {
	__class__: haxe_ui_util_FunctionArray
	,_array: null
	,length: null
	,__properties__: {get_length: "get_length"}
});
class haxe_ui_util_GUID {
	static createRandomIdentifier(length,radix) {
		if(radix == null) {
			radix = 61;
		}
		let characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
		let id = [];
		if(radix > 61) {
			radix = 61;
		}
		while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
		return id.join("");
	}
	static uuid() {
		return haxe_ui_util_GUID.createRandomIdentifier(8,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(4,15) + "-4" + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + ["8","9","A","B"][Math.floor(Math.random() * 4)] + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(12,15);
	}
}
$hxClasses["haxe.ui.util.GUID"] = haxe_ui_util_GUID;
haxe_ui_util_GUID.__name__ = "haxe.ui.util.GUID";
class haxe_ui_util_ImageLoader {
	constructor(resource) {
		this._resource = resource;
	}
	load(callback) {
		if(haxe_ui_util_Variant.get_isString(this._resource)) {
			let stringResource = haxe_ui_util_Variant.toString(this._resource);
			stringResource = StringTools.trim(stringResource);
			if(stringResource.startsWith("http://") || stringResource.startsWith("https://")) {
				this.loadFromHttp(stringResource,callback);
			} else if(stringResource.startsWith("file://")) {
				this.loadFromFile(HxOverrides.substr(stringResource,7,null),callback);
			} else {
				haxe_ui_Toolkit.get_assets().getImage(stringResource,callback);
			}
		} else if(haxe_ui_util_Variant.get_isImageData(this._resource)) {
			let imageData = haxe_ui_util_Variant.toImageData(this._resource);
			if(callback != null) {
				callback(haxe_ui_ToolkitAssets.get_instance().imageInfoFromImageData(imageData));
			}
		}
	}
	loadFromHttp(url,callback) {
		let request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			let s;
			try {
				s = request.status;
			} catch( _g ) {
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	loadFromFile(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/util/ImageLoader.hx", lineNumber : 131, className : "haxe.ui.util.ImageLoader", methodName : "loadFromFile"});
		callback(null);
	}
}
$hxClasses["haxe.ui.util.ImageLoader"] = haxe_ui_util_ImageLoader;
haxe_ui_util_ImageLoader.__name__ = "haxe.ui.util.ImageLoader";
Object.assign(haxe_ui_util_ImageLoader.prototype, {
	__class__: haxe_ui_util_ImageLoader
	,_resource: null
});
class haxe_ui_util_Listener {
	static toFunc(this1) {
		return this1.callback;
	}
}
class haxe_ui_util__$Listener_ListenerInternal {
	constructor(callback,priority) {
		this.callback = callback;
		this.priority = priority;
	}
}
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
Object.assign(haxe_ui_util__$Listener_ListenerInternal.prototype, {
	__class__: haxe_ui_util__$Listener_ListenerInternal
	,callback: null
	,priority: null
});
class haxe_ui_util_StyleUtil {
	static styleProperty2ComponentProperty(property) {
		return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
			return re.matched(1).toUpperCase();
		});
	}
}
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
class haxe_ui_util_Timer extends haxe_ui_backend_TimerImpl {
	constructor(delay,callback) {
		super(delay,callback);
	}
	stop() {
		super.stop();
	}
	static delay(f,timeMs) {
		let t = null;
		t = new haxe_ui_util_Timer(timeMs,function() {
			t.stop();
			f();
		});
		return t;
	}
}
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
Object.assign(haxe_ui_util_Timer.prototype, {
	__class__: haxe_ui_util_Timer
});
class haxe_ui_util_TypeConverter {
	static convert(input) {
		let output = input;
		let _g = Type.typeof(input);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				let s = Std.string(input);
				if(s == "true" || s == "false") {
					output = s == "true";
				} else if(new EReg("^-?[0-9]*$","i").match(s == null ? "null" : "" + s)) {
					output = Std.parseInt(s);
				} else if(new EReg("^-?[0-9]*\\.[0-9]*$","i").match(s == null ? "null" : "" + s)) {
					output = parseFloat(s);
				}
			}
		}
		return output;
	}
}
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__:true,__constructs__:null
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Int",$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Float",$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_String",$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Bool",$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Array",$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_DataSource",$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Component",$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Date",$_.__params__ = ["s"],$_)
	,VT_ImageData: ($_=function(s) { return {_hx_index:8,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_ImageData",$_.__params__ = ["s"],$_)
};
haxe_ui_util_VariantType.__constructs__ = [haxe_ui_util_VariantType.VT_Int,haxe_ui_util_VariantType.VT_Float,haxe_ui_util_VariantType.VT_String,haxe_ui_util_VariantType.VT_Bool,haxe_ui_util_VariantType.VT_Array,haxe_ui_util_VariantType.VT_DataSource,haxe_ui_util_VariantType.VT_Component,haxe_ui_util_VariantType.VT_Date,haxe_ui_util_VariantType.VT_ImageData];
class haxe_ui_util_Variant {
	static fromString(s) {
		return haxe_ui_util_VariantType.VT_String(s);
	}
	static toString(this1) {
		if(this1 == null) {
			return null;
		}
		switch(this1._hx_index) {
		case 0:
			let _g = this1.s;
			if(_g == null) {
				return "null";
			} else {
				return "" + _g;
			}
			break;
		case 1:
			let _g1 = this1.s;
			if(_g1 == null) {
				return "null";
			} else {
				return "" + _g1;
			}
			break;
		case 2:
			return this1.s;
		case 3:
			let _g2 = this1.s;
			if(_g2 == null) {
				return "null";
			} else {
				return "" + _g2;
			}
			break;
		case 4:
			return Std.string(this1.s);
		case 5:
			return "";
		case 6:
			return Std.string(this1.s);
		case 7:
			return Std.string(this1.s);
		case 8:
			return "";
		}
	}
	static get_isString(this1) {
		if(this1._hx_index == 2) {
			return true;
		} else {
			return false;
		}
	}
	static fromFloat(s) {
		return haxe_ui_util_VariantType.VT_Float(s);
	}
	static toFloat(this1) {
		if(haxe_ui_util_Variant.get_isNull(this1)) {
			return null;
		}
		switch(this1._hx_index) {
		case 0:
			return this1.s;
		case 1:
			return this1.s;
		default:
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static fromInt(s) {
		return haxe_ui_util_VariantType.VT_Int(s);
	}
	static toInt(this1) {
		if(haxe_ui_util_Variant.get_isNull(this1)) {
			return null;
		}
		switch(this1._hx_index) {
		case 0:
			return this1.s;
		case 1:
			return this1.s | 0;
		default:
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static toNumber(this1) {
		switch(this1._hx_index) {
		case 0:
			return this1.s;
		case 1:
			return this1.s;
		default:
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static fromBool(s) {
		return haxe_ui_util_VariantType.VT_Bool(s);
	}
	static toBool(this1) {
		if(this1 == null) {
			return false;
		}
		switch(this1._hx_index) {
		case 2:
			return this1.s == "true";
		case 3:
			return this1.s;
		default:
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static get_isBool(this1) {
		if(this1._hx_index == 3) {
			return true;
		}
		return false;
	}
	static fromArray(s) {
		if(s == null) {
			return null;
		} else {
			return haxe_ui_util_VariantType.VT_Array(s);
		}
	}
	static toArray(this1) {
		if(this1 == null) {
			return null;
		}
		if(this1._hx_index == 4) {
			return this1.s;
		} else {
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static fromDate(s) {
		return haxe_ui_util_VariantType.VT_Date(s);
	}
	static toDate(this1) {
		if(this1 == null) {
			return null;
		}
		if(this1._hx_index == 7) {
			return this1.s;
		} else {
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static get_isDate(this1) {
		if(this1._hx_index == 7) {
			return true;
		}
		return false;
	}
	static fromComponent(s) {
		return haxe_ui_util_VariantType.VT_Component(s);
	}
	static toComponent(this1) {
		if(this1 == null) {
			return null;
		}
		if(this1._hx_index == 6) {
			return this1.s;
		} else {
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static fromImageData(s) {
		return haxe_ui_util_VariantType.VT_ImageData(s);
	}
	static toImageData(this1) {
		if(this1 == null) {
			return null;
		}
		if(this1._hx_index == 8) {
			return this1.s;
		} else {
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static get_isImageData(this1) {
		if(this1._hx_index == 8) {
			return true;
		}
		return false;
	}
	static fromDataSource(s) {
		return haxe_ui_util_VariantType.VT_DataSource(s);
	}
	static toDataSource(this1) {
		if(this1 == null) {
			return null;
		}
		if(this1._hx_index == 5) {
			return this1.s;
		} else {
			throw haxe_Exception.thrown("Variant Type Error");
		}
	}
	static gt(this1,rhs) {
		let tmp;
		switch(this1._hx_index) {
		case 0:
			tmp = true;
			break;
		case 1:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			return haxe_ui_util_Variant.toNumber(this1) > haxe_ui_util_Variant.toNumber(rhs);
		} else if(haxe_ui_util_Variant.get_isString(this1)) {
			return haxe_ui_util_Variant.toString(this1) > haxe_ui_util_Variant.toString(rhs);
		}
		throw haxe_Exception.thrown("Variant operation error");
	}
	static lt(this1,rhs) {
		let tmp;
		switch(this1._hx_index) {
		case 0:
			tmp = true;
			break;
		case 1:
			tmp = true;
			break;
		default:
			tmp = false;
		}
		if(tmp) {
			return haxe_ui_util_Variant.toNumber(this1) < haxe_ui_util_Variant.toNumber(rhs);
		} else if(haxe_ui_util_Variant.get_isString(this1)) {
			return haxe_ui_util_Variant.toString(this1) < haxe_ui_util_Variant.toString(rhs);
		}
		throw haxe_Exception.thrown("Variant operation error");
	}
	static eq(this1,rhs) {
		if(haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
			return true;
		}
		if(haxe_ui_util_Variant.get_isNull(this1) && !haxe_ui_util_Variant.get_isNull(rhs)) {
			return false;
		}
		if(!haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
			return false;
		}
		let tmp;
		let tmp1;
		switch(this1._hx_index) {
		case 0:
			tmp1 = true;
			break;
		case 1:
			tmp1 = true;
			break;
		default:
			tmp1 = false;
		}
		if(tmp1) {
			switch(rhs._hx_index) {
			case 0:
				tmp = true;
				break;
			case 1:
				tmp = true;
				break;
			default:
				tmp = false;
			}
		} else {
			tmp = false;
		}
		if(tmp) {
			return haxe_ui_util_Variant.toNumber(this1) == haxe_ui_util_Variant.toNumber(rhs);
		} else if(haxe_ui_util_Variant.get_isBool(this1) && haxe_ui_util_Variant.get_isBool(rhs)) {
			return haxe_ui_util_Variant.toBool(this1) == haxe_ui_util_Variant.toBool(rhs);
		} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
			return haxe_ui_util_Variant.toString(this1) == haxe_ui_util_Variant.toString(rhs);
		}
		return false;
	}
	static neq(this1,rhs) {
		return !haxe_ui_util_Variant.eq(this1,rhs);
	}
	static get_isNull(this1) {
		if(this1 != null) {
			return haxe_ui_util_Variant.toString(this1) == null;
		} else {
			return true;
		}
	}
	static fromDynamic(r) {
		let v = null;
		if(r != null) {
			let tmp;
			if(haxe_ui_util_Variant.containsOnlyDigits(r)) {
				let f = parseFloat(("" + Std.string(r)));
				tmp = isNaN(f) == false;
			} else {
				tmp = false;
			}
			if(tmp) {
				if(Std.string(r).indexOf(".") != -1) {
					v = haxe_ui_util_Variant.fromFloat(parseFloat(("" + Std.string(r))));
				} else {
					v = haxe_ui_util_Variant.fromInt(Std.parseInt("" + Std.string(r)));
				}
			} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
				v = haxe_ui_util_Variant.fromBool("" + Std.string(r) == "true");
			} else if(typeof(r) == "string") {
				v = haxe_ui_util_Variant.fromString(js_Boot.__cast(r , String));
			} else if(((r) instanceof haxe_ui_core_Component)) {
				v = haxe_ui_util_Variant.fromComponent(js_Boot.__cast(r , haxe_ui_core_Component));
			} else if(((r) instanceof haxe_ui_data_DataSource)) {
				v = r;
			} else if(((r) instanceof Array)) {
				v = r;
			} else if(((r) instanceof Date)) {
				v = haxe_ui_util_Variant.fromDate(js_Boot.__cast(r , Date));
			} else if(((r) instanceof HTMLImageElement)) {
				v = haxe_ui_util_Variant.fromImageData(js_Boot.__cast(r , HTMLImageElement));
			} else {
				v = r;
			}
		}
		return v;
	}
	static containsOnlyDigits(s) {
		if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
			return true;
		}
		let t = Std.string(s);
		let _g = 0;
		let _g1 = t.length;
		while(_g < _g1) {
			let c = t.charAt(_g++);
			if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != ".") {
				return false;
			}
		}
		return true;
	}
	static toDynamic(v) {
		let d = null;
		if(v != null) {
			switch(v._hx_index) {
			case 0:
				d = v.s;
				break;
			case 1:
				d = v.s;
				break;
			case 2:
				d = v.s;
				break;
			case 3:
				d = v.s;
				break;
			case 4:
				d = v.s;
				break;
			case 5:
				d = v.s;
				break;
			case 6:
				d = v.s;
				break;
			case 7:
				d = v.s;
				break;
			case 8:
				d = v.s;
				break;
			}
		}
		return d;
	}
}
haxe_ui_util_Variant.__properties__ = {get_isNull: "get_isNull",get_isImageData: "get_isImageData",get_isDate: "get_isDate",get_isBool: "get_isBool",get_isString: "get_isString"};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__:true,__constructs__:null
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CInt",$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CFloat",$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_._hx_name="CString",$_.__params__ = ["s"],$_)
};
hscript_Const.__constructs__ = [hscript_Const.CInt,hscript_Const.CFloat,hscript_Const.CString];
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__:true,__constructs__:null
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EConst",$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EIdent",$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EVar",$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EParent",$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EBlock",$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EField",$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EBinop",$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EUnop",$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ECall",$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EIf",$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EWhile",$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EFor",$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_name:"EBreak",_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_name:"EContinue",_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EFunction",$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EReturn",$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EArray",$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EArrayDecl",$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ENew",$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EThrow",$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ETry",$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EObject",$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ETernary",$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ESwitch",$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EDoWhile",$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="EMeta",$_.__params__ = ["name","args","e"],$_)
	,ECheckType: ($_=function(e,t) { return {_hx_index:26,e:e,t:t,__enum__:"hscript.Expr",toString:$estr}; },$_._hx_name="ECheckType",$_.__params__ = ["e","t"],$_)
};
hscript_Expr.__constructs__ = [hscript_Expr.EConst,hscript_Expr.EIdent,hscript_Expr.EVar,hscript_Expr.EParent,hscript_Expr.EBlock,hscript_Expr.EField,hscript_Expr.EBinop,hscript_Expr.EUnop,hscript_Expr.ECall,hscript_Expr.EIf,hscript_Expr.EWhile,hscript_Expr.EFor,hscript_Expr.EBreak,hscript_Expr.EContinue,hscript_Expr.EFunction,hscript_Expr.EReturn,hscript_Expr.EArray,hscript_Expr.EArrayDecl,hscript_Expr.ENew,hscript_Expr.EThrow,hscript_Expr.ETry,hscript_Expr.EObject,hscript_Expr.ETernary,hscript_Expr.ESwitch,hscript_Expr.EDoWhile,hscript_Expr.EMeta,hscript_Expr.ECheckType];
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__:true,__constructs__:null
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTPath",$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTFun",$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTAnon",$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTParent",$_.__params__ = ["t"],$_)
	,CTOpt: ($_=function(t) { return {_hx_index:4,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTOpt",$_.__params__ = ["t"],$_)
	,CTNamed: ($_=function(n,t) { return {_hx_index:5,n:n,t:t,__enum__:"hscript.CType",toString:$estr}; },$_._hx_name="CTNamed",$_.__params__ = ["n","t"],$_)
};
hscript_CType.__constructs__ = [hscript_CType.CTPath,hscript_CType.CTFun,hscript_CType.CTAnon,hscript_CType.CTParent,hscript_CType.CTOpt,hscript_CType.CTNamed];
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__:true,__constructs__:null
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidChar",$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EUnexpected",$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_name:"EUnterminatedString",_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_name:"EUnterminatedComment",_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidPreprocessor",$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EUnknownVariable",$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidIterator",$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidOp",$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="EInvalidAccess",$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_._hx_name="ECustom",$_.__params__ = ["msg"],$_)
};
hscript_Error.__constructs__ = [hscript_Error.EInvalidChar,hscript_Error.EUnexpected,hscript_Error.EUnterminatedString,hscript_Error.EUnterminatedComment,hscript_Error.EInvalidPreprocessor,hscript_Error.EUnknownVariable,hscript_Error.EInvalidIterator,hscript_Error.EInvalidOp,hscript_Error.EInvalidAccess,hscript_Error.ECustom];
var hscript__$Interp_Stop = $hxEnums["hscript._Interp.Stop"] = { __ename__:true,__constructs__:null
	,SBreak: {_hx_name:"SBreak",_hx_index:0,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SContinue: {_hx_name:"SContinue",_hx_index:1,__enum__:"hscript._Interp.Stop",toString:$estr}
	,SReturn: {_hx_name:"SReturn",_hx_index:2,__enum__:"hscript._Interp.Stop",toString:$estr}
};
hscript__$Interp_Stop.__constructs__ = [hscript__$Interp_Stop.SBreak,hscript__$Interp_Stop.SContinue,hscript__$Interp_Stop.SReturn];
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__:true,__constructs__:null
	,TEof: {_hx_name:"TEof",_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TConst",$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TId",$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TOp",$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_name:"TPOpen",_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_name:"TPClose",_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_name:"TBrOpen",_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_name:"TBrClose",_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_name:"TDot",_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_name:"TComma",_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_name:"TSemicolon",_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_name:"TBkOpen",_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_name:"TBkClose",_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_name:"TQuestion",_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_name:"TDoubleDot",_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TMeta",$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_._hx_name="TPrepro",$_.__params__ = ["s"],$_)
};
hscript_Token.__constructs__ = [hscript_Token.TEof,hscript_Token.TConst,hscript_Token.TId,hscript_Token.TOp,hscript_Token.TPOpen,hscript_Token.TPClose,hscript_Token.TBrOpen,hscript_Token.TBrClose,hscript_Token.TDot,hscript_Token.TComma,hscript_Token.TSemicolon,hscript_Token.TBkOpen,hscript_Token.TBkClose,hscript_Token.TQuestion,hscript_Token.TDoubleDot,hscript_Token.TMeta,hscript_Token.TPrepro];
class hscript_Parser {
	constructor() {
		this.uid = 0;
		this.preprocesorValues = new haxe_ds_StringMap();
		this.line = 1;
		this.opChars = "+*/-=!><&|^%~";
		this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
		let priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
		this.opPriority = new haxe_ds_StringMap();
		this.opRightAssoc = new haxe_ds_StringMap();
		this.unops = new haxe_ds_StringMap();
		let _g = 0;
		let _g1 = priorities.length;
		while(_g < _g1) {
			let i = _g++;
			let _g1 = 0;
			let _g2 = priorities[i];
			while(_g1 < _g2.length) {
				let x = _g2[_g1];
				++_g1;
				this.opPriority.h[x] = i;
				if(i == 9) {
					this.opRightAssoc.h[x] = true;
				}
			}
		}
		this.unops.h["!"] = false;
		this.unops.h["++"] = true;
		this.unops.h["--"] = true;
		this.unops.h["-"] = false;
		this.unops.h["~"] = false;
	}
	invalidChar(c) {
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(hscript_Error.EInvalidChar(c));
		}
	}
	initParser(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		let _g = 0;
		let _g1 = this.opChars.length;
		while(_g < _g1) this.ops[HxOverrides.cca(this.opChars,_g++)] = true;
		let _g2 = 0;
		let _g3 = this.identChars.length;
		while(_g2 < _g3) this.idents[HxOverrides.cca(this.identChars,_g2++)] = true;
	}
	parseString(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		this.readPos = 0;
		let a = [];
		while(true) {
			let tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	unexpected(tk) {
		let err = hscript_Error.EUnexpected(this.tokenString(tk));
		if(!this.resumeErrors) {
			throw haxe_Exception.thrown(err);
		}
		return null;
	}
	maybe(tk) {
		let t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		let _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	getIdent() {
		let tk = this.token();
		if(tk == null) {
			this.unexpected(tk);
			return null;
		} else if(tk._hx_index == 2) {
			return tk.s;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	isBlock(e) {
		if(e == null) {
			return false;
		}
		switch(e._hx_index) {
		case 2:
			let _g = e.t;
			let _g1 = e.e;
			if(_g1 != null) {
				return this.isBlock(_g1);
			} else if(_g != null) {
				if(_g == null) {
					return false;
				} else if(_g._hx_index == 2) {
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 4:
			return true;
		case 6:
			return this.isBlock(e.e2);
		case 7:
			if(!e.prefix) {
				return this.isBlock(e.e);
			} else {
				return false;
			}
			break;
		case 9:
			let _g2 = e.e2;
			if(_g2 != null) {
				return this.isBlock(_g2);
			} else {
				return this.isBlock(e.e1);
			}
			break;
		case 10:
			return this.isBlock(e.e);
		case 11:
			return this.isBlock(e.e);
		case 14:
			return this.isBlock(e.e);
		case 15:
			let _g3 = e.e;
			if(_g3 != null) {
				return this.isBlock(_g3);
			} else {
				return false;
			}
			break;
		case 20:
			return this.isBlock(e.ecatch);
		case 21:
			return true;
		case 23:
			return true;
		case 24:
			return this.isBlock(e.e);
		case 25:
			return this.isBlock(e.e);
		default:
			return false;
		}
	}
	parseFullExpr(exprs) {
		let e = this.parseExpr();
		exprs.push(e);
		let tk = this.token();
		while(tk == hscript_Token.TComma && e != null && e._hx_index == 2) {
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	parseObject(p1) {
		let fl = [];
		_hx_loop1: while(true) {
			let tk = this.token();
			let id = null;
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 1:
					let _g = tk.c;
					if(!this.allowJSON) {
						this.unexpected(tk);
					}
					if(_g._hx_index == 2) {
						id = _g.s;
					} else {
						this.unexpected(tk);
					}
					break;
				case 2:
					id = tk.s;
					break;
				case 7:
					break _hx_loop1;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
			let t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else {
				switch(tk._hx_index) {
				case 7:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	parseExpr() {
		let tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 1:
				return this.parseExprNext(hscript_Expr.EConst(tk.c));
			case 2:
				let _g = tk.s;
				let e = this.parseStructure(_g);
				if(e == null) {
					e = hscript_Expr.EIdent(_g);
				}
				return this.parseExprNext(e);
			case 3:
				let _g1 = tk.s;
				if(Object.prototype.hasOwnProperty.call(this.unops.h,_g1)) {
					let e = this.parseExpr();
					if(_g1 == "-" && e != null) {
						if(e._hx_index == 0) {
							let _g = e.c;
							switch(_g._hx_index) {
							case 0:
								return hscript_Expr.EConst(hscript_Const.CInt(-_g.v));
							case 1:
								return hscript_Expr.EConst(hscript_Const.CFloat(-_g.f));
							default:
							}
						}
					}
					return this.makeUnop(_g1,e);
				}
				return this.unexpected(tk);
			case 4:
				let e1 = this.parseExpr();
				tk = this.token();
				if(tk != null) {
					switch(tk._hx_index) {
					case 5:
						return this.parseExprNext(hscript_Expr.EParent(e1));
					case 9:
						if(e1._hx_index == 1) {
							return this.parseLambda([{ name : e1.v}],0);
						}
						break;
					case 14:
						let t = this.parseType();
						tk = this.token();
						if(tk != null) {
							switch(tk._hx_index) {
							case 5:
								return this.parseExprNext(hscript_Expr.ECheckType(e1,t));
							case 9:
								if(e1._hx_index == 1) {
									return this.parseLambda([{ name : e1.v, t : t}],0);
								}
								break;
							default:
							}
						}
						break;
					default:
					}
				}
				return this.unexpected(tk);
			case 6:
				tk = this.token();
				if(tk == null) {
					let _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
				} else {
					switch(tk._hx_index) {
					case 1:
						if(this.allowJSON) {
							if(tk.c._hx_index == 2) {
								let tk2 = this.token();
								let _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk2,_this.head);
								let _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
								if(tk2 != null) {
									if(tk2._hx_index == 14) {
										return this.parseExprNext(this.parseObject(0));
									}
								}
							} else {
								let _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
							}
						} else {
							let _this = this.tokens;
							_this.head = new haxe_ds_GenericCell(tk,_this.head);
						}
						break;
					case 2:
						let tk2 = this.token();
						let _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk2,_this.head);
						let _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
						if(tk2 != null) {
							if(tk2._hx_index == 14) {
								return this.parseExprNext(this.parseObject(0));
							}
						}
						break;
					case 7:
						return this.parseExprNext(hscript_Expr.EObject([]));
					default:
						let _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
					}
				}
				let a = [];
				while(true) {
					this.parseFullExpr(a);
					tk = this.token();
					if(tk == hscript_Token.TBrClose || this.resumeErrors && tk == hscript_Token.TEof) {
						break;
					}
					let _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
				}
				return hscript_Expr.EBlock(a);
			case 11:
				let a1 = [];
				tk = this.token();
				while(tk != hscript_Token.TBkClose && (!this.resumeErrors || tk != hscript_Token.TEof)) {
					let _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(tk,_this.head);
					a1.push(this.parseExpr());
					tk = this.token();
					if(tk == hscript_Token.TComma) {
						tk = this.token();
					}
				}
				if(a1.length == 1 && a1[0] != null) {
					switch(a1[0]._hx_index) {
					case 10:
						let tmp = "__a_" + this.uid++;
						return this.parseExprNext(hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]));
					case 11:
						let tmp1 = "__a_" + this.uid++;
						return this.parseExprNext(hscript_Expr.EBlock([hscript_Expr.EVar(tmp1,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp1,a1[0]),hscript_Expr.EIdent(tmp1)]));
					case 24:
						let tmp2 = "__a_" + this.uid++;
						return this.parseExprNext(hscript_Expr.EBlock([hscript_Expr.EVar(tmp2,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp2,a1[0]),hscript_Expr.EIdent(tmp2)]));
					default:
					}
				}
				return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
			case 15:
				if(this.allowMetadata) {
					return hscript_Expr.EMeta(tk.s,this.parseMetaArgs(),this.parseExpr());
				} else {
					return this.unexpected(tk);
				}
				break;
			default:
				return this.unexpected(tk);
			}
		}
	}
	parseLambda(args,pmin) {
		_hx_loop1: while(true) {
			args.push({ name : this.getIdent(), t : this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null});
			let tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
				break;
			} else {
				switch(tk._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					this.unexpected(tk);
					break _hx_loop1;
				}
			}
		}
		let t = this.token();
		if(!Type.enumEq(t,hscript_Token.TOp("->"))) {
			this.unexpected(t);
		}
		return hscript_Expr.EFunction(args,hscript_Expr.EReturn(this.parseExpr()));
	}
	parseMetaArgs() {
		let tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		let args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				let _g = this.token();
				if(_g == null) {
					this.unexpected(_g);
				} else {
					switch(_g._hx_index) {
					case 5:
						break _hx_loop1;
					case 9:
						break;
					default:
						this.unexpected(_g);
					}
				}
			}
		}
		return args;
	}
	mapCompr(tmp,e) {
		if(e == null) {
			return null;
		}
		let edef;
		switch(e._hx_index) {
		case 3:
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e.e));
			break;
		case 4:
			let _g = e.e;
			edef = _g.length == 1 ? hscript_Expr.EBlock([this.mapCompr(tmp,_g[0])]) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 9:
			edef = e.e2 == null ? hscript_Expr.EIf(e.cond,this.mapCompr(tmp,e.e1),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			edef = hscript_Expr.EWhile(e.cond,this.mapCompr(tmp,e.e));
			break;
		case 11:
			edef = hscript_Expr.EFor(e.v,e.it,this.mapCompr(tmp,e.e));
			break;
		case 24:
			edef = hscript_Expr.EDoWhile(e.cond,this.mapCompr(tmp,e.e));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	makeUnop(op,e) {
		if(e == null && this.resumeErrors) {
			return null;
		}
		switch(e._hx_index) {
		case 6:
			return hscript_Expr.EBinop(e.op,this.makeUnop(op,e.e1),e.e2);
		case 22:
			return hscript_Expr.ETernary(this.makeUnop(op,e.cond),e.e1,e.e2);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	makeBinop(op,e1,e) {
		if(e == null && this.resumeErrors) {
			return hscript_Expr.EBinop(op,e1,e);
		}
		switch(e._hx_index) {
		case 6:
			let _g = e.op;
			if(this.opPriority.h[op] <= this.opPriority.h[_g] && !Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
				return hscript_Expr.EBinop(_g,this.makeBinop(op,e1,e.e1),e.e2);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			if(Object.prototype.hasOwnProperty.call(this.opRightAssoc.h,op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e.cond),e.e1,e.e2);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	parseStructure(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			let e = this.parseExpr();
			let tk = this.token();
			if(tk == null) {
				this.unexpected(tk);
			} else if(tk._hx_index == 2) {
				if(tk.s != "while") {
					this.unexpected(tk);
				}
			} else {
				this.unexpected(tk);
			}
			return hscript_Expr.EDoWhile(this.parseExpr(),e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			let t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			let vname = this.getIdent();
			let t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			let eiter = this.parseExpr();
			let t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			return hscript_Expr.EFor(vname,eiter,this.parseExpr());
		case "function":
			let tk1 = this.token();
			let name = null;
			if(tk1 == null) {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			} else if(tk1._hx_index == 2) {
				name = tk1.s;
			} else {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			}
			let inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			let t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			let cond = this.parseExpr();
			let t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			let e1 = this.parseExpr();
			let e2 = null;
			let semic = false;
			let tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk2,_this.head);
				if(semic) {
					let _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this.head);
				}
			}
			return hscript_Expr.EIf(cond,e1,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			let a = [];
			a.push(this.getIdent());
			_hx_loop1: while(true) {
				let tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else {
					switch(tk._hx_index) {
					case 4:
						break _hx_loop1;
					case 8:
						a.push(this.getIdent());
						break;
					default:
						this.unexpected(tk);
						break _hx_loop1;
					}
				}
			}
			let args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			let tk3 = this.token();
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk3,_this.head);
			return hscript_Expr.EReturn(tk3 == hscript_Token.TSemicolon ? null : this.parseExpr());
		case "switch":
			let e3 = this.parseExpr();
			let def = null;
			let cases = [];
			let t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			_hx_loop2: while(true) {
				let tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else {
					switch(tk._hx_index) {
					case 2:
						switch(tk.s) {
						case "case":
							let c = { values : [], expr : null};
							cases.push(c);
							_hx_loop3: while(true) {
								let e = this.parseExpr();
								c.values.push(e);
								tk = this.token();
								if(tk == null) {
									this.unexpected(tk);
									break;
								} else {
									switch(tk._hx_index) {
									case 9:
										break;
									case 14:
										break _hx_loop3;
									default:
										this.unexpected(tk);
										break _hx_loop3;
									}
								}
							}
							let exprs = [];
							_hx_loop4: while(true) {
								tk = this.token();
								let _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
								if(tk == null) {
									this.parseFullExpr(exprs);
								} else {
									switch(tk._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop4;
										} else {
											this.parseFullExpr(exprs);
										}
										break;
									case 2:
										switch(tk.s) {
										case "case":case "default":
											break _hx_loop4;
										default:
											this.parseFullExpr(exprs);
										}
										break;
									case 7:
										break _hx_loop4;
									default:
										this.parseFullExpr(exprs);
									}
								}
							}
							c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
							break;
						case "default":
							if(def != null) {
								this.unexpected(tk);
							}
							let t = this.token();
							if(t != hscript_Token.TDoubleDot) {
								this.unexpected(t);
							}
							let exprs1 = [];
							_hx_loop5: while(true) {
								tk = this.token();
								let _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
								if(tk == null) {
									this.parseFullExpr(exprs1);
								} else {
									switch(tk._hx_index) {
									case 0:
										if(this.resumeErrors) {
											break _hx_loop5;
										} else {
											this.parseFullExpr(exprs1);
										}
										break;
									case 2:
										switch(tk.s) {
										case "case":case "default":
											break _hx_loop5;
										default:
											this.parseFullExpr(exprs1);
										}
										break;
									case 7:
										break _hx_loop5;
									default:
										this.parseFullExpr(exprs1);
									}
								}
							}
							def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
							break;
						default:
							this.unexpected(tk);
							break _hx_loop2;
						}
						break;
					case 7:
						break _hx_loop2;
					default:
						this.unexpected(tk);
						break _hx_loop2;
					}
				}
			}
			return hscript_Expr.ESwitch(e3,cases,def);
		case "throw":
			return hscript_Expr.EThrow(this.parseExpr());
		case "try":
			let e4 = this.parseExpr();
			let t6 = this.token();
			if(!Type.enumEq(t6,hscript_Token.TId("catch"))) {
				this.unexpected(t6);
			}
			let t7 = this.token();
			if(t7 != hscript_Token.TPOpen) {
				this.unexpected(t7);
			}
			let vname1 = this.getIdent();
			let t8 = this.token();
			if(t8 != hscript_Token.TDoubleDot) {
				this.unexpected(t8);
			}
			let t9 = null;
			if(this.allowTypes) {
				t9 = this.parseType();
			} else {
				let t = this.token();
				if(!Type.enumEq(t,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t);
				}
			}
			let t10 = this.token();
			if(t10 != hscript_Token.TPClose) {
				this.unexpected(t10);
			}
			return hscript_Expr.ETry(e4,vname1,t9,this.parseExpr());
		case "var":
			let ident = this.getIdent();
			let tk4 = this.token();
			let t11 = null;
			if(tk4 == hscript_Token.TDoubleDot && this.allowTypes) {
				t11 = this.parseType();
				tk4 = this.token();
			}
			let e5 = null;
			if(Type.enumEq(tk4,hscript_Token.TOp("="))) {
				e5 = this.parseExpr();
			} else {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk4,_this.head);
			}
			return hscript_Expr.EVar(ident,t11,e5);
		case "while":
			return hscript_Expr.EWhile(this.parseExpr(),this.parseExpr());
		default:
			return null;
		}
	}
	parseExprNext(e1) {
		let tk = this.token();
		if(tk == null) {
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return e1;
		} else {
			switch(tk._hx_index) {
			case 3:
				let _g = tk.s;
				if(_g == "->") {
					switch(e1._hx_index) {
					case 1:
						let tmp = hscript_Expr.EReturn(this.parseExpr());
						return hscript_Expr.EFunction([{ name : e1.v}],tmp);
					case 3:
						let _g = e1.e;
						if(_g._hx_index == 1) {
							let tmp = hscript_Expr.EReturn(this.parseExpr());
							return hscript_Expr.EFunction([{ name : _g.v}],tmp);
						}
						break;
					case 26:
						let _g1 = e1.e;
						if(_g1._hx_index == 1) {
							let tmp = hscript_Expr.EReturn(this.parseExpr());
							return hscript_Expr.EFunction([{ name : _g1.v, t : e1.t}],tmp);
						}
						break;
					default:
					}
					this.unexpected(tk);
				}
				if(this.unops.h[_g]) {
					if(this.isBlock(e1) || e1._hx_index == 3) {
						let _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(tk,_this.head);
						return e1;
					}
					return this.parseExprNext(hscript_Expr.EUnop(_g,false,e1));
				}
				return this.makeBinop(_g,e1,this.parseExpr());
			case 4:
				return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
			case 8:
				return this.parseExprNext(hscript_Expr.EField(e1,this.getIdent()));
			case 11:
				let e2 = this.parseExpr();
				let t = this.token();
				if(t != hscript_Token.TBkClose) {
					this.unexpected(t);
				}
				return this.parseExprNext(hscript_Expr.EArray(e1,e2));
			case 13:
				let e21 = this.parseExpr();
				let t1 = this.token();
				if(t1 != hscript_Token.TDoubleDot) {
					this.unexpected(t1);
				}
				return hscript_Expr.ETernary(e1,e21,this.parseExpr());
			default:
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return e1;
			}
		}
	}
	parseFunctionArgs() {
		let args = [];
		let tk = this.token();
		if(tk != hscript_Token.TPClose) {
			let done = false;
			while(!done) {
				let name = null;
				let opt = false;
				if(tk != null) {
					if(tk._hx_index == 13) {
						opt = true;
						tk = this.token();
					}
				}
				if(tk == null) {
					this.unexpected(tk);
					break;
				} else if(tk._hx_index == 2) {
					name = tk.s;
				} else {
					this.unexpected(tk);
					break;
				}
				let arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				if(tk == null) {
					this.unexpected(tk);
				} else {
					switch(tk._hx_index) {
					case 5:
						done = true;
						break;
					case 9:
						tk = this.token();
						break;
					default:
						this.unexpected(tk);
					}
				}
			}
		}
		return args;
	}
	parseFunctionDecl() {
		let t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		let args = this.parseFunctionArgs();
		let ret = null;
		if(this.allowTypes) {
			let tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	parsePath() {
		let path = [this.getIdent()];
		while(true) {
			let t = this.token();
			if(t != hscript_Token.TDot) {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	parseType() {
		let t = this.token();
		let _gthis = this;
		if(t == null) {
			return this.unexpected(t);
		} else {
			switch(t._hx_index) {
			case 2:
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				let path = this.parsePath();
				let params = null;
				t = this.token();
				if(t == null) {
					let _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
				} else if(t._hx_index == 3) {
					if(t.s == "<") {
						params = [];
						_hx_loop1: while(true) {
							params.push(this.parseType());
							t = this.token();
							if(t != null) {
								switch(t._hx_index) {
								case 3:
									let _g = t.s;
									if(_g == ">") {
										break _hx_loop1;
									}
									if(HxOverrides.cca(_g,0) == 62) {
										let _this = this.tokens;
										_this.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(_g,1,null)),_this.head);
										break _hx_loop1;
									}
									break;
								case 9:
									continue;
								default:
								}
							}
							this.unexpected(t);
							break;
						}
					} else {
						let _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(t,_this.head);
					}
				} else {
					let _this = this.tokens;
					_this.head = new haxe_ds_GenericCell(t,_this.head);
				}
				return this.parseTypeNext(hscript_CType.CTPath(path,params));
			case 4:
				let a = this.token();
				let b = this.token();
				let _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(b,_this1.head);
				let _this2 = this.tokens;
				_this2.head = new haxe_ds_GenericCell(a,_this2.head);
				let withReturn = function(args) {
					let _g = _gthis.token();
					if(_g == null) {
						_gthis.unexpected(_g);
					} else if(_g._hx_index == 3) {
						if(_g.s != "->") {
							_gthis.unexpected(_g);
						}
					} else {
						_gthis.unexpected(_g);
					}
					return hscript_CType.CTFun(args,_gthis.parseType());
				};
				if(a == null) {
					let t = this.parseType();
					let _g = this.token();
					if(_g == null) {
						return this.unexpected(_g);
					} else {
						switch(_g._hx_index) {
						case 5:
							return this.parseTypeNext(hscript_CType.CTParent(t));
						case 9:
							let args = [t];
							while(true) {
								args.push(this.parseType());
								if(!this.maybe(hscript_Token.TComma)) {
									break;
								}
							}
							let t1 = this.token();
							if(t1 != hscript_Token.TPClose) {
								this.unexpected(t1);
							}
							return withReturn(args);
						default:
							return this.unexpected(_g);
						}
					}
				} else {
					switch(a._hx_index) {
					case 2:
						if(b == null) {
							let t = this.parseType();
							let _g = this.token();
							if(_g == null) {
								return this.unexpected(_g);
							} else {
								switch(_g._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t));
								case 9:
									let args = [t];
									while(true) {
										args.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									let t1 = this.token();
									if(t1 != hscript_Token.TPClose) {
										this.unexpected(t1);
									}
									return withReturn(args);
								default:
									return this.unexpected(_g);
								}
							}
						} else if(b._hx_index == 14) {
							let _g = [];
							let _g1 = 0;
							let _g2 = this.parseFunctionArgs();
							while(_g1 < _g2.length) {
								let arg = _g2[_g1];
								++_g1;
								if(arg.value != null) {
									if(!this.resumeErrors) {
										throw haxe_Exception.thrown(hscript_Error.ECustom("Default values not allowed in function types"));
									}
								}
								_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
							}
							return withReturn(_g);
						} else {
							let t = this.parseType();
							let _g = this.token();
							if(_g == null) {
								return this.unexpected(_g);
							} else {
								switch(_g._hx_index) {
								case 5:
									return this.parseTypeNext(hscript_CType.CTParent(t));
								case 9:
									let args = [t];
									while(true) {
										args.push(this.parseType());
										if(!this.maybe(hscript_Token.TComma)) {
											break;
										}
									}
									let t1 = this.token();
									if(t1 != hscript_Token.TPClose) {
										this.unexpected(t1);
									}
									return withReturn(args);
								default:
									return this.unexpected(_g);
								}
							}
						}
						break;
					case 5:
						let _g = [];
						let _g1 = 0;
						let _g2 = this.parseFunctionArgs();
						while(_g1 < _g2.length) {
							let arg = _g2[_g1];
							++_g1;
							if(arg.value != null) {
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(hscript_Error.ECustom("Default values not allowed in function types"));
								}
							}
							_g.push(hscript_CType.CTNamed(arg.name,arg.opt ? hscript_CType.CTOpt(arg.t) : arg.t));
						}
						return withReturn(_g);
					default:
						let t1 = this.parseType();
						let _g3 = this.token();
						if(_g3 == null) {
							return this.unexpected(_g3);
						} else {
							switch(_g3._hx_index) {
							case 5:
								return this.parseTypeNext(hscript_CType.CTParent(t1));
							case 9:
								let args = [t1];
								while(true) {
									args.push(this.parseType());
									if(!this.maybe(hscript_Token.TComma)) {
										break;
									}
								}
								let t2 = this.token();
								if(t2 != hscript_Token.TPClose) {
									this.unexpected(t2);
								}
								return withReturn(args);
							default:
								return this.unexpected(_g3);
							}
						}
					}
				}
				break;
			case 6:
				let fields = [];
				let meta = null;
				_hx_loop8: while(true) {
					t = this.token();
					if(t == null) {
						this.unexpected(t);
						break;
					} else {
						switch(t._hx_index) {
						case 2:
							let _g = t.s;
							if(_g == "var") {
								let name = this.getIdent();
								let t = this.token();
								if(t != hscript_Token.TDoubleDot) {
									this.unexpected(t);
								}
								fields.push({ name : name, t : this.parseType(), meta : meta});
								meta = null;
								let t1 = this.token();
								if(t1 != hscript_Token.TSemicolon) {
									this.unexpected(t1);
								}
							} else {
								let t1 = this.token();
								if(t1 != hscript_Token.TDoubleDot) {
									this.unexpected(t1);
								}
								fields.push({ name : _g, t : this.parseType(), meta : meta});
								t = this.token();
								if(t == null) {
									this.unexpected(t);
								} else {
									switch(t._hx_index) {
									case 7:
										break _hx_loop8;
									case 9:
										break;
									default:
										this.unexpected(t);
									}
								}
							}
							break;
						case 7:
							break _hx_loop8;
						case 15:
							if(meta == null) {
								meta = [];
							}
							meta.push({ name : t.s, params : this.parseMetaArgs()});
							break;
						default:
							this.unexpected(t);
							break _hx_loop8;
						}
					}
				}
				return this.parseTypeNext(hscript_CType.CTAnon(fields));
			default:
				return this.unexpected(t);
			}
		}
	}
	parseTypeNext(t) {
		let tk = this.token();
		if(tk == null) {
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		} else if(tk._hx_index == 3) {
			if(tk.s != "->") {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return t;
			}
		} else {
			let _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return t;
		}
		let t2 = this.parseType();
		if(t2._hx_index == 1) {
			t2.args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	parseExprList(etk) {
		let args = [];
		let tk = this.token();
		if(tk == etk) {
			return args;
		}
		let _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk == null) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			} else if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
				break;
			}
		}
		return args;
	}
	readString(until) {
		let b_b = "";
		let esc = false;
		let old = this.line;
		while(true) {
			let c = this.input.charCodeAt(this.readPos++);
			if(c != c) {
				this.line = old;
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EUnterminatedString);
				}
				break;
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b_b += String.fromCodePoint(c);
					break;
				case 47:
					if(this.allowJSON) {
						b_b += String.fromCodePoint(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b_b += String.fromCodePoint(10);
					break;
				case 114:
					b_b += String.fromCodePoint(13);
					break;
				case 116:
					b_b += String.fromCodePoint(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					let k = 0;
					let _g = 0;
					while(_g < 4) {
						_g++;
						k <<= 4;
						let char = this.input.charCodeAt(this.readPos++);
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							if(char != char) {
								this.line = old;
								if(!this.resumeErrors) {
									throw haxe_Exception.thrown(hscript_Error.EUnterminatedString);
								}
							}
							this.invalidChar(char);
						}
					}
					b_b += String.fromCodePoint(k);
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b_b += String.fromCodePoint(c);
			}
		}
		return b_b;
	}
	token() {
		if(this.tokens.head != null) {
			let _this = this.tokens;
			let k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		let char;
		if(this.char < 0) {
			char = this.input.charCodeAt(this.readPos++);
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			if(char != char) {
				this.char = char;
				return hscript_Token.TEof;
			}
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char]) {
					let id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.input.charCodeAt(this.readPos++);
				switch(char) {
				case 46:
					char = this.input.charCodeAt(this.readPos++);
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					let n = char - 48;
					let exp = 1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				let n1 = (char - 48) * 1.0;
				let exp1 = 0.;
				while(true) {
					char = this.input.charCodeAt(this.readPos++);
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.input.charCodeAt(this.readPos++) == 46) {
								let _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this.head);
								let i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						let tk = this.token();
						let pow = null;
						if(tk == null) {
							let _this = this.tokens;
							_this.head = new haxe_ds_GenericCell(tk,_this.head);
						} else {
							switch(tk._hx_index) {
							case 1:
								let _g = tk.c;
								if(_g._hx_index == 0) {
									pow = _g.v;
								} else {
									let _this = this.tokens;
									_this.head = new haxe_ds_GenericCell(tk,_this.head);
								}
								break;
							case 3:
								if(tk.s == "-") {
									tk = this.token();
									if(tk == null) {
										let _this = this.tokens;
										_this.head = new haxe_ds_GenericCell(tk,_this.head);
									} else if(tk._hx_index == 1) {
										let _g = tk.c;
										if(_g._hx_index == 0) {
											pow = -_g.v;
										} else {
											let _this = this.tokens;
											_this.head = new haxe_ds_GenericCell(tk,_this.head);
										}
									} else {
										let _this = this.tokens;
										_this.head = new haxe_ds_GenericCell(tk,_this.head);
									}
								} else {
									let _this = this.tokens;
									_this.head = new haxe_ds_GenericCell(tk,_this.head);
								}
								break;
							default:
								let _this = this.tokens;
								_this.head = new haxe_ds_GenericCell(tk,_this.head);
							}
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						let n = 0;
						while(true) {
							char = this.input.charCodeAt(this.readPos++);
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n = (n << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n = (n << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n = (n << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n));
							}
						}
						break;
					default:
						this.char = char;
						let i = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.input.charCodeAt(this.readPos++);
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.input.charCodeAt(this.readPos++);
				if(this.idents[char] || char == 58) {
					let id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					let op = String.fromCodePoint(char);
					let prev = -1;
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					let id = String.fromCodePoint(char);
					while(true) {
						char = this.input.charCodeAt(this.readPos++);
						if(char != char) {
							char = 0;
						}
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.input.charCodeAt(this.readPos++);
		}
	}
	preprocValue(id) {
		return this.preprocesorValues.h[id];
	}
	parsePreproCond() {
		let tk = this.token();
		if(tk == null) {
			return this.unexpected(tk);
		} else {
			switch(tk._hx_index) {
			case 2:
				return hscript_Expr.EIdent(tk.s);
			case 3:
				if(tk.s == "!") {
					return hscript_Expr.EUnop("!",true,this.parsePreproCond());
				} else {
					return this.unexpected(tk);
				}
				break;
			case 4:
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
				return this.parseExpr();
			default:
				return this.unexpected(tk);
			}
		}
	}
	evalPreproCond(e) {
		switch(e._hx_index) {
		case 1:
			return this.preprocValue(e.v) != null;
		case 3:
			return this.evalPreproCond(e.e);
		case 6:
			let _g = e.e1;
			let _g1 = e.e2;
			switch(e.op) {
			case "&&":
				if(this.evalPreproCond(_g)) {
					return this.evalPreproCond(_g1);
				} else {
					return false;
				}
				break;
			case "||":
				if(!this.evalPreproCond(_g)) {
					return this.evalPreproCond(_g1);
				} else {
					return true;
				}
				break;
			default:
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
				}
				return false;
			}
			break;
		case 7:
			if(e.op == "!") {
				return !this.evalPreproCond(e.e);
			} else {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
				}
				return false;
			}
			break;
		default:
			if(!this.resumeErrors) {
				throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]._hx_name));
			}
			return false;
		}
	}
	preprocess(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			if(this.evalPreproCond(this.parsePreproCond())) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	skipTokens() {
		let spos = this.preprocStack.length - 1;
		let obj = this.preprocStack[spos];
		while(true) {
			let tk = this.token();
			if(tk == hscript_Token.TEof) {
				if(!this.resumeErrors) {
					throw haxe_Exception.thrown(hscript_Error.EInvalidPreprocessor("Unclosed"));
				}
			}
			if(this.preprocStack[spos] != obj) {
				let _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	tokenComment(op,char) {
		let c = HxOverrides.cca(op,1);
		if(c == 47) {
			while(char != 13 && char != 10) {
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					break;
				}
			}
			this.char = char;
			return this.token();
		}
		if(c == 42) {
			let old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			while(true) {
				while(char != 42) {
					if(char == 10) {
						this.line++;
					}
					char = this.input.charCodeAt(this.readPos++);
					if(char != char) {
						this.line = old;
						if(!this.resumeErrors) {
							throw haxe_Exception.thrown(hscript_Error.EUnterminatedComment);
						}
						break;
					}
				}
				char = this.input.charCodeAt(this.readPos++);
				if(char != char) {
					this.line = old;
					if(!this.resumeErrors) {
						throw haxe_Exception.thrown(hscript_Error.EUnterminatedComment);
					}
					break;
				}
				if(char == 47) {
					break;
				}
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	constString(c) {
		switch(c._hx_index) {
		case 0:
			let _g = c.v;
			if(_g == null) {
				return "null";
			} else {
				return "" + _g;
			}
			break;
		case 1:
			let _g1 = c.f;
			if(_g1 == null) {
				return "null";
			} else {
				return "" + _g1;
			}
			break;
		case 2:
			return c.s;
		}
	}
	tokenString(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			return this.constString(t.c);
		case 2:
			return t.s;
		case 3:
			return t.s;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			return "@" + t.s;
		case 16:
			return "#" + t.s;
		}
	}
}
$hxClasses["hscript.Parser"] = hscript_Parser;
hscript_Parser.__name__ = "hscript.Parser";
Object.assign(hscript_Parser.prototype, {
	__class__: hscript_Parser
	,line: null
	,opChars: null
	,identChars: null
	,opPriority: null
	,opRightAssoc: null
	,unops: null
	,preprocesorValues: null
	,allowJSON: null
	,allowTypes: null
	,allowMetadata: null
	,resumeErrors: null
	,input: null
	,readPos: null
	,char: null
	,ops: null
	,idents: null
	,uid: null
	,tokens: null
	,preprocStack: null
});
class tink_core_Callback {
	static invoke(this1,data) {
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			this1(data);
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(function() {
				this1(data);
			});
		}
	}
	static defer(f) {
		haxe_Timer.delay(f,0);
	}
}
class tink_core_LinkObject {
}
$hxClasses["tink.core.LinkObject"] = tink_core_LinkObject;
tink_core_LinkObject.__name__ = "tink.core.LinkObject";
tink_core_LinkObject.__isInterface__ = true;
Object.assign(tink_core_LinkObject.prototype, {
	__class__: tink_core_LinkObject
	,cancel: null
});
class tink_core_SimpleLink {
	constructor(f) {
		this.f = f;
	}
	cancel() {
		if(this.f != null) {
			this.f();
			this.f = null;
		}
	}
}
$hxClasses["tink.core.SimpleLink"] = tink_core_SimpleLink;
tink_core_SimpleLink.__name__ = "tink.core.SimpleLink";
tink_core_SimpleLink.__interfaces__ = [tink_core_LinkObject];
Object.assign(tink_core_SimpleLink.prototype, {
	__class__: tink_core_SimpleLink
	,f: null
});
class tink_core__$Callback_LinkPair {
	constructor(a,b) {
		this.dissolved = false;
		this.a = a;
		this.b = b;
	}
	cancel() {
		if(!this.dissolved) {
			this.dissolved = true;
			let this1 = this.a;
			if(this1 != null) {
				this1.cancel();
			}
			let this2 = this.b;
			if(this2 != null) {
				this2.cancel();
			}
			this.a = null;
			this.b = null;
		}
	}
}
$hxClasses["tink.core._Callback.LinkPair"] = tink_core__$Callback_LinkPair;
tink_core__$Callback_LinkPair.__name__ = "tink.core._Callback.LinkPair";
tink_core__$Callback_LinkPair.__interfaces__ = [tink_core_LinkObject];
Object.assign(tink_core__$Callback_LinkPair.prototype, {
	__class__: tink_core__$Callback_LinkPair
	,a: null
	,b: null
	,dissolved: null
});
class tink_core__$Callback_ListCell {
	constructor(cb,list) {
		if(cb == null) {
			throw haxe_Exception.thrown("callback expected but null received");
		}
		this.cb = cb;
		this.list = list;
	}
	cancel() {
		if(this.list != null) {
			let list = this.list;
			this.cb = null;
			this.list = null;
			if(--list.used <= list.cells.length >> 1) {
				list.compact();
			}
		}
	}
}
$hxClasses["tink.core._Callback.ListCell"] = tink_core__$Callback_ListCell;
tink_core__$Callback_ListCell.__name__ = "tink.core._Callback.ListCell";
tink_core__$Callback_ListCell.__interfaces__ = [tink_core_LinkObject];
Object.assign(tink_core__$Callback_ListCell.prototype, {
	__class__: tink_core__$Callback_ListCell
	,cb: null
	,list: null
});
class tink_core_Disposable {
}
$hxClasses["tink.core.Disposable"] = tink_core_Disposable;
tink_core_Disposable.__name__ = "tink.core.Disposable";
tink_core_Disposable.__isInterface__ = true;
class tink_core_OwnedDisposable {
}
$hxClasses["tink.core.OwnedDisposable"] = tink_core_OwnedDisposable;
tink_core_OwnedDisposable.__name__ = "tink.core.OwnedDisposable";
tink_core_OwnedDisposable.__isInterface__ = true;
tink_core_OwnedDisposable.__interfaces__ = [tink_core_Disposable];
class tink_core_SimpleDisposable {
	constructor(dispose) {
		if(tink_core_SimpleDisposable._hx_skip_constructor) {
			return;
		}
		this._hx_constructor(dispose);
	}
	_hx_constructor(dispose) {
		this.disposeHandlers = [];
		this.f = dispose;
	}
	dispose() {
		let _g = this.disposeHandlers;
		if(_g != null) {
			this.disposeHandlers = null;
			let f = this.f;
			this.f = tink_core_SimpleDisposable.noop;
			f();
			let _g1 = 0;
			while(_g1 < _g.length) _g[_g1++]();
		}
	}
	static noop() {
	}
}
$hxClasses["tink.core.SimpleDisposable"] = tink_core_SimpleDisposable;
tink_core_SimpleDisposable.__name__ = "tink.core.SimpleDisposable";
tink_core_SimpleDisposable.__interfaces__ = [tink_core_OwnedDisposable];
Object.assign(tink_core_SimpleDisposable.prototype, {
	__class__: tink_core_SimpleDisposable
	,f: null
	,disposeHandlers: null
});
class tink_core_CallbackList extends tink_core_SimpleDisposable {
	constructor(destructive) {
		tink_core_SimpleDisposable._hx_skip_constructor = true;
		super();
		tink_core_SimpleDisposable._hx_skip_constructor = false;
		this._hx_constructor(destructive);
	}
	_hx_constructor(destructive) {
		if(destructive == null) {
			destructive = false;
		}
		this.onfill = function() {
		};
		this.ondrain = function() {
		};
		this.busy = false;
		this.queue = [];
		this.used = 0;
		let _gthis = this;
		super._hx_constructor(function() {
			if(!_gthis.busy) {
				_gthis.destroy();
			}
		});
		this.destructive = destructive;
		this.cells = [];
	}
	destroy() {
		let _g = 0;
		let _g1 = this.cells;
		while(_g < _g1.length) {
			let c = _g1[_g];
			++_g;
			c.cb = null;
			c.list = null;
		}
		this.queue = null;
		this.cells = null;
		if(this.used > 0) {
			this.used = 0;
			let fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		}
	}
	invoke(data) {
		let _gthis = this;
		if(tink_core_Callback.depth < 500) {
			tink_core_Callback.depth++;
			if(_gthis.disposeHandlers != null) {
				if(_gthis.busy) {
					if(_gthis.destructive != true) {
						let _g = $bind(_gthis,_gthis.invoke);
						let data1 = data;
						let tmp = function() {
							_g(data1);
						};
						_gthis.queue.push(tmp);
					}
				} else {
					_gthis.busy = true;
					if(_gthis.destructive) {
						_gthis.dispose();
					}
					let length = _gthis.cells.length;
					let _g = 0;
					while(_g < length) {
						let _this = _gthis.cells[_g++];
						if(_this.list != null) {
							_this.cb(data);
						}
					}
					_gthis.busy = false;
					if(_gthis.disposeHandlers == null) {
						_gthis.destroy();
					} else {
						if(_gthis.used < _gthis.cells.length) {
							_gthis.compact();
						}
						if(_gthis.queue.length > 0) {
							(_gthis.queue.shift())();
						}
					}
				}
			}
			tink_core_Callback.depth--;
		} else {
			tink_core_Callback.defer(function() {
				if(_gthis.disposeHandlers != null) {
					if(_gthis.busy) {
						if(_gthis.destructive != true) {
							let _g = $bind(_gthis,_gthis.invoke);
							let data1 = data;
							let tmp = function() {
								_g(data1);
							};
							_gthis.queue.push(tmp);
						}
					} else {
						_gthis.busy = true;
						if(_gthis.destructive) {
							_gthis.dispose();
						}
						let length = _gthis.cells.length;
						let _g = 0;
						while(_g < length) {
							let _this = _gthis.cells[_g++];
							if(_this.list != null) {
								_this.cb(data);
							}
						}
						_gthis.busy = false;
						if(_gthis.disposeHandlers == null) {
							_gthis.destroy();
						} else {
							if(_gthis.used < _gthis.cells.length) {
								_gthis.compact();
							}
							if(_gthis.queue.length > 0) {
								(_gthis.queue.shift())();
							}
						}
					}
				}
			});
		}
	}
	compact() {
		if(this.busy) {
			return;
		} else if(this.used == 0) {
			this.resize(0);
			let fn = this.ondrain;
			if(tink_core_Callback.depth < 500) {
				tink_core_Callback.depth++;
				fn();
				tink_core_Callback.depth--;
			} else {
				tink_core_Callback.defer(fn);
			}
		} else {
			let compacted = 0;
			let _g = 0;
			let _g1 = this.cells.length;
			while(_g < _g1) {
				let i = _g++;
				let _g1 = this.cells[i];
				if(_g1.cb != null) {
					if(compacted != i) {
						this.cells[compacted] = _g1;
					}
					if(++compacted == this.used) {
						break;
					}
				}
			}
			this.resize(this.used);
		}
	}
	resize(length) {
		this.cells.length = length;
	}
}
$hxClasses["tink.core.CallbackList"] = tink_core_CallbackList;
tink_core_CallbackList.__name__ = "tink.core.CallbackList";
tink_core_CallbackList.__super__ = tink_core_SimpleDisposable;
Object.assign(tink_core_CallbackList.prototype, {
	__class__: tink_core_CallbackList
	,destructive: null
	,cells: null
	,used: null
	,queue: null
	,busy: null
	,ondrain: null
	,onfill: null
});
class tink_core_TypedError {
	static tryFinally(f,cleanup) {
		try { return f(); } finally { cleanup(); }
		return null;
	}
}
$hxClasses["tink.core.TypedError"] = tink_core_TypedError;
tink_core_TypedError.__name__ = "tink.core.TypedError";
class tink_state__$Scheduler_SchedulerObject {
}
$hxClasses["tink.state._Scheduler.SchedulerObject"] = tink_state__$Scheduler_SchedulerObject;
tink_state__$Scheduler_SchedulerObject.__name__ = "tink.state._Scheduler.SchedulerObject";
tink_state__$Scheduler_SchedulerObject.__isInterface__ = true;
Object.assign(tink_state__$Scheduler_SchedulerObject.prototype, {
	__class__: tink_state__$Scheduler_SchedulerObject
	,schedule: null
});
class tink_state__$Scheduler_DirectScheduler {
	constructor() {
		this.queue = null;
	}
	schedule(s) {
		if(this.queue != null) {
			this.queue.push(s);
		} else {
			let wasUpdating = tink_state_Observable.isUpdating;
			tink_state_Observable.isUpdating = true;
			tink_core_TypedError.tryFinally($bind(s,s.run),function() {
				tink_state_Observable.isUpdating = wasUpdating;
			});
		}
	}
}
$hxClasses["tink.state._Scheduler.DirectScheduler"] = tink_state__$Scheduler_DirectScheduler;
tink_state__$Scheduler_DirectScheduler.__name__ = "tink.state._Scheduler.DirectScheduler";
tink_state__$Scheduler_DirectScheduler.__interfaces__ = [tink_state__$Scheduler_SchedulerObject];
Object.assign(tink_state__$Scheduler_DirectScheduler.prototype, {
	__class__: tink_state__$Scheduler_DirectScheduler
	,queue: null
});
class tink_state_Scheduler {
	static batched(run) {
		return new tink_state__$Scheduler_BatchScheduler(run);
	}
	static batcher() {
		let later = function(fn) {
			haxe_Timer.delay(fn,10);
		};
		let later1;
		try {
			later1 = window.requestAnimationFrame != null ? function(fn) {
				window.requestAnimationFrame(fn);
			} : later;
		} catch( _g ) {
			later1 = later;
		}
		let asap = function(fn) {
			later1(fn);
		};
		let asap1;
		try {
			let p = Promise.resolve(42);
			asap1 = function(fn) {
				p.then(fn);
			};
		} catch( _g ) {
			asap1 = asap;
		}
		return function(b,isRerun) {
			let _g = $bind(b,b.progress);
			let maxSeconds = .01;
			(isRerun ? later1 : asap1)(function() {
				return _g(maxSeconds);
			});
		};
	}
}
class tink_state__$Scheduler_BatchScheduler {
	constructor(run) {
		this.scheduled = false;
		this.queue = [];
		this.run = run;
	}
	progress(maxSeconds) {
		let _gthis = this;
		let wasUpdating = tink_state_Observable.isUpdating;
		tink_state_Observable.isUpdating = true;
		return tink_core_TypedError.tryFinally(function() {
			let end = HxOverrides.now() / 1000 + maxSeconds;
			while(true) {
				let old = _gthis.queue;
				_gthis.queue = [];
				let _g = 0;
				while(_g < old.length) old[_g++].run();
				if(!(_gthis.queue.length > 0 && HxOverrides.now() / 1000 < end)) {
					break;
				}
			}
			if(_gthis.queue.length > 0) {
				_gthis.run(_gthis,true);
				return true;
			} else {
				return _gthis.scheduled = false;
			}
		},function() {
			tink_state_Observable.isUpdating = wasUpdating;
		});
	}
	schedule(s) {
		this.queue.push(s);
		if(!this.scheduled) {
			this.scheduled = true;
			this.run(this,false);
		}
	}
}
$hxClasses["tink.state._Scheduler.BatchScheduler"] = tink_state__$Scheduler_BatchScheduler;
tink_state__$Scheduler_BatchScheduler.__name__ = "tink.state._Scheduler.BatchScheduler";
tink_state__$Scheduler_BatchScheduler.__interfaces__ = [tink_state__$Scheduler_SchedulerObject];
Object.assign(tink_state__$Scheduler_BatchScheduler.prototype, {
	__class__: tink_state__$Scheduler_BatchScheduler
	,queue: null
	,scheduled: null
	,run: null
});
class tink_state_Observable {
	static get_value(this1) {
		let ret = this1.getValue();
		if(tink_state_internal_AutoObservable.cur != null) {
			tink_state_internal_AutoObservable.cur.subscribeTo(this1,ret);
		}
		return ret;
	}
}
tink_state_Observable.__properties__ = {get_value: "get_value"};
class tink_state_Schedulable {
}
$hxClasses["tink.state.Schedulable"] = tink_state_Schedulable;
tink_state_Schedulable.__name__ = "tink.state.Schedulable";
tink_state_Schedulable.__isInterface__ = true;
Object.assign(tink_state_Schedulable.prototype, {
	__class__: tink_state_Schedulable
	,run: null
});
class tink_state__$Scheduler_JustOnce {
	constructor() {
	}
	run() {
		let f = this.f;
		this.f = null;
		tink_state__$Scheduler_JustOnce.pool.push(this);
		f();
	}
	static call(f) {
		let _g = tink_state__$Scheduler_JustOnce.pool.pop();
		let ret = _g == null ? new tink_state__$Scheduler_JustOnce() : _g;
		ret.f = f;
		return ret;
	}
}
$hxClasses["tink.state._Scheduler.JustOnce"] = tink_state__$Scheduler_JustOnce;
tink_state__$Scheduler_JustOnce.__name__ = "tink.state._Scheduler.JustOnce";
tink_state__$Scheduler_JustOnce.__interfaces__ = [tink_state_Schedulable];
Object.assign(tink_state__$Scheduler_JustOnce.prototype, {
	__class__: tink_state__$Scheduler_JustOnce
	,f: null
});
class tink_state_State {
	static get_value(this1) {
		let ret = this1.getValue();
		if(tink_state_internal_AutoObservable.cur != null) {
			tink_state_internal_AutoObservable.cur.subscribeTo(this1,ret);
		}
		return ret;
	}
	static _new(value,comparator,guard,onStatusChange,toString) {
		return guard == null ? new tink_state__$State_SimpleState(value,comparator,onStatusChange,toString) : new tink_state__$State_GuardedState(value,guard,comparator,onStatusChange,toString);
	}
}
tink_state_State.__properties__ = {get_value: "get_value"};
class tink_state__$State_StateObject {
}
$hxClasses["tink.state._State.StateObject"] = tink_state__$State_StateObject;
tink_state__$State_StateObject.__name__ = "tink.state._State.StateObject";
tink_state__$State_StateObject.__isInterface__ = true;
tink_state__$State_StateObject.__interfaces__ = [tink_state_internal_ObservableObject];
Object.assign(tink_state__$State_StateObject.prototype, {
	__class__: tink_state__$State_StateObject
	,set: null
});
class tink_state__$State_SimpleState extends tink_state_internal_Invalidator {
	constructor(value,comparator,onStatusChange,toString) {
		if(tink_state_internal_Invalidator._hx_skip_constructor) {
			super();
			return;
		}
		tink_state_internal_Invalidator._hx_skip_constructor = true;
		super();
		tink_state_internal_Invalidator._hx_skip_constructor = false;
		this._hx_constructor(value,comparator,onStatusChange,toString);
	}
	_hx_constructor(value,comparator,onStatusChange,toString) {
		super._hx_constructor(toString);
		this.value = value;
		this.comparator = comparator;
		if(onStatusChange != null) {
			let _g = onStatusChange;
			let a1 = false;
			let tmp = function() {
				_g(a1);
			};
			this.list.ondrain = tmp;
			let _g1 = onStatusChange;
			let a11 = true;
			let tmp1 = function() {
				_g1(a11);
			};
			this.list.onfill = tmp1;
		}
	}
	getValue() {
		return this.value;
	}
	getComparator() {
		return this.comparator;
	}
	set(value) {
		if(tink_state_Observable.isUpdating && tink_state_Scheduler.direct.queue == null) {
			$global.console.warn("Updating state in a binding");
		}
		let this1 = this.comparator;
		let b = this.value;
		if(!(this1 == null ? value == b : this1(value,b))) {
			this.value = value;
			this.fire();
		}
		return value;
	}
}
$hxClasses["tink.state._State.SimpleState"] = tink_state__$State_SimpleState;
tink_state__$State_SimpleState.__name__ = "tink.state._State.SimpleState";
tink_state__$State_SimpleState.__interfaces__ = [tink_state__$State_StateObject];
tink_state__$State_SimpleState.__super__ = tink_state_internal_Invalidator;
Object.assign(tink_state__$State_SimpleState.prototype, {
	__class__: tink_state__$State_SimpleState
	,comparator: null
	,value: null
});
class tink_state__$State_GuardedState extends tink_state__$State_SimpleState {
	constructor(value,guard,comparator,onStatusChange,toString) {
		tink_state_internal_Invalidator._hx_skip_constructor = true;
		super();
		tink_state_internal_Invalidator._hx_skip_constructor = false;
		this._hx_constructor(value,guard,comparator,onStatusChange,toString);
	}
	_hx_constructor(value,guard,comparator,onStatusChange,toString) {
		this.guardApplied = false;
		super._hx_constructor(value,comparator,onStatusChange,toString);
		this.guard = guard;
	}
	getValue() {
		if(!this.guardApplied) {
			this.guardApplied = true;
			return this.value = this.guard(this.value);
		} else {
			return this.value;
		}
	}
	set(value) {
		if(!this.guardApplied) {
			this.guardApplied = true;
			this.value = this.guard(this.value);
		}
		return super.set(this.guard(value));
	}
}
$hxClasses["tink.state._State.GuardedState"] = tink_state__$State_GuardedState;
tink_state__$State_GuardedState.__name__ = "tink.state._State.GuardedState";
tink_state__$State_GuardedState.__super__ = tink_state__$State_SimpleState;
Object.assign(tink_state__$State_GuardedState.prototype, {
	__class__: tink_state__$State_GuardedState
	,guard: null
	,guardApplied: null
});
class tink_state_internal__$AutoObservable_Computation {
	static sync(f) {
		return function(_,_1) {
			return f();
		};
	}
}
class tink_state_internal__$AutoObservable_SubscriptionTo {
	constructor(source,cur,owner) {
		this.used = true;
		this.source = source;
		this.last = cur;
		this.lastRev = source.getRevision();
		this.owner = owner;
		if(owner.hot) {
			this.link = this.source.onInvalidate(this.owner);
		}
	}
}
$hxClasses["tink.state.internal._AutoObservable.SubscriptionTo"] = tink_state_internal__$AutoObservable_SubscriptionTo;
tink_state_internal__$AutoObservable_SubscriptionTo.__name__ = "tink.state.internal._AutoObservable.SubscriptionTo";
Object.assign(tink_state_internal__$AutoObservable_SubscriptionTo.prototype, {
	__class__: tink_state_internal__$AutoObservable_SubscriptionTo
	,source: null
	,last: null
	,lastRev: null
	,link: null
	,owner: null
	,used: null
});
class tink_state_internal__$AutoObservable_Derived {
}
$hxClasses["tink.state.internal._AutoObservable.Derived"] = tink_state_internal__$AutoObservable_Derived;
tink_state_internal__$AutoObservable_Derived.__name__ = "tink.state.internal._AutoObservable.Derived";
tink_state_internal__$AutoObservable_Derived.__isInterface__ = true;
Object.assign(tink_state_internal__$AutoObservable_Derived.prototype, {
	__class__: tink_state_internal__$AutoObservable_Derived
	,subscribeTo: null
});
class tink_state_internal_AutoObservable extends tink_state_internal_Invalidator {
	constructor(compute,comparator,toString) {
		tink_state_internal_Invalidator._hx_skip_constructor = true;
		super();
		tink_state_internal_Invalidator._hx_skip_constructor = false;
		this._hx_constructor(compute,comparator,toString);
	}
	_hx_constructor(compute,comparator,toString) {
		this.sync = true;
		this.dependencies = new Map();
		this.last = null;
		this.status = 0;
		this.hot = false;
		let _gthis = this;
		super._hx_constructor(toString);
		this.compute = compute;
		this.comparator = comparator;
		this.list.onfill = function() {
			_gthis.getValue();
			_gthis.getRevision();
			if(_gthis.subscriptions != null) {
				let _g = 0;
				let _g1 = _gthis.subscriptions;
				while(_g < _g1.length) {
					let s = _g1[_g];
					++_g;
					s.link = s.source.onInvalidate(s.owner);
				}
			}
			_gthis.hot = true;
		};
		this.list.ondrain = function() {
			_gthis.hot = false;
			if(_gthis.subscriptions != null) {
				let _g = 0;
				let _g1 = _gthis.subscriptions;
				while(_g < _g1.length) {
					let this1 = _g1[_g++].link;
					if(this1 != null) {
						this1.cancel();
					}
				}
			}
		};
	}
	getRevision() {
		if(this.hot) {
			return this.revision;
		}
		if(this.subscriptions == null) {
			this.getValue();
		}
		let _g = 0;
		let _g1 = this.subscriptions;
		while(_g < _g1.length) if(_g1[_g++].source.getRevision() > this.revision) {
			return this.revision = tink_state_internal_Revision._new();
		}
		return this.revision;
	}
	subsValid() {
		if(this.subscriptions == null) {
			return false;
		}
		let _g = 0;
		let _g1 = this.subscriptions;
		while(_g < _g1.length) {
			let s = _g1[_g];
			++_g;
			if(s.source.getRevision() != s.lastRev) {
				return false;
			}
		}
		return true;
	}
	isValid() {
		if(this.status != 0) {
			if(!this.hot) {
				return this.subsValid();
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	getComparator() {
		return this.comparator;
	}
	getValue() {
		let _gthis = this;
		let doCompute = function() {
			_gthis.status = 1;
			if(_gthis.subscriptions != null) {
				let _g = 0;
				let _g1 = _gthis.subscriptions;
				while(_g < _g1.length) _g1[_g++].used = false;
			}
			_gthis.subscriptions = [];
			_gthis.sync = true;
			let before = tink_state_internal_AutoObservable.cur;
			tink_state_internal_AutoObservable.cur = _gthis;
			let ret = _gthis.compute(function(v) {
				_gthis.update(v);
			});
			tink_state_internal_AutoObservable.cur = before;
			_gthis.last = ret;
			_gthis.sync = false;
		};
		let prevSubs = this.subscriptions;
		let count = 0;
		while(!this.isValid()) if(++count == tink_state_Observable.MAX_ITERATIONS) {
			throw haxe_Exception.thrown("no result after " + tink_state_Observable.MAX_ITERATIONS + " attempts");
		} else if(this.subscriptions != null) {
			let valid = true;
			let _g = 0;
			let _g1 = this.subscriptions;
			while(_g < _g1.length) {
				let s = _g1[_g];
				++_g;
				let nextRev = s.source.getRevision();
				let tmp;
				if(nextRev == s.lastRev) {
					tmp = false;
				} else {
					s.lastRev = nextRev;
					let before = s.last;
					let before1 = tink_state_internal_AutoObservable.cur;
					tink_state_internal_AutoObservable.cur = null;
					let ret = s.source.getValue();
					tink_state_internal_AutoObservable.cur = before1;
					s.last = ret;
					let this1 = s.source.getComparator();
					let a = s.last;
					tmp = !(this1 == null ? a == before : this1(a,before));
				}
				if(tmp) {
					valid = false;
					break;
				}
			}
			if(valid) {
				this.status = 1;
			} else {
				doCompute();
				if(prevSubs != null) {
					let _g = 0;
					while(_g < prevSubs.length) {
						let s = prevSubs[_g];
						++_g;
						if(!s.used) {
							if(this.hot) {
								let this1 = s.link;
								if(this1 != null) {
									this1.cancel();
								}
							}
							this.dependencies.delete(s.source);
						}
					}
				}
			}
		} else {
			doCompute();
		}
		return this.last;
	}
	update(value) {
		if(!this.sync) {
			this.last = value;
			this.fire();
		}
	}
	subscribeTo(source,cur) {
		let _g = this.dependencies.get(source);
		if(_g == null) {
			let sub = new tink_state_internal__$AutoObservable_SubscriptionTo(source,cur,this);
			this.dependencies.set(source,sub);
			this.subscriptions.push(sub);
		} else if(!_g.used) {
			_g.used = true;
			_g.last = cur;
			this.subscriptions.push(_g);
		}
	}
	invalidate() {
		if(this.status == 1) {
			this.status = 0;
			this.fire();
		}
	}
}
$hxClasses["tink.state.internal.AutoObservable"] = tink_state_internal_AutoObservable;
tink_state_internal_AutoObservable.__name__ = "tink.state.internal.AutoObservable";
tink_state_internal_AutoObservable.__interfaces__ = [tink_state_internal_ObservableObject,tink_state_internal__$AutoObservable_Derived,tink_state_internal_Invalidatable];
tink_state_internal_AutoObservable.__super__ = tink_state_internal_Invalidator;
Object.assign(tink_state_internal_AutoObservable.prototype, {
	__class__: tink_state_internal_AutoObservable
	,compute: null
	,hot: null
	,status: null
	,last: null
	,subscriptions: null
	,dependencies: null
	,comparator: null
	,sync: null
});
class tink_state_internal_Revision {
	static _new() {
		return tink_state_internal_Revision.counter += 1.0;
	}
}
function $getIterator(o) { if( o instanceof Array ) return new haxe_iterators_ArrayIterator(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
{
	String.prototype.__class__ = $hxClasses["String"] = String;
	String.__name__ = "String";
	$hxClasses["Array"] = Array;
	Array.__name__ = "Array";
	Date.prototype.__class__ = $hxClasses["Date"] = Date;
	Date.__name__ = "Date";
	var Int = { };
	var Dynamic = { };
	var Float = Number;
	var Bool = Boolean;
	var Class = { };
	var Enum = { };
}
haxe_ds_ObjectMap.count = 0;
haxe_Resource.content = [{ name : "haxeui-core/styles/dark/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRFJPUERPV05TDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvdXBfZG93bl9hcnJvd3MucG5nIjsNCn0NCg0KLmRyb3Bkb3duLXBvcHVwIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQp9DQo"},{ name : "haxeui-core/styles/dark/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMTgxYTFiOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQp9DQo"},{ name : "haxeui-core/styles/default/dialogs/question-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABLFBMVEUAAAB7e4AzMzNLS0tUVFQ/Pz8lJSVRUVGenp6mprLIyMg6Oj0LCwtqamoLCws+Pj5CQkJVVVU6OjpFRUUmJiZVVVULCwsXFxdRUVENDQ1UVFSqqqyfn6K/v76zs7KZmZlRUVNQUFFzc3NycnIsWdUqVMn////o6Oju7u7a2uvc3NvPz9FJas4nTr0mTLrh4eFfgeFbfd9XedvMzMwrVcs5Wr4xVb5cc7pzlvRtj+4wYuXW1uSjsNeRotVPctVLbdJ1jNBeectBY8qVoshadciJlsYtVMPAwMGJlsBlfMA3V7kfRrZEX7MkSLNOZK08V6wSM5S2wuZ/mOIyYeEwX+GcreDR0dvPz9rY2NgzX9jJydA+ZM+lrsfDw8M+YMN1h8IqUL93iLwmSrQkRq3qyJ1kAAAAJHRSTlMArkdAPRgJB6Hc0pKHfHRubGNhXFxVVE9NHRXX19TUooaGeHiocz46AAAA7ElEQVQY0yXI1XbCUBRF0ROD4K719gbSuAd397oL8P//wA3Mhz3GXuAp0plEIkMX4cRP3wbLWPCO9h9/ni03OpLUaahs3isUq3aNaqVSNbrCFQXARNSBZpSwR33wHmGAuui3tHaz+VB60dv9SwpSwlSTpJ79Z273v1MzBXHR1nvOzhW/l0vH/olDzJy1/mVFEBRZHs3GMUiK7hfHcYqCZ+SOk0CeTZwPZPG8hZA8OSeBuRYX1hPiefTMLT5vGACSeF3PUa2G5us3ggQAX5qoD1ebzWpYJ9I+8EouFLjHAqEc/keFbDQcjmYLgB0Ay8YloSiVm/0AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/right_arrow_square.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHAQMAAAD+nMWQAAAABlBMVEUAAABQUFAYC5vfAAAAAXRSTlMAQObYZgAAABRJREFUCNdjUGAwYLBgsAFiAwYFAAkiAU0pXr/sAAAAAElFTkSuQmCC"},{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgewogICAgZm9udC1uYW1lOiAiQXJpYWwiOwogICAgZm9udC1zaXplOiAxM3B4Owp9CgouYnV0dG9uOm5hdGl2ZSB7CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLnByb2dyZXNzOm5hdGl2ZSwgLnNsaWRlcjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBmaWx0ZXI6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwp9CgoudGV4dGZpZWxkOm5hdGl2ZSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgY29sb3I6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87Cn0KCi5udW1iZXJzdGVwcGVyOm5hdGl2ZSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgY29sb3I6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgd2lkdGg6IDcwcHg7CiAgICBoZWlnaHQ6IDIwcHg7Cn0KCi50ZXh0YXJlYTpuYXRpdmUgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKICAgIGNvbG9yOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGZvbnQtbmFtZTogIkFyaWFsIjsKICAgIGZvbnQtc2l6ZTogMTNweDsKfQoKLmNvbXBvbmVudDpkaXNhYmxlZCB7CiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkOwp9"},{ name : "haxeui-core/styles/default/right_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHAQMAAAAVq36TAAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABVJREFUCNdjaGA4wPCA4QMQH2BoAAAkXgUx2KhS+wAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/up_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAKklEQVQImWN8K6PCwMDAwMCQbKIz98wVCJsJLgQnoaJwDpzNGBAQwIABAOGNCDDIObJsAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUkFOR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucmFuZ2Ugew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgcGFkZGluZzogMnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KfQ0KDQoucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5ob3Jpem9udGFsLXJhbmdlIHsNCiAgICBiYWNrZ3JvdW5kOiAjRjFGMUYxICNGRkZGRkYgdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQp9ICAgIA0KDQouaG9yaXpvbnRhbC1yYW5nZSAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM2Q0FBREIgIzIxNkFBRSB2ZXJ0aWNhbDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogI0YxRjFGMSAjRkZGRkZGIGhvcml6b250YWw7DQogICAgaW5pdGlhbC13aWR0aDogMjBweDsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM2Q0FBREIgIzIxNkFBRSBob3Jpem9udGFsOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0K"},{ name : "haxeui-core/styles/default/dialogs/cross-circle.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAC1lBMVEUAAABFRUVSUlIgICDj4+PJycnOztq7u8hxcXaWlpZAQEBeXl5AQEA/Pz9PT09QUFCfn5/a2urPz9/Z2dng4OC7u77ExNLPz8+2trfW1tbU1NSNjZhxcXl/f4JPT1VoaGpWVlmKiooHBwcHBwcWFhd2dnUgICF6enoHBwc8PDw8PD09PT1DQ0NYWFhSUlJVVVVVVVUiIiIHBwcaGhpVVVUrKysNDQ1RUVE5OTlGRkYzMzNLS0sUFBRUVFQvLy8ICAhOTk5TU1NVVVUQEBDb29vY2NfKytPHx9Hc3NzU1NPJycnExMS9vby3t7zFxcTa2trZ2dm6usG2tr3IyMetra/CwsGampuQkJKpqamenp25ubm4uLiTk5NISEtHR0t+fn54eHj////b29vSSkrQERHf39/aUlLY2NjW1tbT09PUERGwEBDu7u7ZERHKERHiWlqqERHKQkK7MzO+vr7DOzu9NjbFEhK0ERHb2+rQ0NDOzs7CwsLVTU3AERHi4u/n5+fY2OXUwcrCwsXTv7/vZ2fqYWHlXV3APz/GPj7AOTmpICCsHh6yGBi1FRWnFRWdFRW7FBSwFBSyERGfERHs7OzExMXJtri+gIL2bm7za2vsZGToYGDfV1e0UlLYT0+5LCytIyOrGxuuGBirFha6ERH5+fnf3+zq6url5eXX1+Hd3d3T093OztbLy9HLy8vGsrHCra7Dk5fKlpbAj5TGkpHLjIzGhoa2fYK4env8dHTEa2u7Y2LDYGCyXV6lVFfbU1O/R0fPRkaZQUO5PT2vOjqrNze5MDCrKyukKiqpKSmyJCSlJCTGISG2Hx+IHh+xHBynGxuhGxulGRnLGBjCExPTERHGERGtERGlERGNDxDBDg6lCwt+CQnIyM/IyM3GxsrGxsXOu8C5foKtTU7IQUHKPj62NDS1MzO/KyuyKiq3JSWVHh+UHh7GHBy5GBjMFRW+FBTVEhJdMPSIAAAAYXRSTlMADUQJ/v745amacGVgKAgHpP309PDt7OTf3t7NuK6pmZKNjYaFhISDd3ZzbWppaWVhXVxXVlJQTExIRT48OzYyLy4kEPj49fX09PHx8enn5ubj4+Df3sLCv7+8vKaampKSidxtUQAAAtNJREFUOMtiIAHwOTGZGOjrG5gwOfFhkWa05VaMkhRhYRGRilbktmVEl3fkFvBPTYKC1AABbkcUaX4mdclV6c1b9xwoLT2wZ2tzepKUOhM/krw5p0dG8672mtYZO3fOnF3Tvqs5Q5jTHKGCidMlc1P7/hkzWma1trbOmjkzrX1TpisnE0zeQVW4cltnS0tbPgzMmt25LdNT1QHqfoB0xau2dLa0pcHBvHlz2kq3VAXrQvxiLVC5/vDsOcnJiclQkHjwYM3+w9OqYqzB4aMn/mB38pzCwsTExEIgADM6OpKf7Gb10wOFGG/8ug3P2jpKEkGgBAjAjM6S5OfrWRN4gQosI6p3dNSUli4AiS992bUKFFL9XQtKi6ZXR1oCFfCEFs9NLikqKupaWp9RVZmZkQ6Uv3Sha8GxudUSPEAFOl7FR+aVFhUd6568Dio/ue/ShYXd849U++gAFXCxFh9PKyo61XfjxmSYfN/ihUAFx6cWc0EUAHSyZv6iAhAAy7MUFCxevGjR+VcnIQq0vYuPPu3JBgGI/Ir6iUDQ03P26FRRbZAjJaofv3hXDgQw+eVTynuB4PzcphCQIy3CmnacOrNkyRKwfEEBUD4nZwIQdE9vCrcABZT8/Q2nz1ypBctfr629PiUHCGprP5ye1iQPCihmLdF7e89eLssGymeXAUE2UB7I6Nm71leLGRQZVrJrp514+z5vUuqkPDCYlANkXDnx8K6sFSS6NQPXbL54OSWlPAUMwIy8ixvXBGlCky5gdgpuqx/1X/uYhQDX+qevdlewgyUpUw62lZvfZF/NhYKr2a83rmTjMIWnSWZDDraGxn03b99Kyc1NuXX75r7GBjYOQ2YGhArjWPaGisbth87duXPu0PbGigb2OGOQPALYqMmIVVQsqwOCZRUVYjJqNuhZy9lMRU6aXUhQUIhdWk7FzBlb7rQ30lBWUlLWMLJnJCHPAwCfzkekVgjZxAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/left_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMCQbKLDBGcxMDAwwVkMDAzMt5zsGGCAae6ZKwgOAwMDnA81AMIHAN2yC5bbbdIbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/dark/down_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAEAQMAAAB4CLc+AAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABBJREFUCNdj+MdQw2DBIAAACh4Bwxq35G8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/buttons.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQlVUVE9OUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5idXR0b24gew0KICAgIGJhY2tncm91bmQ6ICNFREVERUQgI0U2RTZFNiB2ZXJ0aWNhbDsNCiAgICBjb2xvcjogIzIyMjIyMjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBwYWRkaW5nOiA1cHggOHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgc3BhY2luZzogNXB4IDVweDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoNCi5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQ6ICNGNUY1RjUgI0YxRjFGMSB2ZXJ0aWNhbDsNCiAgICBjb2xvcjogIzAwMDAwMDsNCn0NCg0KLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kOiAjRDJEMkQyICNDMkMyQzIgdmVydGljYWw7DQogICAgY29sb3I6ICMwMDAwMDA7DQogICAgYm9yZGVyLWNvbG9yOiAjN0Y3RjdGOw0KfQ0KDQouYnV0dG9uOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAycHggc29saWQgIzc3QzZGRjsNCn0NCg0KLmJ1dHRvbi5lbXBoYXNpemVkIHsNCiAgICBiYWNrZ3JvdW5kOiAjREFFNEVFICNENERFRTggdmVydGljYWw7DQogICAgYm9yZGVyLWNvbG9yOiAjNkNBMUQ3Ow0KfQ0KDQouYnV0dG9uLmVtcGhhc2l6ZWQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQ6ICNFMkVDRjYgI0RFRThGMiB2ZXJ0aWNhbDsNCiAgICBib3JkZXItY29sb3I6ICM2Q0ExRDc7DQp9DQoNCi5idXR0b24uZW1waGFzaXplZDpkb3duIHsNCiAgICBiYWNrZ3JvdW5kOiAjQzJDQ0Q2ICNCNEJFQzggdmVydGljYWw7DQogICAgYm9yZGVyLWNvbG9yOiAjNTY4Q0MxOw0KfQ0KDQouYnV0dG9uOmRpc2FibGVkIHsNCiAgICBiYWNrZ3JvdW5kOiAjRDRENEQ0ICNDQ0NDQ0MgdmVydGljYWw7DQogICAgY29sb3I6ICM5MDkwOTA7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KfQ0KDQouYnV0dG9uIC5sYWJlbCB7DQogICAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIEJVVFRPTiBCQVJTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmJ1dHRvbi1iYXIgew0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5idXR0b24tYmFyIC5idXR0b24gew0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyLWNvbG9yOiAjQUJBQkFCOw0KfQ0KDQouYnV0dG9uLWJhciAuYnV0dG9uOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNhN2M0ZTI7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQouaG9yaXpvbnRhbC1idXR0b24tYmFyIC5idXR0b24gew0KICAgIGJvcmRlci1sZWZ0LXNpemU6IDA7DQp9DQoNCi5ob3Jpem9udGFsLWJ1dHRvbi1iYXIgLmJ1dHRvbi5maXJzdCB7DQogICAgYm9yZGVyLWxlZnQtc2l6ZTogMTsNCn0NCg0KLnZlcnRpY2FsLWJ1dHRvbi1iYXIgLmJ1dHRvbiB7DQogICAgYm9yZGVyLXRvcC1zaXplOiAwOw0KfQ0KDQoudmVydGljYWwtYnV0dG9uLWJhciAuYnV0dG9uLmZpcnN0IHsNCiAgICBib3JkZXItdG9wLXNpemU6IDE7DQp9DQo"},{ name : "haxeui-core/styles/default/dialogs/exclamation-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAACbhQDBqAHk2jj68Jn89avSwBnp3W7l11+4ogbQux67pAXMswG/pwKmjwCchgDErAHJsAG1nQHMswG7owHCqQHHrgGwmQHLsgG+pQHk1ynm22PVzzXr33fUzEzr33jp22zPvy7LuxnSvzfGth7RvCzQuiXPuBLPuBHs3CXm2Sve1jHY0zkAAADz5XjS0D/77Yzs6YL27nh2dnZsbGzw32lgYGDTy0b06Ift4XDv3mnp22Hc1UzU0kUvLy8YGBjuZRp0AAAAKXRSTlMAyRH+/fnm29DBurKro52WkHt0ZVxFLyQdCfz29u/v5eXa2tDQxMSvr6tslocAAACYSURBVBjTdY9FEsJAFESHuLvibpOJC879b0UyFJAUlbfoX/1W/UEPhCQRHWFynNnu3o6m915L6Gwcs/qvOwKVZZTgfIU2C/M8nGufbm9ORVkW4dZ+d1+eXK6PZ1VNZR8La3W+RQhF0X1t4U3iKAiCJKljLDbrjAUJIUQI1iwNAFyePNYg1OSQd4HCHBrSFB9GAeqgg/r39wsyaBDiN04O2AAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/down_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWMMCAhgwABMc89cQROae+YKE4RCFmJgYGBC5sClAQxaDmYcnISCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCQkFSIChUT1ApDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmJhciB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI0FCQUJBQjsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7DQogICAgY2xpcDogdHJ1ZTsNCn0NCg0KLnRhYmJhciA+IC50YWJiYXItY29udGVudHMgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI0FCQUJBQjsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbiB7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KICAgIGJhY2tncm91bmQ6ICNFREVERUQgI0U2RTZFNiB2ZXJ0aWNhbDsNCiAgICBwYWRkaW5nOiA2cHggOHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCn0NCg0KLnRhYmJhci1idXR0b24uZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi50YWJiYXItYnV0dG9uOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kOiAjRjVGNUY1ICNGMUYxRjEgdmVydGljYWw7DQp9DQoNCi50YWJiYXItYnV0dG9uOmRvd24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQoNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogd2hpdGU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi50YWJiYXItc2Nyb2xsLWxlZnQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93LnBuZyI7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi50YWJiYXItc2Nyb2xsLXJpZ2h0IHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3cucG5nIjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgLmxhYmVsIHsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgLmljb24gew0KfQ0KDQoudGFiYmFyLWJ1dHRvbiAudGFiLWNsb3NlLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC90aW55LWNsb3NlLWJ1dHRvbi5wbmciOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBUQUJCQVIgKEJPVFRPTSkNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGFiYmFyOmJvdHRvbSB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLXRvcC13aWR0aDogMXB4Ow0KICAgIGJvcmRlci10b3AtY29sb3I6ICNBQkFCQUI7DQogICAgY2xpcDogdHJ1ZTsNCn0NCg0KLnRhYmJhcjpib3R0b20gLnRhYmJhci1jb250ZW50cyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogI0FCQUJBQjsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbjpib3R0b20gew0KICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCn0NCg0KLnRhYmJhci1idXR0b24uZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmJvdHRvbSB7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KDQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogd2hpdGU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGFidmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLnRhYnZpZXcgPiAudGFidmlldy10YWJzIHsNCiAgICBtYXJnaW4tdG9wOiAxcHg7DQp9DQoNCi50YWJ2aWV3OmJvdHRvbSA+IC50YWJ2aWV3LXRhYnMgew0KICAgIG1hcmdpbi10b3A6IDBweDsNCn0NCg0KLnRhYnZpZXcgPiAudGFidmlldy1jb250ZW50IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCn0NCg"},{ name : "haxeui-core/styles/dark/check.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCTskh/mOvAAAAS5JREFUKM+NkbtKA2EQhb/ZrLIGL2BnExDEIr2FguADBLMo/IWFCF7AwiewEkRQ7GwUkXRiY4LZGASLtbIQK4tgo7VWgmBMdrM7FokQxBinO2fmzAczwj8qn78cFzuaCmu1U7vbcLlcHqyH0TUqqR7HweoWqDXiPSAFBBLHd38SCgVvBtW1ppJt13UrHQme5yWxOAZE4SGsV3cBOhIaMTvAGNBIEC/PGRMA2OfF4oSFXBFLMQyqK8aYKO95k8RsAIiwn53N3n8vsiwYRRlGdMl2+g5zvu+IcgJYAo9vA/1b7WRRVbkolo4UVltWBTQNxKIy7bqZ2/aAJSIa1D/XBc6alqZbvYOfw0DzD8aY6PVlZBEotfynpNO7+dsxpF3kfN8Zev9Y0AQ385nM82+BL3sbaMn2+wKIAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/dark/tooltips.css", data : "LnRvb2x0aXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzJmMzA7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzE4MWExYjsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjA1LCA2LCAxLCAzMCwgMzUsIGZhbHNlKTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogNHB4IDVweDsNCiAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgIG1hcmdpbi10b3A6IDMwcHg7DQp9DQoNCi50b29sdGlwIC5sYWJlbCB7DQogICAgY29sb3I6ICNkNGQ0ZDQ7DQp9"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRFJPUERPV05TDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfZG93bl9hcnJvd3MucG5nIjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi5kcm9wZG93bi1wb3B1cCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmRyb3Bkb3duOm1vYmlsZSB7DQogICAgbW9kZTogbW9iaWxlOw0KfQ0KDQouZHJvcGRvd24tcG9wdXA6bW9iaWxlIHsNCiAgICB3aWR0aDogNzUlOw0KfQ0K"},{ name : "haxeui-core/styles/default/small-close-button.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAANCAMAAACq939wAAAAhFBMVEV4eHj///8AAAAAAAAAAAAbGxsAAAAAAADn5+cAAADv7+8gICAiIiIZGRnr6+sAAADj4+Pm5uYAAAB4eHiOjo4TExMKCgqJiYkfHx/////Jycn09PT////////o6OgAAAD///+QkJCRkZEFBQUAAAAiIiIAAABiYmJtbW0+Pj5OTk4AAAByRYNBAAAALHRSTlMBgGhkXmBbeHd1eHVrW3U2c3FwZmVkZGFOQDc1MBwcDQdralhYVUxLRkY7Ld49hcYAAACESURBVAjXFY1HDoNAEAQnbYLFYHIG5/T//3moU5dUUoOSiws2h4ONXEnMZDcVCpURm3XtXRtX4clkZ6z5B1KaE/oCk0hPcCRqmKSBLTi2WYHoU5IbNKx94tFH28OHOm1Sj1f+wtq0dQwUL8GsAKNhYhE2o57u0+shtn9POxws8zDMi44/AScHBY0KWggAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/en/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2F2ZQ0KZGlhbG9nLnllcz1ZZXMNCmRpYWxvZy5ubz1Obw0KZGlhbG9nLmNsb3NlPUNsb3NlDQpkaWFsb2cub2s9T0sNCmRpYWxvZy5jYW5jZWw9Q2FuY2VsDQpkaWFsb2cuYXBwbHk9QXBwbHkNCg"},{ name : "haxeui-core/styles/dark/main.css", data : "LmxhYmVsLCAuYnV0dG9uLCAudGV4dGZpZWxkLCAudGV4dGFyZWEgew0KICAgIGNvbG9yOiAjYjRiNGI0Ow0KfQ0KDQouZGVmYXVsdC1iYWNrZ3JvdW5kIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyZjMwOw0KfQ0KDQoubW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7DQogICAgb3BhY2l0eTogMC44NTsNCn0NCg"},{ name : "haxeui-core/styles/dark/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0xJREVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNsaWRlciB7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDhweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuYnV0dG9uIHsNCiAgICB3aWR0aDogMTBweDsNCiAgICBoZWlnaHQ6IDIwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KICAgIA0KLnZlcnRpY2FsLXNsaWRlciB7DQogICAgcGFkZGluZy10b3A6IDVweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHdpZHRoOiA4cHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAxMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQo"},{ name : "haxeui-core/styles/dark/left_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHAQMAAAAVq36TAAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABRJREFUCNdjEGAwYChg+ADEBgwCABA+AlHYFc5VAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/tooltips.css", data : "LnRvb2x0aXAgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZjg7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjA1LCA2LCAxLCAzMCwgMzUsIGZhbHNlKTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogNHB4IDVweDsNCiAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgIG1hcmdpbi10b3A6IDMwcHg7DQp9DQo"},{ name : "haxeui-core/styles/default/up_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAEAQMAAAB4CLc+AAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABBJREFUCNdjEGCwYKhh+AcABAIBw16BkcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/tiny-close-button.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAEZXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVdr0uMoDPyvU+wRECAQx8HYVO0N9vjbPGLH5LHfzGxIDJaFJLoluULHP39X+gsfa1jJS9SQQjD4+OSTzVioGZ8xs/H9+ixr9zc5nQ9g1jjMbtyGY+pnyOXaEP2Ub3c5xTLt6DT08DwNuubZYjH1dBpydsh53lOa+7J/Cn3+6iPaOKb13keAsQvsOUv2cOwMrtq8uPZjlzG3q3UBSsYlrKVfrUvvsaNzuYB3rhbsTJ5yd4eCTJgKYcFoylneY9cReo6IL8+3B2U7XbxiV3et9Rinyz4AqUDzUI+j9BUUN0Dp+raAEfETrGMfCUNxxALGdrC5YRTixBZoV/a8c+bKR58LF4To7WEjZmsLOGgyddEmWzoZvg2uNoKGnZyCiQLWHMT2jIW739T9FVZ43hmalmGMseNl0Dvh74zTUK0tdZmNnlghLttyGmE05toVWiCE68RUOr590FPemCdiHRiUDrPigNlsw8QmfOWW6zw76InxZEZpcNynAUAE34Jg2IEBE9gJBzbR2sgMHBX8ZERunbcbGGARuzNVcONQCdGqbb6xJ3LXtWKHGK0FRIgLLoIaFArI8l6QP9ErciiLE08iEiSKSpIcXPBBQggxtB6Vo4s+SgwxRo0pZnXqVTRoVNWkOdnk0MIkhRQpaUopZzjNMJ2xO0Mj581ubvObbGGLm25pywXpU3yREkosWlLJu93djvLfwx5p1z3t+eADqXT4Q45wxEOPdOSKXKuu+io11Fi1pppP1iard9Z4Ye47azxZa4z5rhcv1iCO8WGCWzuRxhkYs57BeGwMIKFt48woe28bc40zkyyKQixYY2nk7NwYA4P+YCuVT+4u5r7yRuJ/iTf7iTlq1P0fzFGjbjL3ytsb1vbc3yiuE9SqsGFqXEVjO9BlMr4Z7acvjJE22aSoFI+vaU2nL1tZTdkyk/nwwFxGAF83gnWTiHnMXi9dum/eugYqt4ekpp21LzNyacrez/TpQTOyjWVW8zjznNNDh0MXeGvovruNscVPmE5BTe7oy3QpPc00lPIDcPPq6+Yqablb8X7gQidAbQwo7RCUUxBLqn2JJF7wPmeKexhrWSG3vBBYwpPlfVg+M4TesYvCayv1i8Cc4IQhKCeVTO+hUH7JRa/5G7+0EjyT+nIui2WzD410j5eeTzBn+5KOiT+CfIJ94vcA3a0l93IU1iW4lhL0yLa5O5nvlfBxpqsSUrIrS2sBl5W1KyGoZF4y4lfnkUB0zyCXl2zgtaxeYxmh0J/HMkKhP49lhEI/9p1mwenqaSQ8XR3DnEnnhiDIf5Xxlf+V0uNM8vvRPBXtn0XTgqF7NI2HffH+sy5MX9rwvQuH6+UzYsRL8umgrWcHtzZqvxzjB22YvvXhLx3h6gBpaBDrd1DF2x+9LemHzQI9goeRku7P8O9o1tqnricLwW2pH1kh84muJ9oGBdsF1GyCJyz4a0E7eiL9C50ommlvGMFPAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCDsd2T5sgwAAALJJREFUGNNdi7FKw2AYRc/98j7O1oIuikM1ISk6CAVfwidShIJJ++dvQejS4uTs2wjmuhgonvGec9Wl/ATx1VSzd45YrzfXg3wSlj/E8NymzexIXlp+KYhP/Q1nllcED/rRt+U3y/dNWR40vtqUpqHIGDFQ1/XtHiDGoHBhIf4TAF3OE8sry3eySoJl1/cXAGr7/jSsPKDHeXWzBehSuhLxKquJsM5NLEYJ0FTVzsTC8uQXPKRNkQsV0ywAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/dialogs/information-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABJlBMVEUAAAB7e4CdnZ0REREzMzNUVFQ/Pz8lJSVRUVGmprLIyMg6Oj0LCwtQUFJqampycnILCws+Pj5CQkJVVVU6OjpFRUUmJiZVVVVRUVFISEhOTk4NDQ1UVFSqqqyfn6K/v76zs7IsWdUqVMj////a2utGaM4wVL8nTr3m5ubj4+NfgeFbfd9NcNXMzMwrVcvBwcIlSbMlSLAjRa1zlvTt7e1nievq6uowYuXW1uQxYOHg4N/c3NvQ0NtXedtQctijsNfW1tbPz9B1jNDNzc1LbM1eectBY8qVoshadciJlsYoUMKJlsBlfMA7W7xddLk3V7kmS7kfRrZEX7NOZK08V6wSM5Tu7u5ukO5sju3Y2NgzX9hSdNXOztRMbtHJydA+ZM8+YMMqUL/uhb8yAAAAIXRSTlMArqJRRz0YCQfc0pKHhnx4dG5sY2FcXFVNQj8dFdfX1NTah6qMAAAA7ElEQVQY0yXI02LEUBSF4R2ObRQnaeyMbVs13/8l2tP5rtb6ASsymUQiwxThystE/FVZrvojjPf/Z0m5NxyPhz2FzOKSJ5uTzlOp9NyZtMg8ABtuztWKzvN6RZu/hFnI3c3e1K7A80JX+5jd5yDVWquCMHVcx3W/10YK4oONNhVtY+TYtrix4hAzdvqPtB/195Ik7qwYJAfbL45b9pUlx3FbKwn0zUp8RaZSNhGSVrc0sKH3o9lA5UfU4I6fIRaAJtrnA6rV0OHcJmgA8KSJ+uJ0uZwWdSLtAVyogO/hjy9A4Y8VqGgwGKUKeP8C2jElNUboO20AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/haxeui.png", data : "iVBORw0KGgoAAAANSUhEUgAAAIgAAACICAMAAAALZFNgAAAC7lBMVEUAAACxubtjcotcaIKYmKs9RWc9Sl9jcYuutME+SGKstMPHyNhhcIrBxdNCT2esssBgbIiGiaLAwM56hZ5jb4zGydqyt8V7hJs6SF9hbYlfaYTGxtatssGmrb09SWB/iJ5/h56/wdFha4g+TWRhbIe0uMdhbYhue5dibonDxNXGx9lfbIU+TGOwtcM/TWXM1+h8hZy5vMumq7vBw9RvfJezuMfGyNaAiJ+Bi6NhbYhvfJfGx9g8S2Cpr71DUGh9h501Xotli7iiqbp8hZ2ytsV2gZg+TGNJdq55g5p/h569v89vfJZsdpLK1OWxtsRtepU8S2M7SmE9TGQ8SmHKyt26vs1+iJ5jb4tRXXU4V3s9VnZhbIfExddhbIdIVW3DxNWjqbtwfJWkqrtwe5ZgbIWkqbmmq7yCi6Ccss3N2OmrscBOW3M9TGO4u8uytsWus8JbZ4FKV298hZtWY3uqxOB7hZujqLlQXXW3vMtSXnU8Wn49S2KsscBseJTHyNnIyNifpbZve5VkibREUmp/iqGtssHHyNlGU2pkd5d/iqCkqrpRX3dib4mswdrEx9ebo7PFxtc+XYNufZmQmK2uv9S4vc+1uclUYXk6SWGxtsSutcNteZRebIW4u8tDd7JYe6k3VXmAjqWKk6iAiaBWY3uOl6pAdrSswdqtwdubsMuIlKtjboeQmKydtM+ZrclRd6dJYYGnr8B8h51UYnlJV3CmuNCPl6u+zeHM1uZjb4dga4Q+aZjG1OeWsM9mjbtTf7ONqMlNerBvkbtNaY9Yc5mUna+nv9qlu9Y4UHCLpMKKpMNomc08drVRiMR+p9OUttszZp2pxOLP3u9nmMxtnM5BerlckMlyoNBSh8Gbut3G2OyRtNqGrNbO3e5wns99ptJQhsCYuNxUicJ9ptOStdujwOBYjcdKgbxnl8tgksg6c7A1aJ+4z+edvN5kk8c2a6NEebM8cKiwyeRLgb03b6qbu944bqhMgryyyuWdu96j3pigAAAAy3RSTlMAAwQHBQUNCQcJDw8NBRULEAoJEBgLGRgfFCMYJBcRMCNrMSxYMSkkQTEjHFBEPfFEIyBWMisUFA5rQz8ZFGU+8vEsHWtYJPFsTkQsIOJWVUg4MSoeHVY3KsGjY19RUE46bFVNR0MyKvHwa2VZV049PDs3Nf5jTUs/HcBhVj02KGFg625rYC0fl3hpQy7vhHdGuHof1IliXkE1emZMN/7TvJdlXlU6/vLw7JVvSPDp1ayVi3Fb0VTx24V29/T09PTy7unBjYn06pPnxN39F5cAAAyOSURBVHjarNl5bIthHAdw64oqdZQ56xpzz2zUXWSOOOY29zGjc2/DzFBMGHHf9xFn3OK+ibhFHBUhrSORGH+0oo2I+M/v97zv26ft8x71vv3+tWTp+sn393vfvutTgiZGPiVUJQaj0+ligqPDiP1NqtCbTCZ9aEwQvSoLvCO+qV40aMHfizhMBoPBbDZXCI8ZAr8CzX9Z4F2IIbaSWEqXjoWQYsIYegMSjMEpC+F+ijMix0ApymUQBb5le0xlJuXKlUMMUoIr1BsMqLDZamOqhqW2zWYzGgEDvVCKAiMWqgBBO0g1kdRohxikUAk6KlUw2kCQArGEJBmSnp4OmrZljXEVzCZCUW6DKIDQvXv3eiFpjElLS2vevEqNithKSUGCY4E2UGFJTU3NwiSExGq1WiyAqW0jtSBFnmEABijQMGXKlLrBaUPSr1+/Ro3TOAp2wr/SUAnqQEVWRkaOHZNIUwDJ2b8bNMnQi60sS2HbIAxQgGHOnK6QVjQdMYsXLx4Rv65RzeYggenE0ELAAQy7PT8/MzPTkenADBCSnZ0Nnv0JVpgSQ5FkoAIEffr0GU7SU8hAyKRJk5uMiOckMBwdeTXvyLADorBwDWQ6SQ8hO3YUzRqQ3bdg/26GIs1ABRiOHJk3r/eKFb0DmQjZu3fZsoHjgIISHE4MvtxkNtqqguPKk8ePj68XcpzkBMn6E+u37dkBlsSc3WRCdFfkGKCYd+rc1KlnSaaG5c6de/cfxjdKqwKVEIiOFJKaZV//6tWXv8XFTvHkbdvTo4inWAiFXEEYVIgx5q04dTLPKZ4vL99+e/HiQW48VIKz4SdT1WLNyL/2iuTLj2IlCl5D9AoiChFGb2BIIzDfN0+e22hB+YowG4DAqsJksuyZt38Dg8EoUAwGPSY2NpTRU4rx5SMghBzYvC93ZM3yFctwEFiRFGtGoiPJiQaK+V0sSpkeoHD3lUpcKiOjcT/KUEBgfm4+unZuzeYAgSWBXYUVsebkFyV5qYI2I0pxcJSUFLj5G9tD8B6axjDkEBgPQkYuqFEqGJJdlOSmAhkMpWSlpqakbK1ta4d3cmC0mdO14yRgHApjuAiCzffXm3fOpxC9GXY1IccxPenNb0bBjEmgrCly5NszgGLZunUr3EORsRgYyyYiQxmBOfB64c75s0cuKF+qDFw25KJJTkhECF0SpWaQUpgJFLCQT5M2czpOIoxzSggaPwdZFYCURcgAgLBLwmIoZSNSztiPHTvWtSvMZGDPvUGM34hQiOf1whkMpGBAj6Q3zJLIYvKuAKXw6tUz+GnScxky8njEZzkEXRGAjJ/dIACJI40ghFkSeQxSNh4+fBg/TibybbgUEXRFxCGzAMIsiQIGKY9WY7YAg0EoxM9DqlNIreSmfRHCLokyJu/KqYsXD91jEMrxEEhLBlIfIMySRIJxPbvLLGZEKwKQLmGQZjzkjUuF5MPndy9UxAeQUcEQUzDEqcbx/LkaiV8C0ppAvKocqiQeAmkhAXGrcaiQ4IrIQCAuFQ5VEp80ZBpCnCocqiR+CUgnHuJV4VAl8ShA3CocKiS4IghZFAQxUAjGpcKhQuITgZhDIE4VDhUSvwAZjJBYMppQiFeFQ4XEQyAHFw0aPBQhOh4ybGWnCWM5iDtCx3sGwUiUVoSFtBUgGFekDi0SHw+ZCZDOdYTRxLUdtnRJAOKMcC6aJP4AZEgvgJQsSf7ljGubvnTJprHX30S6JF/BoU3i4SBPW+xCCFw0CBFuJBs+RbgkX2EuGiR0RboJVy9C6LYKlbg0OahEeUVG44ogRAcQfklwNnwlTmWHVomfK6TLTDIZoRFcEu5O0p8uiez1olni4Qohk4EVoV9dcbPhK3ErOTRLvnOFLBcmUzIGHEGzESpxyTu0S3xCIcGTCVw3tBKnvEO7xB9aCDpEK/HKO7RLPKSQLnwhsRTCPwoIlbhlHdolf8ILoRDyeUMrcck5tEt8oYWgQ6ISp5xDu8QfVAh/7UpU4pVzaJd4uEJa0kLCK1lZMGHHdqjELePQLvklFNKAFsJU0ncWqcQl7dAu8UkXItxek4VKnNIO7RI/FnJZZENoJenW/fA9CVTiZT/noifxQCEzxosWQitJKMjGStyMI3qSP6SQ+bNpIUwlRlqJi3FETeIjhaylhYhVUhUrKYJKnIxDs4SuSLdLWMgqelMVrwS+ce1Pl4RxaJZ45AuhleRgJW7GES3JHyiEft9MIWwluxMdUImLOqIpwRU5PwPOJMhzCJ6gSVZiycrJXHPhk5M6oivxYyG5MoUgRE9OTDLyCzf291JHdCWe8x3IIQ19MGODD0jkVA0qcVNHVCW/bt0cMy43npyfUQi7JXDgiZDCjddcxBF1yYHzN8fsyxXOaCQhenLyirO5UIyO6Etu3TjdkBxtliPP7tKzESCP7oAj+vn2gIfAYa8uMsg/Vu1gtYEQisLwpg/WR+8DyGEWs6ggpKU7N4JI18VFMOkfxzAn5wXyMeMYvfd+7P7PMl+ALF/N9w8lviPg1SwXaxIlviP8PrVY324+X4kS3xHyOz7fRzvr2NCqeiDxHD3b4YY2TtC9Bdy3+ChIfEdPwRZ//KeXBInv6Gk3f3p8JDwGSJD4jp6MY8DhwagKEtdxzTgp9pLV7IFcT89xQPDteI5QcFQ8OjwnQeI5RhoOz0fXCQkSzzGSeZ2YX7CqXij5DPfZcMGaXzmj7nPZbcdIwZVzfglPgsR9LyMNl/B5WUJyJcOBZJQlpoWaKkMCB7LhkcxKV1GGBA6koHQ1K+YlGRI4kIZi3qy8KRkSOJCM8uak4FtlSPjdMhsLviyBY4lgZ7MdoaAEzgeCJQKJ7wiNTYGHbRLJk9DBRcI2CRtHVZaEDmZD4witNCwRZrcdoaCV9qi5mGRK6OAiYXOR7VbJktDBZLZb2YCuMiV0MBsa0GzJRzFcsZ4jFLTkOaSQZEjgmKRhSIFjG5IhgWOSjLENDLJUGRI4pgEEoz1RT+ayG45Q/o32cNgp6YQEjmXaFTId/5JOSOBYJq8gVSckdKyzLUYEo05I6FinLIYmk05K/kq5Y5A2ojAO4FAjdugQaUAiFCWEJJDBUoRUoYgN0hYD2ZohZKgX6HpYQqcOEQcLtyQZDRUsdakgONilKIpQKEEECe0gUlyqKWqxJbVbv+9L7l5evjtfLv0LBjKcv7x3qHDv/x1X3KV+LYRuEfcS7lCndj3kcq8rCXeoI0HYUeOzva4k3KHOBUIcD18f7nUjAYf7/CaI03H0LhhH5ztbf6ruITVxHJ0f0L90izj99nNpfX19YfL8+JdbzL44oM8qC2fuENUKMLCwUCwuzJ0cnLrDXIjKAitxHHb4l/foHBCVypul1/PzuVwuD1WS90g5cIOpNyF2tZbOEF/pRxFj+e1TKLVoWjKYTzconWNqHGI2jq5UiC+EsBiouDsxMQsV0Ug5ExSUzjD77UUf7GAR5EyNkBigmB0amoYYqVQkC5QxQUHM92sxF1L1iZ6x0pOAEedbRCCq8FVZAUauwXg+PJyAhENGgFFUmLpUBjPrcTNQj+sEgYziY4sRjw8MxPw+XzQxGGIUxTbVWD2u8fhs5MoZUcUvel1ZA8aUBozp8HB8IEY9c6/X7/cxihKzX2g8urEgDxAy8/GvMwJiMp7lp7TxidEm4/6t/j4IWXxRW4rzNv2QKpSiVHpovx1iQYiR1MZfASNMjP6+Hg/8Cw4jAMCioHBMvfBSlEqpZkt788FEHEsIfIVIjFA47ovdxrK9B8YUUFQUkRMLUyvAzpg1W1E8/iQQEIGhb8hYbGH4sfTvAYBZPFZROAauXpCKx7g3uCSfd7a2trcf2WetmE+2MdqmIHBKORhM785NOmRzc257F54A++gWscrppXsP362ubmwsQ+YxZpEcm+SLeVLQvcEYEuWGoBgpHX7dgiWdHmNJp4PBTFZ/IcrptCT9TQlQVp9siG59shlNQ0UKGDRzgDGcKAGwZMvlTAY8UuCdcjaiB9BBD4BvmAMMYHNKJSipUkG0ZdCANW0AFAqG3QahJaXrER5dZwMM6C6BNYndKYn5C6OtMWD+QogUjKGgRBOIMYxAewwjFBocFCMdxJALrJZDqbtUMidRiCQgUVLgTAqPYCgpYCGMXRqXxM/Va13PHEsBFsBY8VnxI4IWQ6yGgiIsftDw0CXF2A9pEApaANMaL4aGlsBa9OFmSgwVBS0YLwsi2AezKJ6bPTi0xS44xgXibjQMWVBjEz4aRkjMwTY9UgjABtt0uiyYXhLJobclBrPY5b/HB7Hw8UH/AM3ZIm9FzQVkAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/dark/up_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMAADK0A4MJuH53gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/down_arrow_square.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHAQMAAAD+nMWQAAAABlBMVEUAAABQUFAYC5vfAAAAAXRSTlMAQObYZgAAABNJREFUCNdjAIF/DDUMFgwCDAwADagBwy8LRJkAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUFJPR1JFU1MNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgew0KICAgIDAlIHsNCiAgICAgICAgc3RhcnQ6IDA7DQogICAgICAgIGVuZDogMjU7DQogICAgfQ0KICAgIDUwJSB7DQogICAgICAgIHN0YXJ0OiA3NTsNCiAgICAgICAgZW5kOiAxMDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBzdGFydDogMDsNCiAgICAgICAgZW5kOiAyNTsNCiAgICB9DQp9DQoNCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsNCiAgICBhbmltYXRpb246IGluZGV0ZXJtaW5hdGUgMXMgZWFzZSAwcyBpbmZpbml0ZTsNCn0NCg0KLnByb2dyZXNzLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogIzI1MjcyOCAjMjUyNzI4IHZlcnRpY2FsOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM0MTU5ODIgIzJmMzc0NiB2ZXJ0aWNhbDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogIzI1MjcyOCAjMjUyNzI4IGhvcml6b250YWw7DQogICAgaW5pdGlhbC13aWR0aDogMjBweDsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM0MTU5ODIgIzJmMzc0NiBob3Jpem9udGFsOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQo"},{ name : "haxeui-core/styles/dark/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCn0NCg0KLnByb3BlcnR5LWdyaWQgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIHBhZGRpbmc6IDA7DQogICAgd2lkdGg6IDEwMCU7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0QzRjQxOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItY29sb3I6ICMxODFhMWI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tc2l6ZTogMXB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQzNDY0NzsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmV4cGFuZGVkIC5wcm9wZXJ0eS1ncm91cC1oZWFkZXItaWNvbiB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9kb3duX2Fycm93X3NxdWFyZS5wbmciOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmNvbGxhcHNlZCAucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvcmlnaHRfYXJyb3dfc3F1YXJlLnBuZyI7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXItbGFiZWwgew0KfQ0KDQoucHJvcGVydHktZ3JvdXAtY29udGVudHMgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHNwYWNpbmc6IDE7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzE4MWExYjsNCiAgICBwYWRkaW5nLWJvdHRvbTogMXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1sYWJlbC1jb250YWluZXIgew0KICAgIHdpZHRoOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWVkaXRvci1jb250YWluZXIgew0KICAgIHdpZHRoOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCn0gICAgICAgIA0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWl0ZW0tZWRpdG9yIHsNCiAgICB3aWR0aDogMTAwJTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC50ZXh0ZmllbGQgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIC5jaGVja2JveCB7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIHsNCiAgICBwYWRkaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLmRyb3Bkb3duIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/dark/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUkFOR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucmFuZ2Ugew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KfQ0KDQoucmFuZ2UtdmFsdWUgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQp9DQoNCi5ob3Jpem9udGFsLXJhbmdlIHsNCiAgICBiYWNrZ3JvdW5kOiAjMjUyNzI4ICMyNTI3MjggdmVydGljYWw7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQp9ICAgIA0KDQouaG9yaXpvbnRhbC1yYW5nZSAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM0MTU5ODIgIzJmMzc0NiB2ZXJ0aWNhbDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSB7DQogICAgYmFja2dyb3VuZDogIzI1MjcyOCAjMjUyNzI4IGhvcml6b250YWw7DQogICAgaW5pdGlhbC13aWR0aDogMjBweDsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1yYW5nZSAucmFuZ2UtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM0MTU5ODIgIzJmMzc0NiBob3Jpem9udGFsOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0K"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogR0VORVJBTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jb21wb25lbnQgew0KfQ0KDQouY3VzdG9tLWNvbXBvbmVudCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQoubW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgb3BhY2l0eTogMC43NTsNCn0NCg0KLm1vZGFsLWNvbXBvbmVudCB7DQogICAgZmlsdGVyOiBibHVyKDEpOw0KfQ0KDQoucG9wdXAgew0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMiwgNDUsICMwMDAwMDAsIDAuMTUsIDYsIDEsIDMwLCAzNSwgZmFsc2UpOw0KfQ0KDQpAa2V5ZnJhbWVzIGFuaW1hdGlvbkZhZGVJbiB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQoNCi5mYWRlLWluIHsNCiAgICBhbmltYXRpb246IGFuaW1hdGlvbkZhZGVJbiAwLjFzIGxpbmVhciAwcyAxOw0KfQ0KDQouZmFkZS1vdXQgew0KICAgIGFuaW1hdGlvbjogYW5pbWF0aW9uRmFkZUluIDAuMXMgbGluZWFyIDBzIDEgcmV2ZXJzZTsNCn0NCg0KLmRlZmF1bHQtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENPTlRBSU5FUlMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouYm94LCAudmJveCwgLmhib3gsIC5hYnNvbHV0ZSwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHNwYWNpbmc6IDVweCA1cHg7DQp9DQoNCi5ib3gsIC52Ym94LCAuaGJveCwgLmNvbnRpbnVvdXNoYm94LCAuaGdyaWQsIC52Z3JpZCwgLmdyaWQgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTEFCRUwNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGFiZWwgew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBjb250ZW50LXR5cGU6IGF1dG87DQogICAgY29sb3I6IGJsYWNrOw0KfQ0KICAgIA0KLmxhYmVsOmRpc2FibGVkIHsNCiAgICBjb2xvcjogIzkwOTA5MDsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSU1BR0UNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouaW1hZ2Ugew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCn0NCg0KLmltYWdlOmRpc2FibGVkIHsNCiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRFJBRyAmIERST1ANCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouZHJhZ2dhYmxlIHsNCiAgICBjdXJzb3I6IG1vdmU7DQp9DQoNCi5kcmFnZ2luZyB7DQp9"},{ name : "haxeui-core/styles/default/right_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAL0lEQVQImWMMCAiYe+YKAwMDAwMDEwMDQ7KJDoID50M5ED6CM/fMFSY4C6oMbhoAEcwMOy/jUHEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/right_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHAQMAAAAVq36TAAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABVJREFUCNdjaGA4wPCA4QMQH2BoAAAkXgUx2KhS+wAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/dark/accordion.css", data : "LmFjY29yZGlvbiB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI2FiYWJhYjsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Ow0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi5hY2NvcmRpb24tYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogMHB4IHNvbGlkICNhYmFiYWI7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfc3F1YXJlLnBuZyI7DQogICAgaWNvbi1wb3NpdGlvbjogbGVmdDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWNvbG9yOiAjYWJhYmFiOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCn0NCg0KLmFjY29yZGlvbi1idXR0b246ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3dfc3F1YXJlLnBuZyI7DQp9DQoNCi5hY2NvcmRpb24tcGFnZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgY2xpcDogdHJ1ZTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBib3JkZXItY29sb3I6ICNhYmFiYWI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIG9wYWNpdHk6IDE7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQouYWNjb3JkaW9uLXBhZ2U6ZXhwYW5kZWQgew0KICAgIGFuaW1hdGlvbjogYWNjb3JkaW9uQW5pbWF0ZUV4cGFuZCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLmFjY29yZGlvbi1wYWdlOmNvbGxhcHNlZCB7DQogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlQ29sbHBhc2UgMC4zcyBlYXNlIDBzIDE7DQp9DQoNCkBrZXlmcmFtZXMgYWNjb3JkaW9uQW5pbWF0ZUV4cGFuZCB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgICAgICBoZWlnaHQ6IDAlOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgIH0NCn0NCg0KQGtleWZyYW1lcyBhY2NvcmRpb25BbmltYXRlQ29sbHBhc2Ugew0KICAgIDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICAgICAgaGVpZ2h0OiAwJTsNCiAgICB9DQp9DQoNCi5hY2NvcmRpb24tcGFnZSAuc2Nyb2xsdmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHBhZGRpbmctdG9wOiAwOw0KICAgIHBhZGRpbmctcmlnaHQ6IDA7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KICAgIHBhZGRpbmctYm90dG9tOiAwOw0KfQ0K"},{ name : "haxeui-core/styles/dark/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChERUZBVUxUKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zd2l0Y2ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsNCn0NCg0KLnN3aXRjaC1sYWJlbCB7DQogICAgY29sb3I6IGJsYWNrOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YiB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAxNHB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzE4MWExYjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4yLCAyLCAyLCAxLCAzLCB0cnVlKTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gew0KICAgIHdpZHRoOiAyMHB4Ow0KICAgIGhlaWdodDogMjBweDsNCiAgICBib3JkZXItcmFkaXVzOiA1MHB4Ow0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICMwMDAwMDAsIDAuMiwgMCwgMCwgMCwgMywgZmFsc2UpOw0KfQ0KDQpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZCB7DQogICAgMCUgew0KICAgICAgICBwb3M6IDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBwb3M6IDEwMDsNCiAgICB9DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDE7DQp9DQogDQouc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQoNCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZCB7DQogICAgMCUgew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTk4MjsNCiAgICB9DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOnVuc2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQo"},{ name : "styles/native/main.css", data : "LmJ1dHRvbiB7Cn0KCi50YWJiYXItYnV0dG9uLCAubWVudWJhci1idXR0b24sIC50YWJiYXIgLmJ1dHRvbiB7CiAgICBuYXRpdmU6IGZhbHNlOwp9Cgouc3dpdGNoIC5idXR0b24gewogICAgbmF0aXZlOiBmYWxzZTsKfQoKLnRhYmJhci1idXR0b24gewogICAgYm9yZGVyLXJhZGl1czogMHB4OwogICAgYmFja2dyb3VuZDogI0VERURFRCAjRTZFNkU2OwogICAgcGFkZGluZzogNnB4OwogICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7Cn0KCi50YWJiYXItYnV0dG9uOmRvd24gewp9CgoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZCwgLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6aG92ZXIsIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmRvd24gewogICAgYm9yZGVyLXJhZGl1czogMHB4OwoKICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiB3aGl0ZTsKICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwp9CgoudGFibGV2aWV3IC5oZWFkZXIgewogICAgbWFyZ2luLXRvcDogMHB4OwogICAgbWFyZ2luLWxlZnQ6IDBweDsKfQ"},{ name : "haxeui-core/styles/dark/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEVYVCBGSUVMRA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0ZmllbGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQogICAgY29sb3I6ICNiNGI0YjQ7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzE4MWExYjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogNXB4IDVweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgaWNvbi1wb3NpdGlvbjogcmlnaHQ7DQp9DQoNCi50ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDE1OTgyOw0KfQ0KDQoudGV4dGZpZWxkOmVtcHR5IHsNCiAgICBjb2xvcjogIzQ0NDQ0NDsNCn0NCg0KLnRleHRmaWVsZDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICM5MDkwOTA7DQogICAgYmFja2dyb3VuZDogI0Q0RDRENCAjQ0NDQ0NDIHZlcnRpY2FsOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBURVhUIEFSRUENCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGV4dGFyZWEgew0KICAgIGNvbG9yOiAjYjRiNGI0Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDEwMHB4Ow0KfQ0KDQoudGV4dGFyZWE6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDE1OTgyOw0KfQ0KDQoudGV4dGFyZWE6ZW1wdHkgew0KICAgIGNvbG9yOiAjNDQ0NDQ0Ow0KfQ0K"},{ name : "haxeui-core/styles/dark/down_arrow_square.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBgYt2zZgkWtZUYBmpBlRgEThEIWQpgL4cClGbG6AQAStwro4kB3hAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/dialogs/question.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAC/VBMVEUAAABQUFBSUlIoKCi+vr7a2urJycm7u8jV1dUHBwcbGxx4eHg+Pj5UVFReXl5AQEBLS0tQUFBOTk5QUFAhISFRUVEiIiLi4uPZ2di8vL2fn5+Xl5fOztnc3NzOztrPz9/g4ODExNLa2tq5ub+NjZicnJy5ublxcXl/f4JubnRPT1Vzc3dHR0toaGp7e3uKiooHBwc8PDxBQUE9PT1DQ0NYWFhVVVUiIiIHBwcaGhpVVVUrKysNDQ05OTkzMzNLS0sUFBRUVFQvLy8ICAg3NzcQEBDKytPHx9HU1NPJycnExMTOzs7FxcS2tr3Pz8/IyMe4uLmtra/CwsG0tLSQkJKpqamTk5OTk5NXV1pWVln///81YdozXdM7aekwWMw4ZeHc3NxGaM49be9Ja9FEZswtVMVAcPXT09IrUL9Cc/rW1tZIas4oTbgsT7cmSbPY2eZafN5TddzZ2dlOcNfCx9ZBZMpBYsfCwsKAkMI1V742V7ooTLQ+b/Jvku7g4O1sj+3c3Ophg+JbfeA1Yt1Rc9c0X9XQ0NAzXM/Ozs0xWMjExMXCwsUxVsIvVMAjRq57nfd2mPXu7u7k5O5gguU5Z+VegOBXed/X19dNb9RLbdLLy9BPb82Wo8ySn8mzuMiFlcc4W8RZc8EsUcAsUbwxU7r7/P6Epv3m6vfg5fZ0l/Lr6+vo6Ohgg+iqueantuPX1+HT1d/Cx9/e3t7Axd5Aat7OztaUpNNmgtK3vNCxuNCcqdBshdBMbdB2jM/IyM5WdM6Nns02XMoqVMo8YMlKashuhMc1WsYvVsZgeMBmfL+/v75FY74vU70hSr1SbLwoTbpBX7kwUrY0VLVWbLMWOZ8fPZgKK47t8fp9n/na4PPK0/BoiuxmiOlmiOc/a+ObreGJn+DJz96crN7S0txaedk+Z9i9w9W8wdWdq9Ree9OlsNF8ktBBZ9CZpsy4vcukrsovVsnGxsiOnMYtVcZsgsU6XsWus8KGlMB7jMBsgLw5WLZCW6hCW6clRaYkRaZYIOnQAAAAWnRSTlMAB0QJ/v7+5d6KhYRyZ2VgSi4lDAwBAf7276Sa+fb29PDs5ubNwby4rqqpp5qZko13dXBtamlhXVxXVlJQTEU+PDs2MioQ9fX08fHn5+Pg4N/f3t7Cv6aakpIMnnIpAAADAUlEQVQ4y2IgATAKMVmZ8fKaWTEJMWKRFnbk01fjUBAXV+BQ0+dzFEaTFhXkk1LalAAFm5Sk+ARFUUxn4uZIKCrZtnt/dvb+3dtKihI4uJkYkeQFpGWnl+zd01Tbv2xZf23Tnr0l0yWkBeAqRJmkZdN3zW68MaF+8rTCptsT+qfO3pUuEc4Es0WQW6LtQPbKlWsKH9y6vnTF2idrauuzD6R7cAtC3Q+QqV/HnOwJd5qm3Y8CgxUt0ybXJ77t8DeF+MVeqm3ekdrJhYWFL5dCVKwrbiloPPKuI8we7EJe764vBXeLgWDmurXbty+PirqZMmNmQctRNh9ekDuF9Dq+ldXPSAaBlMTk5EdRUcvLgOyCsnlsekJABQKh5RUzpiZCQOmCJTunZ73Py11SmVg6v1xVAKiAP+jUwoKZKUBQWpnb1/e9LT3rZHUuUEXZifJgfqACE0+W042JIOnqvLy8n0D5nUD5xWcqy06XS5oAFRixsVQ1pqQsOJ8DBL9mpWeVVJ1fvPhMb8/hqi4WI6ACgHiACqaW9mSAwY/0rKJzixYt6u3tASvgASow9jp1oaUzFQLmZhU9y0hN/Xz8eGfnwQtdksYgRwaUn3vTHgcGHz4VJbxKhbDbjy3sDgQ50la1u2LB0xgIyMnLy4EyW3vnd4fYAhW46H6cd3FLNAS0HvvaDmNe3NGt6wJUwMwjue/EwXvxINB8VHz1i5h4MOg8OUuZhxkUGXYas3Zc2hILAu0bVq+aOBvMbL70fJ+GHTg2RQyVt86tjk0CguiHqyZOzAaxplTP2eprKAJJEIA5Rbg9ruibkpaWVrMwf9LrWCBjSt/8De6RTtAUJWatLbN+7r9DNZmZadGtQLLm0N8562W0rcVgiZLZXFMuf/PlK2ebkzIzk5rPXrm8MV9O0xzoQrgKSx32/IbNFX+uXrt29XfFxoZ8dh1LiDzMFgcudUXWhrq6SZPq6hpYFdW5HMTQ8parDZeWCrs8K6s8u4oWl40rAyYQcbYw4AQCAwtnERLyPAC79kQQQ6yMVwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVUJBUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51YmFyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI0FCQUJBQjsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDIsIDQ1LCAjMDAwMDAwLCAwLjE1LCA2LCAxLCAzMCwgMzUsIGZhbHNlKTsNCn0NCg0KLm1lbnViYXItYnV0dG9uIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBjb2xvcjogIzY2NjY2NjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWJhci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0M7DQogICAgY29sb3I6ICM0NDQ0NDQ7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICBjb2xvcjogYmxhY2s7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwcHg7DQogICAgYm9yZGVyLWJvdHRvbS1zaXplOiAwcHg7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgY29sb3I6ICM2NjY2NjY7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDOw0KICAgIGNvbG9yOiAjNDQ0NDQ0Ow0KfQ0KDQoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW46ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgY29sb3I6IGJsYWNrOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbi1hY3RpdmUgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNFRUVFRUU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGNvbG9yOiAjNjY2NjY2Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbi1hY3RpdmU6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIGNvbG9yOiBibGFjazsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KfQ0KDQoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW4tYWN0aXZlOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0M7DQogICAgY29sb3I6ICM0NDQ0NDQ7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNRU5VDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm1lbnUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMiwgNDUsICMwMDAwMDAsIDAuMTUsIDYsIDEsIDMwLCAzNSwgZmFsc2UpOw0KICAgIHNwYWNpbmc6IDA7DQogICAgd2lkdGg6IDIwMHB4Ow0KfQ0KDQoubWVudS5leHBhbmRlZCB7DQogICAgYm9yZGVyLXRvcC13aWR0aDogMHB4Ow0KICAgIGJvcmRlci10b3Atc2l6ZTogMHB4Ow0KfQ0KDQoubWVudS1maWxsZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQkFCQUI7DQogICAgaGVpZ2h0OiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE1FTlVJVEVNUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51aXRlbSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLm1lbnVpdGVtLWxhYmVsLCAubWVudWl0ZW0tY2hlY2tib3gsIC5tZW51aXRlbS1vcHRpb25ib3gsIC5tZW51aXRlbS1zaG9ydGN1dC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsNCiAgICB0ZXh0LWFsaWduOiByaWdodDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Ow0KfQ0KDQoubWVudWl0ZW0taWNvbiB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLm1lbnVpdGVtOmhvdmVyLCAubWVudWl0ZW06c2VsZWN0ZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNkOWU1ZjI7DQp9DQoNCi5tZW51aXRlbSAubGFiZWw6aG92ZXIsIC5tZW51aXRlbSAubGFiZWw6c2VsZWN0ZWQgew0KICAgIGNvbG9yOiAjMjIyMjIyOw0KfQ0KDQoubWVudWl0ZW0tZXhwYW5kYWJsZSB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCn0NCg0KLm1lbnVzZXBhcmF0b3Igew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQkFCQUI7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogImNlbnRlciI7DQp9DQo"},{ name : "haxeui-core/styles/dark/left_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMBwfMYEJjiLgYGBCc5iYGBg3LJlCwMMMFlmFCA4DAwMcD7UAAgfAK7lDFY1UPqoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/check.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QITChsNaCG5cQAAAS5JREFUKM+NkDFLw1AUhb/3DG0Q6pBOdSgI4tBRsaCTP0EcHeSBEpAQkt2lggiKUGg6WMRVhGziILg4CRUnh+KibiVLl06lmPdcglRsrXe5nMP9uJwj+Md4nrckpVwvFotX1rRj3/fnhBD3QLnX6yGnAVLKU6AMDIGnP4EwDDeMMW4mj6Io6kwEXNedTdP0AhDAi+M4JwATM9i2fQwsAp9a691arTYEsIIgWDXG3Akhbrrd7l4cx2kYhmtaaz9jz5rN5vN3JmPMAuAYY1SpVDpXStla60tAAq/9fv9w9PNMu93uVKvVeSHECrCcz+e3gAqggc1Wq/XxozXAJEmyD1xnXiXbUaPRePxVM0Acx+lgMNgBbjP/LZfLHYwrQ4wKpZRdKBS2Lct6qNfr7+OAL7OwYq6nyWzXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/dark/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmYzMDsNCn0NCg0KLnNjcm9sbCAuYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyZjMwOw0KICAgIHBhZGRpbmc6IDA7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouc2Nyb2xsIC5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM0NTQ4NGE7DQp9DQoNCi5zY3JvbGwgLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU0ODRhOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbCAuZGVpbmMgew0KICAgIGhlaWdodDogMTdweDsNCiAgICB3aWR0aDogMTdweDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc2Nyb2xsIGRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQoNCi5zY3JvbGwgZGVpbmM6ZG93biB7DQp9DQoNCi5zY3JvbGwgLmluYyB7DQogICAgaGVpZ2h0OiAxN3B4Ow0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5zY3JvbGwgLmluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0KDQouc2Nyb2xsIC5pbmM6ZG93biB7DQp9DQoNCi5zY3JvbGwgLnRodW1iIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2Q0MDQyOw0KfQ0KDQouc2Nyb2xsIC50aHVtYjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDg0YTsNCn0NCg0KLnNjcm9sbCAudGh1bWI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDg0YTsNCn0NCg0KLnNjcm9sbCAudGh1bWI6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEREREREQ7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFZFUlRJQ0FMIFNDUk9MTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvdXBfYXJyb3cucG5nIjsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbCAuZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL3VwX2Fycm93X3doaXRlLnBuZyI7DQp9DQoNCi52ZXJ0aWNhbC1zY3JvbGwgLmluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL2Rvd25fYXJyb3cucG5nIjsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbCAuaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9kb3duX2Fycm93X3doaXRlLnBuZyI7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIEhPUklaT05UQUwgU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhvcml6b250YWwtc2Nyb2xsIHsNCiAgICBoZWlnaHQ6IDE3cHg7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCAudGh1bWIgew0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIGhlaWdodDogMTdweDsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL2xlZnRfYXJyb3cucG5nIjsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvbGVmdF9hcnJvd193aGl0ZS5wbmciOw0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGwgLmluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL3JpZ2h0X2Fycm93LnBuZyI7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCAuaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9yaWdodF9hcnJvd193aGl0ZS5wbmciOw0KfQ0K"},{ name : "haxeui-core/styles/default/option.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAAQlBMVEVYWGzW/9EAAACYtdLCqYPP6PTU////9KxYWFhUVlhXVVJ4rthXkMHs1Kxsj6lSYXvElmdYWGeefViUXFhfUVNWUk58LX/QAAAACHRSTlMnCADr69QWFksN2hQAAAA8SURBVAjXY2BiZxDi5OBjYGNiYGTh4OTg4BJkZmTgFeEAA35WBgFOCFOUm0EYyuTiQWYiFCBrQxiGZAUAvXcDb/w8amgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OQk9YDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbmJveCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBjb2xvcjogIzAwMDAwMDsNCn0NCg0KLm9wdGlvbmJveDpob3ZlciB7DQp9DQoNCi5vcHRpb25ib3g6ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBjb2xvcjogIzkwOTA5MDsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIHdpZHRoOiAxNnB4Ow0KICAgIGhlaWdodDogMTZweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIHBhZGRpbmctdG9wOiAxcHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOnNlbGVjdGVkIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvb3B0aW9uLnBuZyI7DQp9DQoNCi5vcHRpb25ib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNENEQ0RDQgI0NDQ0NDQyB2ZXJ0aWNhbDsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5vcHRpb25ib3gtbGFiZWwgew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LWljb24gew0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQoub3B0aW9uYm94LWljb246ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQo"},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouY2FsZW5kYXIgLmJ1dHRvbiB7DQogICAgcGFkZGluZzogOHB4Ow0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLW9mZi1kYXkgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5IHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2VjZjJmOTsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1kYXk6aG92ZXIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTdjNGUyOw0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLWRheS1zZWxlY3RlZCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNhN2M0ZTI7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIENBTEVOREFSVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5jYWxlbmRhci12aWV3IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgLmNhbGVuZGFyIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgcGFkZGluZzogMHB4Ow0KfQ0KDQouY2FsZW5kYXItdmlldyAuaGJveCB7DQoJc3BhY2luZzogMDsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI3ByZXYtbW9udGggew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93LnBuZyI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQp9DQoNCi5jYWxlbmRhci12aWV3ICNuZXh0LW1vbnRoIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3cucG5nIjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQtbW9udGggew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LXllYXIgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQoJYm9yZGVyOiBub25lOw0KCXBhZGRpbmctdG9wOiAxcHg7DQoJYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQp9DQouY2FsZW5kYXItdmlldyAjY3VycmVudC15ZWFyIC5idXR0b24gew0KCWJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KCWJvcmRlcjogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/dark/buttons.css", data : "LmJ1dHRvbiB7DQogICAgYmFja2dyb3VuZDogIzNlNDE0MiAjMzYzODNhOw0KICAgIGJvcmRlci1jb2xvcjogIzE4MWExYjsNCiAgICBjb2xvcjogI2I0YjRiNDsNCn0NCg0KLmJ1dHRvbjpob3ZlciB7DQogICAgYmFja2dyb3VuZDogIzQzNDY0NyAjMzkzYjNjOw0KICAgIGJvcmRlci1jb2xvcjogIzE4MWExYjsNCiAgICBjb2xvcjogI2Q0ZDRkNDsNCn0NCg0KLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kOiAjMmYzMTMyICMyNzI5MmE7DQogICAgYm9yZGVyLWNvbG9yOiAjMTgxYTFiOw0KICAgIGNvbG9yOiAjZDRkNGQ0Ow0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBCVVRUT04gQkFSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5idXR0b24tYmFyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouYnV0dG9uLWJhciAuYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlci1jb2xvcjogIzE4MWExYjsNCn0NCg0KLmJ1dHRvbi1iYXIgLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDE1OTgyOw0KICAgIGNvbG9yOiB3aGl0ZTsNCn0NCg0KLmhvcml6b250YWwtYnV0dG9uLWJhciAuYnV0dG9uIHsNCiAgICBib3JkZXItbGVmdC1zaXplOiAwOw0KfQ0KDQouaG9yaXpvbnRhbC1idXR0b24tYmFyIC5idXR0b24uZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXNpemU6IDE7DQp9DQoNCi52ZXJ0aWNhbC1idXR0b24tYmFyIC5idXR0b24gew0KICAgIGJvcmRlci10b3Atc2l6ZTogMDsNCn0NCg0KLnZlcnRpY2FsLWJ1dHRvbi1iYXIgLmJ1dHRvbi5maXJzdCB7DQogICAgYm9yZGVyLXRvcC1zaXplOiAxOw0KfQ0K"},{ name : "haxeui-core/styles/dark/right_arrow_square.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMBwfMYEy4wCBhhggrOOz5iARRRZAkUULoEuCjGdCVMIRRTZDQD4NA07+SZ5fAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/dark/splitters.css", data : "LnNwbGl0dGVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA2cHg7DQogICAgY3Vyc29yOiByb3ctcmVzaXplOw0KICAgIF9fYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCn0NCg0KLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXI6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEREREREQ7DQp9DQoNCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyIC5pbWFnZSB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9zaXplcl9ncmlwcGVyX2hvcml6b250YWwucG5nIjsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDZweDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgY3Vyc29yOiBjb2wtcmVzaXplOw0KICAgIF9fYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciAuaW1hZ2Ugew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvc2l6ZXJfZ3JpcHBlcl92ZXJ0aWNhbC5wbmciOw0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0K"},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAAA+drJml8uevd7K2+1Ee7c1aaBcjsWfv99RhsA7cKqfvt/J2e01aaHJ3Ow1Z56kweGsxuM5cKxzoM9PhMCnxOJBd7SBqdSTtNp6otG90ui2zeetx+RFerM1a6Rllsiow+JDe7qhvt9jlsqfvt9dj8SzzOaoxeJCd7A5bqhVicKAqdOev95ik8SsyOOivuCmw99ThcJ4pNCnv99kl8tomc1+p9RRiMSUtts8drV0oNFdkcibu96IrtdOhL9Cerg7AHaNAAAANXRSTlMASfTz8fHx5uTh4d/T00RE9PLy8fHw5+bl4uHh4eHh39bW0NC/v7m5ubm4tVROSkpIR0ZAQIt9oOEAAACUSURBVBjTRc1FEsMwEETRjpkdZmZmS5FD979VRjVVce/e3zS8MGyMz6DdpuV2x0X/QTPn++uu9pRSDtAl0wRJL4DFzjIuDqIXm8snRlJhc7FTYMnmsgZwZHMpUTjlRZA6rET+t9oAiSl0YatqiugtqLBpMSyyLmzloCe4sNUQnpaxOFy29S+FAK2Rb0/0G+4zw/WbP+FUKshItzNPAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/splitters.css", data : "LnNwbGl0dGVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgaGVpZ2h0OiA2cHg7DQogICAgY3Vyc29yOiByb3ctcmVzaXplOw0KICAgIF9fYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCn0NCg0KLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXI6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEREREREQ7DQp9DQoNCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyIC5pbWFnZSB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9zaXplcl9ncmlwcGVyX2hvcml6b250YWwucG5nIjsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgd2lkdGg6IDZweDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgY3Vyc29yOiBjb2wtcmVzaXplOw0KICAgIF9fYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciAuaW1hZ2Ugew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvc2l6ZXJfZ3JpcHBlcl92ZXJ0aWNhbC5wbmciOw0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0K"},{ name : "haxeui-core/styles/dark/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogT1BUSU9OQk9YDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm9wdGlvbmJveCB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBjb2xvcjogI2I0YjRiNDsNCn0NCg0KLm9wdGlvbmJveDpob3ZlciB7DQp9DQoNCi5vcHRpb25ib3g6ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBjb2xvcjogIzkwOTA5MDsNCn0NCg0KLm9wdGlvbmJveC12YWx1ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzE4MWExYjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KICAgIHdpZHRoOiAxNnB4Ow0KICAgIGhlaWdodDogMTZweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDE4cHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIHBhZGRpbmctdG9wOiAxcHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQoub3B0aW9uYm94LXZhbHVlOnNlbGVjdGVkIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2Rhcmsvb3B0aW9uLnBuZyI7DQp9DQoNCi5vcHRpb25ib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNENEQ0RDQgI0NDQ0NDQyB2ZXJ0aWNhbDsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5vcHRpb25ib3gtbGFiZWwgew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoub3B0aW9uYm94LWljb24gew0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQoub3B0aW9uYm94LWljb246ZGlzYWJsZWQgew0KICAgIGN1cnNvcjogZGVmYXVsdDsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQo"},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTElTVFZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGlzdHZpZXcgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsNCn0NCg0KLmxpc3R2aWV3IC5saXN0dmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyIHsNCiAgICBjdXJzb3I6IHBvaW50ZXI7ICAgIA0KfQ0KDQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiBibGFjazsNCn0NCg0KLmxpc3R2aWV3IC5ldmVuIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KfQ0KDQoubGlzdHZpZXcgLmV2ZW46aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNkOWU1ZjI7DQp9DQoNCi5saXN0dmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KfQ0KDQoubGlzdHZpZXcgLm9kZDpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZTVmMjsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgew0KICAgIGhlaWdodDogYXV0bzsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTdjNGUyOw0KICAgIGNvbG9yOiB3aGl0ZTsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogd2hpdGU7DQp9DQo"},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRElBTE9HUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kaWFsb2cgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4yLCAzMCwgMiwgMSwgMywgZmFsc2UpOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgcGFkZGluZzogMXB4Ow0KfQ0KDQouZGlhbG9nLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLmRpYWxvZy10aXRsZSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0VFRUVFRTsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNBQkFCQUI7DQp9DQoNCi5kaWFsb2ctdGl0bGUtbGFiZWwgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgY29sb3I6ICM4ODg4ODg7DQogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOw0KfQ0KDQouZGlhbG9nLWNvbnRlbnQgew0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLmRpYWxvZy1mb290ZXItY29udGFpbmVyIHsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogI0FCQUJBQjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFRUVFOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Ow0KfQ0KDQouZGlhbG9nLWNsb3NlLWJ1dHRvbiB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9zbWFsbC1jbG9zZS1idXR0b24ucG5nIjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQogICAgY3Vyc29yOiAicG9pbnRlciI7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS5pbmZvIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2RpYWxvZ3MvaW5mb3JtYXRpb24ucG5nIjsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLnF1ZXN0aW9uIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2RpYWxvZ3MvcXVlc3Rpb24ucG5nIjsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLndhcm5pbmcgew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZGlhbG9ncy9leGNsYW1hdGlvbi5wbmciOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2UuZXJyb3Igew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZGlhbG9ncy9jcm9zcy1jaXJjbGUucG5nIjsNCn0NCg0KLm1lc3NhZ2Vib3ggew0KICAgIGluaXRpYWwtd2lkdGg6IDMwMHB4Ow0KfQ"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3IHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDFweDsNCiAgICBwYWRkaW5nOiAxcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouc2Nyb2xsdmlldyAuc2Nyb2xsdmlldy1jb250ZW50cyB7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDVweDsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgYm9yZGVyOiBub25lOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBNT0JJTEUgVkFSSUFOVFMNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouc2Nyb2xsdmlldzptb2JpbGUgew0KICAgIG1vZGU6IG1vYmlsZTsNCn0NCg"},{ name : "haxeui-core/styles/default/sizer_gripper_horizontal.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAEAQMAAACN9jyOAAAABlBMVEUAAAB/f3+S1582AAAAAXRSTlMAQObYZgAAAA9JREFUCNdjAILcBiAC0gALFQHbbrhJzwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/dark/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVINCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2FsZW5kYXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouY2FsZW5kYXIgLmJ1dHRvbiB7DQogICAgcGFkZGluZzogOHB4Ow0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLW9mZi1kYXkgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KICAgIGN1cnNvcjogZGVmYXVsdDsNCn0NCg0KLmNhbGVuZGFyIC5jYWxlbmRhci1kYXkgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzNzQ2Ow0KfQ0KDQouY2FsZW5kYXIgLmNhbGVuZGFyLWRheTpob3ZlciB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICM0MTU5ODI7DQp9DQoNCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5LXNlbGVjdGVkIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTk4MjsNCiAgICBjb2xvcjogd2hpdGU7DQp9DQoNCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0FMRU5EQVJWSUVXDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmNhbGVuZGFyLXZpZXcgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQogICAgcGFkZGluZzogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KfQ0KDQouY2FsZW5kYXItdmlldyAuY2FsZW5kYXIgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi5jYWxlbmRhci12aWV3IC5oYm94IHsNCglzcGFjaW5nOiAwOw0KfQ0KDQouY2FsZW5kYXItdmlldyAjcHJldi1tb250aCB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL2xlZnRfYXJyb3cucG5nIjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KfQ0KDQouY2FsZW5kYXItdmlldyAjbmV4dC1tb250aCB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL3JpZ2h0X2Fycm93LnBuZyI7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCn0NCg0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQtbW9udGggew0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LXllYXIgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQoJYm9yZGVyOiBub25lOw0KCXBhZGRpbmctdG9wOiAxcHg7DQoJYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCn0NCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LXllYXIgLmJ1dHRvbiB7DQoJYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCglib3JkZXI6IG5vbmU7DQp9DQo"},{ name : "haxeui-core/styles/dark/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTElTVFZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubGlzdHZpZXcgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCn0NCg0KDQoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzIHsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgew0KICAgIGN1cnNvcjogcG9pbnRlcjsgICAgDQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyIC5sYWJlbCB7DQogICAgY29sb3I6ICNkNGQ0ZDQ7DQp9DQoNCi5saXN0dmlldyAuZXZlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCn0NCg0KLmxpc3R2aWV3IC5ldmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzNzQ2Ow0KfQ0KDQoubGlzdHZpZXcgLm9kZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJhMmMyZDsNCn0NCg0KLmxpc3R2aWV3IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyZjM3NDY7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyIHsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlcjpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTk4MjsNCiAgICBjb2xvcjogd2hpdGU7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0K"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0xJREVSUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNsaWRlciB7DQogICAgcGFkZGluZy1sZWZ0OiA1cHg7DQogICAgcGFkZGluZy1yaWdodDogNXB4Ow0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuc2xpZGVyLXZhbHVlIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBoZWlnaHQ6IDhweDsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5ob3Jpem9udGFsLXNsaWRlciAuYnV0dG9uIHsNCiAgICB3aWR0aDogMTBweDsNCiAgICBoZWlnaHQ6IDIwcHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KICAgIA0KLnZlcnRpY2FsLXNsaWRlciB7DQogICAgcGFkZGluZy10b3A6IDVweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICAgIHBhZGRpbmctbGVmdDogMHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDBweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHdpZHRoOiA4cHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi52ZXJ0aWNhbC1zbGlkZXIgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAxMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQo"},{ name : "haxeui-core/styles/dark/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCQkFSIChUT1ApDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmJhciB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgcGFkZGluZy1yaWdodDogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzE4MWExYjsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7DQogICAgY2xpcDogdHJ1ZTsNCn0NCg0KLnRhYmJhciA+IC50YWJiYXItY29udGVudHMgew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzE4MWExYjsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudGFiYmFyLWJ1dHRvbiB7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KICAgIGJhY2tncm91bmQ6ICMzMTMzMzUgIzMxMzMzNSB2ZXJ0aWNhbDsNCiAgICBwYWRkaW5nOiA2cHggOHB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCiAgICBjb2xvcjogI2I0YjRiNDsNCn0NCg0KLnRhYmJhci1idXR0b24uZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi50YWJiYXItYnV0dG9uOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kOiAjMzkzYjNjICMzOTNiM2MgdmVydGljYWw7DQp9DQoNCi50YWJiYXItYnV0dG9uOmRvd24gew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQp9DQoNCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQoNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzNEM0Y0MTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0QzRjQxOw0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7DQogICAgY29sb3I6ICNkNGQ0ZDQ7DQp9DQoNCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkJBUiAoQk9UVE9NKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJiYXI6Ym90dG9tIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgICBwYWRkaW5nLXJpZ2h0OiAwcHg7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLXRvcC1jb2xvcjogIzE4MWExYjsNCiAgICBjbGlwOiB0cnVlOw0KfQ0KDQoudGFiYmFyOmJvdHRvbSAudGFiYmFyLWNvbnRlbnRzIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4Ow0KICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAjMTgxYTFiOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJiYXItYnV0dG9uOmJvdHRvbSB7DQogICAgdmVydGljYWwtYWxpZ246IHRvcDsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMHB4Ow0KfQ0KDQoudGFiYmFyLWJ1dHRvbi5maXJzdCB7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQ6Ym90dG9tIHsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQoNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMTgxYTFiOw0KICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAjM0QzRjQxOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzRDNGNDE7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsNCn0NCg0KLnRhYmJhci1idXR0b24tc2VsZWN0ZWQuZmlyc3Qgew0KICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQlZJRVcNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCi50YWJ2aWV3ID4gLnRhYnZpZXctY29udGVudCB7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzE4MWExYjsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0QzRjQxOw0KfQ0KDQoNCi50YWJiYXItc2Nyb2xsLWxlZnQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9sZWZ0X2Fycm93LnBuZyI7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBwYWRkaW5nOiA1cHg7DQp9DQoNCi50YWJiYXItc2Nyb2xsLXJpZ2h0IHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvcmlnaHRfYXJyb3cucG5nIjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLnRhYmJhci1idXR0b24gLnRhYi1jbG9zZS1idXR0b24gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvdGlueS1jbG9zZS1idXR0b24ucG5nIjsNCn0NCg"},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI2FiYWJhYjsNCiAgICBzcGFjaW5nOiAwOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Ow0KICAgIGNsaXA6IHRydWU7DQp9DQoNCi5hY2NvcmRpb24tYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogMHB4IHNvbGlkICNhYmFiYWI7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfc3F1YXJlLnBuZyI7DQogICAgaWNvbi1wb3NpdGlvbjogbGVmdDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLWNvbG9yOiAjYWJhYmFiOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDFweDsNCn0NCg0KLmFjY29yZGlvbi1idXR0b246ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3dfc3F1YXJlLnBuZyI7DQp9DQoNCi5hY2NvcmRpb24tcGFnZSB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgY2xpcDogdHJ1ZTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBib3JkZXItY29sb3I6ICNhYmFiYWI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIG9wYWNpdHk6IDE7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQouYWNjb3JkaW9uLXBhZ2U6ZXhwYW5kZWQgew0KICAgIGFuaW1hdGlvbjogYWNjb3JkaW9uQW5pbWF0ZUV4cGFuZCAwLjNzIGVhc2UgMHMgMTsNCn0NCg0KLmFjY29yZGlvbi1wYWdlOmNvbGxhcHNlZCB7DQogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlQ29sbHBhc2UgMC4zcyBlYXNlIDBzIDE7DQp9DQoNCkBrZXlmcmFtZXMgYWNjb3JkaW9uQW5pbWF0ZUV4cGFuZCB7DQogICAgMCUgew0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgICAgICBoZWlnaHQ6IDAlOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgIH0NCn0NCg0KQGtleWZyYW1lcyBhY2NvcmRpb25BbmltYXRlQ29sbHBhc2Ugew0KICAgIDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICAgICAgaGVpZ2h0OiAwJTsNCiAgICB9DQp9DQoNCi5hY2NvcmRpb24tcGFnZSAuc2Nyb2xsdmlldyB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIHBhZGRpbmctdG9wOiAwOw0KICAgIHBhZGRpbmctcmlnaHQ6IDA7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KICAgIHBhZGRpbmctYm90dG9tOiAwOw0KfQ0K"},{ name : "haxeui-core/styles/dark/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0hFQ0tCT1gNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2hlY2tib3ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICNiNGI0YjQ7DQp9DQoNCi5jaGVja2JveDpob3ZlciB7DQp9DQoNCi5jaGVja2JveDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIGNvbG9yOiAjOTA5MDkwOw0KfQ0KDQouY2hlY2tib3gtdmFsdWUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCiAgICB3aWR0aDogMTZweDsNCiAgICBoZWlnaHQ6IDE2cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjMDAwMDAwLCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDE1OTgyOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6c2VsZWN0ZWQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9jaGVjay5wbmciOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNENEQ0RDQgI0NDQ0NDQyB2ZXJ0aWNhbDsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jaGVja2JveC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNoZWNrYm94LWljb24gew0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouY2hlY2tib3gtaWNvbjpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIG9wYWNpdHk6IDAuNTsNCn0NCg"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSEVBREVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhlYWRlciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5oZWFkZXIgLmNvbHVtbiB7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7DQogICAgdGV4dC1hbGlnbjogbGVmdDsNCn0NCg0KLmhlYWRlciAuY29sdW1uLmxhc3Qgew0KICAgIGJvcmRlci1yaWdodC13aWR0aDogMDsNCn0NCg0KLmhlYWRlci5zY3JvbGxpbmcgLmNvbHVtbi5sYXN0IHsNCiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDFweDsNCn0NCg0KLmhlYWRlciAuc29ydGFibGUgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC91cF9kb3duX2Fycm93cy5wbmciOw0KICAgIGljb24tcG9zaXRpb246IGZhci1yaWdodDsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEFCTEVWSUVXDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnRhYmxldmlldyB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItcmFkaXVzOiAxcHg7DQogICAgcGFkZGluZzogMXB4Ow0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7DQogICAgc3BhY2luZzogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiAwcHg7DQp9DQoNCi50YWJsZXZpZXcgLmV2ZW4gew0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXIgLml0ZW1yZW5kZXJlciB7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLnRhYmxldmlldyAuZXZlbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Q5ZTVmMjsNCn0NCg0KLnRhYmxldmlldyAub2RkOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDllNWYyOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiBibGFjazsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNhN2M0ZTI7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlcjpzZWxlY3RlZCAubGFiZWwgew0KICAgIGNvbG9yOiB3aGl0ZTsNCn0NCg"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUFJPR1JFU1MNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgew0KICAgIDAlIHsNCiAgICAgICAgc3RhcnQ6IDA7DQogICAgICAgIGVuZDogMjU7DQogICAgfQ0KICAgIDUwJSB7DQogICAgICAgIHN0YXJ0OiA3NTsNCiAgICAgICAgZW5kOiAxMDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBzdGFydDogMDsNCiAgICAgICAgZW5kOiAyNTsNCiAgICB9DQp9DQoNCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsNCiAgICBhbmltYXRpb246IGluZGV0ZXJtaW5hdGUgMXMgZWFzZSAwcyBpbmZpbml0ZTsNCn0NCg0KLnByb2dyZXNzLXZhbHVlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogI0YxRjFGMSAjRkZGRkZGIHZlcnRpY2FsOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Ow0KfQ0KDQouaG9yaXpvbnRhbC1wcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM2Q0FBREIgIzIxNkFBRSB2ZXJ0aWNhbDsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyB7DQogICAgYmFja2dyb3VuZDogI0YxRjFGMSAjRkZGRkZGIGhvcml6b250YWw7DQogICAgaW5pdGlhbC13aWR0aDogMjBweDsNCiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7DQp9DQoNCi52ZXJ0aWNhbC1wcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgew0KICAgIGJhY2tncm91bmQ6ICM2Q0FBREIgIzIxNkFBRSBob3Jpem9udGFsOw0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQo"},{ name : "haxeui-core/styles/default/tiny-close-button.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIBAMAAAA2IaO4AAAAElBMVEUAAABfYmWbnZ+anJ6kpqhydXfdMeyoAAAAAXRSTlMAQObYZgAAADBJREFUCNcFwTEVACAIQMH/pAEQAAZ3GAxABe3fxTsubCaWI5oFbUAqLOtgSpwH5wNAFQNCOHGj4wAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogVEVYVCBGSUVMRA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50ZXh0ZmllbGQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgY29sb3I6ICM0NDQ0NDQ7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgcGFkZGluZzogNXB4IDVweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDEsIDEsIDEsIDMsIHRydWUpOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICBzcGFjaW5nOiA1cHg7DQogICAgaWNvbi1wb3NpdGlvbjogcmlnaHQ7DQp9DQoNCi50ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQoudGV4dGZpZWxkOmVtcHR5IHsNCiAgICBjb2xvcjogI0EwQTBBMDsNCn0NCg0KLnRleHRmaWVsZDpkaXNhYmxlZCB7DQogICAgY29sb3I6ICM5MDkwOTA7DQogICAgYmFja2dyb3VuZDogI0Q0RDRENCAjQ0NDQ0NDIHZlcnRpY2FsOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBURVhUIEFSRUENCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoudGV4dGFyZWEgew0KICAgIGNvbG9yOiAjNDQ0NDQ0Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDEsIDEsIDEsIDMsIHRydWUpOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAxMDBweDsNCn0NCg0KLnRleHRhcmVhOmFjdGl2ZSB7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzIxNkFBRTsNCn0NCg0KLnRleHRhcmVhOmVtcHR5IHsNCiAgICBjb2xvcjogI0EwQTBBMDsNCn0NCg"},{ name : "haxeui-core/styles/default/dialogs/cross-circle-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAABFFBMVEUAAABSUlJ7e4CdnZ1AQEAREREzMzM/Pz8lJSVRUVGmprI6Oj0LCwtqampycnILCwtVVVU6OjpFRUUmJiZVVVVRUVFISEgNDQ1UVFSqqqyfn6K/v76zs7LIyMjHx8dRUVNQUFH////c3NzQ0NHm5uba2uvq6urW1tbeVlbNRUWiExPu7u7i4uLf39/Nzc3XUFCuISGwEhKsERHW1uTQ0NvAwMHTqKi9l6DEmpm5kZXGc3Pyamq2ZGTBYWHpYGCuXl+8Xl2iV12pTlCjSk3RSUm9QkKtNTWpMzOIGRrUERHQERHFERG4ERG2ERGdERGUEBD39/fY2NjJydDDw8PDPT3JOzu4Li62Li7BKiqrGhqxGRm0FxcilCapAAAAIXRSTlMAPq6ibVFHGAkH3JKHfHh0Y2FcXFVNQh0V19fU1NLShoYJuWjGAAAA5UlEQVQY0yXI1XbDMBBF0ZExzFSuZNWt7RjDzEzl0P//R6zkPMyafYFVQJlEIoMKcCuIYk8qpepzDAWvzvK02pxMmtUin2UL4s3OuNtqdbUO4RGAHDX7Nv7ww3b/KypD7qGuYYw1dn7rjzlIkbbt4E9qErLdt60UCMp0/K9byjvZ6s70RwDBmv25nu+i551mFQGSSu+wZqbq+tyrJEG6azi+XVc1jGPjXgL5RRnqZLNcbgx9+P0qA0hcebRbLRar3ajMSQAQSHOl2mA+H9RKXDoAbBHDoTe/UFhkZuXFeCQSF/PsvwDvMCJpV4jhMQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/steppers.css", data : "Lm51bWJlcnN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouc3RlcHBlciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uIHsNCiAgICBwYWRkaW5nOiAzcHg7DQogICAgcGFkZGluZy10b3A6IDRweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNFNkU2RTY7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGMUYxOw0KfQ0KDQouc3RlcHBlci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0MyQzJDMjsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0NDQ0NDQzsNCn0NCg0KLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfYXJyb3cucG5nIjsNCn0NCg0KLnN0ZXBwZXItZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93LnBuZyI7DQp9DQoNCi5zdGVwcGVyLWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLnN0ZXBwZXItdGV4dGZpZWxkLCAuc3RlcHBlci10ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcGFkZGluZzogNHB4Ow0KICAgIHBhZGRpbmctdG9wOiA1cHg7DQogICAgcGFkZGluZy1ib3R0b206IDNweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICM4ODg4ODgsIDAuMiwgMSwgMSwgMSwgMywgdHJ1ZSk7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLnN0ZXBwZXItc3RlcCB7DQogICAgaGVpZ2h0OiAxMDAlOw0KfQ0KDQouc3RlcHBlci1zdGVwIC5zdGVwcGVyLWluYywgLnN0ZXBwZXItc3RlcCAuc3RlcHBlci1kZWluYyB7DQogICAgaGVpZ2h0OiA1MCU7DQp9DQoNCi5udW1iZXItc3RlcHBlciB7DQogICAgaW5pdGlhbC13aWR0aDogNjBweDsNCn0"},{ name : "haxeui-core/styles/default/up_down_arrows.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAeklEQVQImWN8K6PCwMDAwMDQHhFQuWIDhM0EF2JgYOiMCkKIQoQgoDcujIGBgZkhI+X///9MTEyMjIwMDAxMTEynjPQY4eYiAxaIFjhgZmZmYGBg3nD/+XF9bQifiYmJgYGhYP5yJgYGhuJFqyBKIEIIl0E4EJKBgQEAK1sc1cc2psYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/option.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCgw0CA+AtQAAAINJREFUGNN9zDEKwlAQRdE781egfdYQV6FgM0WWYpNNSPYRm2ktsgfb9LYSsE7+WAQE4ccDr7rwBMDdqyB1CEcAgkElt2Y2irtXoelBsOfXJLHUGqSuEAF2SLrq97Yg4KT8F0owbHe5q0pugalQX3nWi5rZKLHUAjfgvU76PKdD05yfH881KnTRsBd3AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/dark/up_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAEAQMAAAB4CLc+AAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABBJREFUCNdjEGCwYKhh+AcABAIBw16BkcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/dialogs/information.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAC5VBMVEUAAABQUFDk5OTOztwoKChxcXaWlpZ4eHg9PT5VVVVeXl5VVVVRUVFPT09QUFBOTk5QUFAhISFRUVEiIiLZ2djV1dWfn5/a2urKysq7u7vg4ODExNK8vMjPz8+6usi3t7uxsbKNjZhxcXlPT1VHR0toaGpWVlmKiooHBwcHBwcWFhcgICEHBwc8PDxBQUE9PT1DQ0M7OztFRUUiIiIHBwcaGhpVVVUrKysNDQ1RUVE5OTlGRkYzMzNVVVUUFBQvLy8ICAg3NzcQEBDb29vKytPHx9Hc3NzU1NPJycnExMS+vsK3t7zFxcTa2trZ2dm6usHV1dXIyMfCwsGampuQkJKpqamenp25ubm4uLiBgYR8fICTk5N+fn54eHju7u44ZeEzXdP///8wWMw1Ydo9be8tVMU7aegpTro/cPTc3NxTddzX19dJa9HMzMxEZsxOcNZGaM4qUL8lR69Cc/rb2+rb29vQ0NBIas8oS7UoSrJafN1Nb9QyXNJHac0/YskxWMgvVsbCwsI2WL0wUrji4u9vku7p6elihOTBxt83Y91PctjJyc/Nzc7FxcXCwsUsUsEvVMC+vr0uUrw0Vbd8nvh4mvV1l/Ntj+xgguc+a+c5Z+VegOJZe+FYeuBcft9RdNozX9YxWs1CZMmDk8ZCY8YxVsK/v78zVr4sTrYlSbHu8v2Epv3s7/qqvPNrje/f3+xmiOiesefY2ObX1+RgguLX1+Hg4OCVqOBAat4zYN52kNvCx9fOztZxitbBxtTU1NOUpNNLbtO3vNCcqdBshdBNbdB2jM9WdM7Ozs2Vos1Pb82YpcuSn8o2XMosVclKasjIyMezuMdtg8Z+j8OBkcFhecFedr4hSr1XcLxBX7ktULkpTbdWbLMiRa4jRaxCW6gkRaYWOZ8fPZgKK47U1N3S0tw+Z9i8wdXS0tFBZ9CNns2Nnc3Gxsq3vMqwtck7X8mHl8Y3W8U3WsSus8JGZL8sUb9FY70Fqja2AAAAXnRSTlMAB/73CamahHJpZWNFPC4lDAwBAfbepP398fDs5uTk4d/NuKmamZKNjYaFhHd2cG1qYl5dXFdWUlBMTEhFQjw2MioQ+PX19PTx8enp5+bm4+Dg3sLCv7+8vK6uppKSuUcb3gAAAv9JREFUOMuVz1VYU2Ecx/HBaAlJu7tb6bK7WwGBwcbYEDZZsRYp6e7u7u7u7ga7+9r/GYiiXujn6n2e3/d5z3tQ/0FITuvgAnBQS07oL/NCGalN15WXCgsvVb6xSUpm4W+zgqyUytk83AMBXN45FSlZhXm3S4tfwOGLK2rqmcz6mopiPE5ZXFrol11N7Bi+rK42zN4nOdnHPqy2rgyvJKY2VyhIix0ur25y8PFNswBpfr7BTdXlSmLSP74iK65k+5ri5xcQ4JyalJTqHBxg70959eK4uOzs+yVXNDQzfTNCQkKK7oGi0NDQHH9mc8NFyZl/kVGx7Wy3d7AA+UiQHx4e7kx3aH9LuC0jeKHkCtcueoYVohQJSq0YDEYl3aqr44wk8k65O4TPMf4MSwQrMyUlk2VpSaFQLOkxnR135SDQuMrtYYTdn8GnjY3RbGxoCXweM+oD95oGBHsvxfXRK4kgipdgg0ikUROG+LyoXu7qvRDsPuH5LYdCJLLiqbREAoHwOJE6PDzk5RUf84W7ZDcEOxd78hyIxE/mgAq7LRUOXl4e8Syea9xOCCQWe3oHs2KtEeaw482/urt7eMTGvvd29ZSAYNfJuEFnNkbAGnacNQbD4XDY7NZB1yW7INizijvw0s5YwB12YXfkFBkZyR5wW70HAvXLbj0fnxkJYGB/hDGa4RHtdkUdAr0Nb97xC5xMEBzYDTgmAhH8KrcNehCISJxy6WsNNEQYw25gbCjA7nU5LSGCApo3Xaq8CwLNQATsBhFmCCfv5y63NFEI+R3nS1qogabAyQA4IacgWmPJqh3yKAGdjUeeRo8GYbFYQyQwhEPQaPSToxt1UDMUD4mic1sm2rAkkh0gkbBtE425aNFDiqhZIvtE0dmOI5P9haYkkmlh/+SIYzZadB+8cK44sH55Ftmxe3xqenpqvNuRnLV8/QHYf1LU3rZ2GZmc/hCkk8nL1m7Thvvn0Vfdum7NSvSiReiVa9ZtVdVH/Uled//2LZs3b9m+X1ce9e++A05MTe+3ZKqgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/dark/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogRElBTE9HUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5kaWFsb2cgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4yLCAzMCwgMiwgMSwgMywgZmFsc2UpOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmYzMDsNCiAgICBwYWRkaW5nOiAxcHg7DQp9DQoNCi5kaWFsb2ctY29udGFpbmVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouZGlhbG9nLXRpdGxlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2QzZjQxOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzE4MWExYjsNCn0NCg0KLmRpYWxvZy10aXRsZS1sYWJlbCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBjb2xvcjogI2Q0ZDRkNDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7DQp9DQoNCi5kaWFsb2ctY29udGVudCB7DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQouZGlhbG9nLWZvb3Rlci1jb250YWluZXIgew0KICAgIGJvcmRlci10b3Atd2lkdGg6IDFweDsNCiAgICBib3JkZXItdG9wLWNvbG9yOiAjMTgxYTFiOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzZDNmNDE7DQp9DQoNCi5kaWFsb2ctZm9vdGVyIHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5kaWFsb2ctY2xvc2UtYnV0dG9uIHsNCiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3NtYWxsLWNsb3NlLWJ1dHRvbi5wbmciOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCiAgICBjdXJzb3I6ICJwb2ludGVyIjsNCn0NCg0KLmRpYWxvZyAjaWNvbkltYWdlLmluZm8gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZGlhbG9ncy9pbmZvcm1hdGlvbi5wbmciOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2UucXVlc3Rpb24gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZGlhbG9ncy9xdWVzdGlvbi5wbmciOw0KfQ0KDQouZGlhbG9nICNpY29uSW1hZ2Uud2FybmluZyB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kaWFsb2dzL2V4Y2xhbWF0aW9uLnBuZyI7DQp9DQoNCi5kaWFsb2cgI2ljb25JbWFnZS5lcnJvciB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kaWFsb2dzL2Nyb3NzLWNpcmNsZS5wbmciOw0KfQ0KDQoubWVzc2FnZWJveCB7DQogICAgaW5pdGlhbC13aWR0aDogMzAwcHg7DQp9"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU1dJVENIIChERUZBVUxUKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zd2l0Y2ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsNCn0NCg0KLnN3aXRjaC1sYWJlbCB7DQogICAgY29sb3I6IGJsYWNrOw0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YiB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAxNHB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzg4ODg4OCwgMC4zLCAxLCAxLCAxLCAzLCB0cnVlKTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gew0KICAgIHdpZHRoOiAyMHB4Ow0KICAgIGhlaWdodDogMjBweDsNCiAgICBib3JkZXItcmFkaXVzOiA1MHB4Ow0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICMwMDAwMDAsIDAuMiwgMCwgMCwgMCwgMywgZmFsc2UpOw0KfQ0KDQpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZCB7DQogICAgMCUgew0KICAgICAgICBwb3M6IDA7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBwb3M6IDEwMDsNCiAgICB9DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDE7DQp9DQogDQouc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQoNCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZCB7DQogICAgMCUgew0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzk4YzRlNjsNCiAgICB9DQp9DQoNCi5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTpzZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMTsNCn0NCg0KLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOnVuc2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZUV4dHJhU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFNXSVRDSCAoU1FVQVJFKQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zcXVhcmUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzg4ODg4OCwgMC4zLCAxLCAxLCAxLCAzLCB0cnVlKTsNCn0NCg0KLnNxdWFyZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gew0KICAgIGhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogNTAlOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5zcXVhcmUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7DQogICAgaGVpZ2h0OiAwOw0KICAgIHdpZHRoOiAwOw0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KQGtleWZyYW1lcyBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRTcXVhcmUgew0KICAgIDAlIHsNCiAgICAgICAgcG9zOiAwOw0KICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOw0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgcG9zOiAxMDA7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM5OGM0ZTY7DQogICAgfQ0KfQ0KDQouc3F1YXJlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkU3F1YXJlIDAuMnMgZWFzZSAwcyAxOw0KfQ0KDQouc3F1YXJlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6dW5zZWxlY3RlZCB7DQogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRTcXVhcmUgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFNXSVRDSCAoUElMTCkNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViIHsNCiAgICBib3JkZXItcmFkaXVzOiA1MHB4Ow0KICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7DQogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgYm9yZGVyOiAxcHggc29saWQgI0FCQUJBQjsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzg4ODg4OCwgMC4zLCAxLCAxLCAxLCAzLCB0cnVlKTsNCn0NCg0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiAuYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiA1MHB4Ow0KICAgIHdpZHRoOiAyMHB4Ow0KICAgIGhlaWdodDogMjBweDsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmEgew0KICAgIGhlaWdodDogMDsNCiAgICB3aWR0aDogMDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQp9DQoNCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZVNlbGVjdGVkUGlsbCB7DQogICAgMCUgew0KICAgICAgICBwb3M6IDA7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQogICAgfQ0KICAgIDEwMCUgew0KICAgICAgICBwb3M6IDEwMDsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzk4YzRlNjsNCiAgICB9DQp9DQoNCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgew0KICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkUGlsbCAwLjJzIGVhc2UgMHMgMTsNCn0NCg0KLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yjp1bnNlbGVjdGVkIHsNCiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZFBpbGwgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7DQp9DQo"},{ name : "haxeui-core/styles/dark/right_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAOElEQVQImWPYsmXLWxkVCGJiYGA4PmMCAwMDAwMDE4SC8Bm3bNnCAANMcJZlRgETnAWVgbAYGBgAg4cO3PCuD3sAAAAASUVORK5CYII"},{ name : "styles/main.css", data : ""},{ name : "haxeui-core/styles/default/down_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAEAQMAAAB4CLc+AAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABBJREFUCNdj+MdQw2DBIAAACh4Bwxq35G8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABAQMAAAAl21bKAAAAA1BMVEUAAACnej3aAAAAAXRSTlMAQObYZgAAAApJREFUCNdjYAAAAAIAAeIhvDMAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/dark/down_arrow.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWPcsmULAwZgsswoQBOyzChgglDIQgwMDEzIHLg0AIkLCIq+gFfgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/sizer_gripper_vertical.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKAQMAAACpNW1NAAAABlBMVEUAAAB/f3+S1582AAAAAXRSTlMAQObYZgAAAA9JREFUCNdjYGBIAEIUEgAWlAJBfLKpUgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/dark/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVUJBUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51YmFyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0QzRjQxOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7DQogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzE4MWExYjsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDIsIDQ1LCAjMDAwMDAwLCAwLjE1LCA2LCAxLCAzMCwgMzUsIGZhbHNlKTsNCn0NCg0KLm1lbnViYXItYnV0dG9uIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0QzRjQxOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBjb2xvcjogI2I0YjRiNDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWJhci1idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICM0MTU5ODI7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQoubWVudWJhci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzM5M2IzYzsNCiAgICBjb2xvcjogI2Q0ZDRkNDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMTgxYTFiOw0KICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDBweDsNCiAgICBib3JkZXItYm90dG9tLXNpemU6IDBweDsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTUVOVQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzkzYjNjOw0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMTgxYTFiOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMiwgNDUsICMwMDAwMDAsIDAuMTUsIDYsIDEsIDMwLCAzNSwgZmFsc2UpOw0KICAgIHNwYWNpbmc6IDA7DQogICAgd2lkdGg6IDIwMHB4Ow0KfQ0KDQoubWVudS5leHBhbmRlZCB7DQogICAgYm9yZGVyLXRvcC13aWR0aDogMHB4Ow0KICAgIGJvcmRlci10b3Atc2l6ZTogMHB4Ow0KfQ0KDQoubWVudS1maWxsZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMxODFhMWI7DQogICAgaGVpZ2h0OiAxcHg7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE1FTlVJVEVNUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5tZW51aXRlbSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzM5M2IzYzsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQoubWVudWl0ZW0tbGFiZWwsIC5tZW51aXRlbS1jaGVja2JveCwgLm1lbnVpdGVtLW9wdGlvbmJveCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW0tc2hvcnRjdXQtbGFiZWwgew0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7DQp9DQoNCi5tZW51aXRlbS1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoubWVudWl0ZW06aG92ZXIsIC5tZW51aXRlbTpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTk4MjsNCn0NCg0KLm1lbnVpdGVtIC5sYWJlbDpob3ZlciwgLm1lbnVpdGVtIC5sYWJlbDpzZWxlY3RlZCB7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0KDQoubWVudWl0ZW0tZXhwYW5kYWJsZSB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9yaWdodF9hcnJvdy5wbmciOw0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCn0NCg0KLm1lbnVzZXBhcmF0b3Igew0KICAgIGhlaWdodDogMXB4Ow0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTI3Mjg7DQogICAgaG9yaXpvbnRhbC1hbGlnbjogImNlbnRlciI7DQp9DQo"},{ name : "haxeui-core/styles/default/left_arrow_white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHAQMAAAAVq36TAAAABlBMVEUAAAD///+l2Z/dAAAAAXRSTlMAQObYZgAAABRJREFUCNdjEGAwYChg+ADEBgwCABA+AlHYFc5VAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUlVMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ydWxlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUJBQkFCOw0KfQ0KDQouaG9yaXpvbnRhbC1ydWxlIHsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsNCn0NCg0KLnZlcnRpY2FsLXJ1bGUgew0KICAgIGhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogMXB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCn0"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7CiAgICBuYXRpdmU6IHRydWU7Cn0KCi5oc2xpZGVyOm5hdGl2ZSwgLnZzbGlkZXI6bmF0aXZlLCAuaHByb2dyZXNzOm5hdGl2ZSwgLnZwcm9ncmVzczpuYXRpdmUgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUsIC50ZXh0YXJlYTpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmRpYWxvZzpuYXRpdmUgewogICAgcGFkZGluZy10b3A6IDBweDsKfQ"},{ name : "haxeui-core/styles/dark/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogSEVBREVSDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLmhlYWRlciB7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHNwYWNpbmc6IDA7DQp9DQoNCi5oZWFkZXIgLmNvbHVtbiB7DQogICAgYm9yZGVyLXJhZGl1czogMDsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi5oZWFkZXIgLnNvcnRhYmxlIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfZG93bl9hcnJvd3MucG5nIjsNCiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFRBQkxFVklFVw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi50YWJsZXZpZXcgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMxODFhMWI7DQogICAgYm9yZGVyLXJhZGl1czogMXB4Ow0KICAgIHBhZGRpbmc6IDFweDsNCiAgICB3aWR0aDogYXV0bzsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjcyODsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudGFibGV2aWV3IC50YWJsZXZpZXctY29udGVudHMgew0KICAgIHNwYWNpbmc6IDA7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcGFkZGluZzogMHB4Ow0KfQ0KDQoudGFibGV2aWV3IC5ldmVuIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmEyYzJkOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXIgLml0ZW1yZW5kZXJlciB7DQogICAgaGVpZ2h0OiBhdXRvOw0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLnRhYmxldmlldyAuZXZlbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJmMzc0NjsNCn0NCg0KLnRhYmxldmlldyAub2RkOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmYzNzQ2Ow0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlciAubGFiZWwgew0KICAgIGNvbG9yOiAjZDRkNGQ0Ow0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlcjpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQxNTk4MjsNCiAgICBjb2xvcjogd2hpdGU7DQp9DQoNCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7DQogICAgY29sb3I6IHdoaXRlOw0KfQ0K"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAMAAABg3Am1AAAC91BMVEUAAABgbY0+U25ga4QwSGe/wMy2ucI8SWC1t8OGj6Sana+zuMd3gppicY1ibYm0ucUzZZvH0ODExdZ8hZw/TGQ+TGPFxth/hp+vtMJNXHLExNI/TmVlhq5hbYi6vc2pr75veZI0ZpyrvdTK0+Q7WoC0t8d/iZ/Gx9ezuMaorb3Gx9dmc49OWm+DiaOpw+CVqMJUe6uwtcGprr5gbIdteZRaZn11gJpgbIhiborM1+g/XoM4WH2zusw8S2RhaYFCUGVuepdyfJVLWG9UYHjDxdZhbYg8SmGeprfKytmSmKw6bqZnjryTqseXq8RQd6mmrb58iaF4g5m2uMd4gZiorrx3gZeKkqZmco5smMg0Y5fP3e5ol8rS3+4+drUzZZs0ZJhPe67AzN7J0+RTeKc5X4o3WoNCYog6WoKuv9ZihK7M1ea+ydyht9JBX4U2V35ieZzAxtd7h59ldZPIzt9je6BBVHBYZoDBwtNMWHCco7Rea4KYqsRWcJZxeI6/wtJSXXTEw9O6vc08RVicpLU5SV7Ly904Rl19h55KVm43RFpLf7lFerOZuNqcudpIeK48bqWftdGftdGZsc6OqsuswdlLd62qv9l2lrxjh7NlibRJbpumudBcga6svtWnutJdg7GKoL6svdZylL1uj7ZSeahJbJREZZCGlKyOm7OZorNgboyxtcNwfJmKkqWhprSHjaB5fJBmc4yor7ylp7Vomc08drVRiMSUttt+p9OStdt9p9M9d7bQ3+9nmMypxOGBqdQ6dbRtnc9gk8qsxuN6pdJ1odFwntBtnM1pms1SicVQh8RHfrs8draqxeKhvuCaut5yoNBilctajsZYjMSXuNxOhcBBerg0aJ8zZ52nwuGdvN6Vt9yOstlklcpckMZNhcM5b6o3a6TR4PDL2+7K2u23zuejwOBekchSisZZjcRVicI6c7EyZZvT4fHF2OzC1eu+0umkweGJr9dfkspik8hWi8VMg75Lgr1Bdq85cq+yyuWEq9VFe7VNUsNiAAAAtHRSTlMABQIDBAYDEgUFAhYWChcK/ac7OzYuFxQTDQwJpjsgDw/9p6aXOjQyMisTExIL+KenPDc0MiciGxXQlpVyXUdCPDk1MSIiHhwVD/7Tx6SkcG1dR0dGLCsq+/r5+Pb29vDMxL28vLerqKOhoKCXj454dnV1cXBpaGdiXldVTUlIQkE8OzYzKiYgHhz9/fz48fHW087OzMzKysjCwLu7t6Cgn5eXlJSFhXl4bm1jY11FRUM4IQf95cbSAAAEV0lEQVRIx32WZZwSQRjGF1ZQMMAEG+zE7u7u7u7u7u7u7m4WdlkQFEwEFOG48+70zu5u/eAE7C6s+nzgA7/3P888O/PODAEkTwclk4EfuZKIllQpV2BJJCRJoHKFKr82PZY2vyqaIRWlm2k0GZBK6jJKpOA/Rf4mxReULwdUuHCx4vm0KlkEUYJyzZLORbJC1atXsUuVnICQq5rMGLm7ANLQoTXLFeMQWF65yNmjrVqVgWq198DMKhkBkL/4vkCiz3vRcxHIsPFEe4woLsDyDm3XGsDfHqfXnvzFdKhSTpJIpy0/ImA2M0zg3tOEBI/n4q6aHYud1zbTZahccdaRlhedzqe+pNv+Bw9umoKjGpRKQ8jSF878lDEjJQZ83gSnYXOb0ws6d6o3a9w6g9Nntz37cvOmCejGiur1w8ATBGAxifc+JOw4dqrduJbepKs3wMARPW9evX5aAOSYl/lREg9Axuxb1bJF1zuCauSgL5QNAVkyW++ZY8RcvWOKlVsdAQpanUxM/RWj8VNM/Y3veh54z8SMbwSK9WiurwGBdE0B8DYQMz7S5aj6YKq+xkIIlCg63PpIGIK5bTOGCWHobyH96OxpwcLlWjShu/WDsB7Wij1+x/eutRistFKVb24160+Gnw8cX0zcSIkfNH9ZbikB5zTF+pbh8/ISJn8e6lYrO4gA+iFXw9n93yRG5xV7fH09pE5jaEAoZU2Lju3pwRYgr4i4iVehzyRgAABk0b7ae0aYV+zxPHUgNAAAtChRrOYjOD6XV0wE9VOxAbbI17GfNyqvKLl78JylKAG2SF++jYHPK9Yn0+rJoHkiAGzTaeuF44s9BkyH7SkENlz6H3B/OwKEU1pJ/8fiLrUGT0kQOommr/2r3k9RP/jQ+LM+pmna8vdZXb9LUZRDjT8rt3BPXP8kXrAAYENo4fit4bPQUNfE4/sdFARS8NbgNp8dVCMPcV6sV9zmQ9v7nYv+O3GfCouNx9sbN9BDj4UWEThvRLdScQPhFn1opjlZBDn8LMUp5TVqUXwIPP5IC3QpOm8kRLwaHgL4mHmHMvOz4r8nL0dIDY8ZfJA9wRH4WfF5eaWqa3AnnxcBQg8uL5+6uZo7jB9+xIDQA48v1A8I4OP+sUtYbLdbrnXd0ne5m3I4oggI4AvFKQDsruRg3M627dqN35rs/8YKEDYELhQMmC3h2tvX77odvfq2PVOkU6dztce36HH92Ut3HBsOkQKvLHQp/oLzuPI56I67dYsdMLFDkSUanS5Towq1x2yzGW3Jz158jYOzewUvRdieI2nXtZewlmV7bTrZoWJlTWkJmUaSsSpAjrfoYQMyfn7pZqnDoE3Rxb5/T1mo1q1bT6xbsXLJjBLUvSRGxgzLgzXsILrYCUWzJuh1ULduXfg6gOXhVpQipEuFvFgVKqGnAyGH748MQJkyVS2pQ6PzAoiuZNVMSJHHiRQgCgkWSSqlMc8fKUlKsPDz5w9agXK/G5FNrAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/dark/frames.css", data : "LmZyYW1lIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouZnJhbWUtY29udGVudHMgew0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICMyNTI3Mjg7DQogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjMjUyNzI4Ow0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMjUyNzI4Ow0KICAgIHBhZGRpbmc6IDEwcHg7DQogICAgcGFkZGluZy10b3A6IDE1cHg7DQp9DQoNCi5mcmFtZS10aXRsZSB7DQogICAgY29sb3I6ICNiNGI0YjQ7DQp9DQoNCi5mcmFtZS1sZWZ0LWxpbmUsIC5mcmFtZS1yaWdodC1saW5lIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KICAgIGhlaWdodDogMXB4Ow0KfQ0K"},{ name : "haxeui-core/styles/default/dialogs/exclamation.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAMAAABEpIrGAAAB3VBMVEUAAACVfwD9+7zFrAHGrQGeiAC6owDUxDzr5oDd213v5oft44HZzE/Qwzbr4Ha6pxTo3Gy8qBTk11+WgAC+qhPVwjW+qRHTwCu/qQ7SvSHRuxehiwHQuA/MswHCqgaulwDDqwPGrQG0nAHIrwG3oAHKsQG7owHMswGVfwC+pgGahADMswHBqQGmjwDErAGymgHHrgG2ngHJsAG5oQHLsgHp5XD065Xe22rm1znk0iDz6pTi23Ph1EHdzSHx6JHe0kfYyynu44PZz0vUxzDZyUzBqQy/qAjt3SXn2irp2yfa1Dbk2S3S0D/h1y/d1jLu3WbX0znV0Tvt3ST15Xb043Lw32vv3mjOzkPw4z/v4Tnu3ioiIhoAAADv4TTv3y7++rj8+LX89q379av48aL58Z737JP38o787o716Yr46YLs6YLz5oD453p2dnaXknR4d3BwcHCopWt6eGhoaGh+e2FgYGDi3l6GgVxXV1ff2k3c1k3u40nVz0nT0ULi2j3Bvjbk2TOenC+GhSqVkSNtbSNfXhpIRxUuLg4eHQcdHAcWFgf37pjt4XPf33Dk4Wbr5GLZ0lzh11fl4FXt41OIglHV1FDo30fSyUbX1ETRyETd10A4ODZkYSzp2yglJSNztjb6AAAAR3RSTlMAzPoVDQgF0P7+7eTe3tzc1tPPzMnGw7+8ubKyq6uqoaCVkoiCenNtZmRgX1VORz05LishH/75+fj49fX09PDu7uro6NS0tIfvrv4AAAGdSURBVDjLrZFFWwJhFEZ1DOzu7u7ubtFPRRAkLLq7u8Hu9rc6MIAIDBs9q3ufc3Zvwn+TXF2dHDfoLCjojOeTqiCoKilO0Jp3dJTXiu6HKiAWC6oYQg2ac074/NOcZjQ/UA5xcDjOcfkAStCYSd+HoWc2xvZ9pcc4oUAgxJ2U9sXyqfUZDLxILBbh2fP1qTGCnuJTPEEqk0kJ+LPinmifUjfDBkCuUMgB4GXUpUQFXZgzAgAqtVoFAIGB6YpaqWaCBwB4eP/60D+/3kzWRG7WvnQOwK3e7vXaD2AuMe0RKy2PXGgNWKzV5bJiYR5HV35v1pKVZvAJi9NpwfpIz24J94NladpdHyaHw+Q/XtLLBsOCpqyrHT9KLleJXJrsph/fXzL8thGJpqQ/FDQs3G0j2DweW+A0LjYEfW/RtXkLwU2huLcCGIt6AyvVzj5tBiBTKOTgbZ6rRTbrzr9fCyIhkyVrIfK7/StVTpHWg+iYTF3o+Zyu9G3WkUtcRSO3Aw4Kx4hEIolEolKpNBrtEAY2ewjjhXDQlhiHtoS/8w0/HYkkEMHbQgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/dark/up_down_arrows.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAARElEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMwAg3F0UUq1omuL1wYJlRwAShkIUQLoNw4NIA3UcXw9uo6KsAAAAASUVORK5CYII"},{ name : "haxeui-core/locale/es/dialog.properties", data : "ZGlhbG9nLnNhdmU9R3VhcmRhcg0KZGlhbG9nLnllcz1TaQ0KZGlhbG9nLm5vPU5vDQpkaWFsb2cuY2xvc2U9Q2VycmFyDQpkaWFsb2cub2s9T0sNCmRpYWxvZy5jYW5jZWw9Q2FuY2VsYXINCmRpYWxvZy5hcHBseT1BcGxpY2FyDQoNCg"},{ name : "haxeui-core/styles/default/frames.css", data : "LmZyYW1lIHsNCiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7DQogICAgd2lkdGg6IGF1dG87DQogICAgaGVpZ2h0OiBhdXRvOw0KfQ0KDQouZnJhbWUtY29udGVudHMgew0KICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNEREREREQ7DQogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjREREREREOw0KICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjREREREREOw0KICAgIHBhZGRpbmc6IDEwcHg7DQogICAgcGFkZGluZy10b3A6IDE1cHg7DQp9DQoNCi5mcmFtZS10aXRsZSB7DQogICAgY29sb3I6ICMyMjIyMjI7DQp9DQoNCi5mcmFtZS1sZWZ0LWxpbmUsIC5mcmFtZS1yaWdodC1saW5lIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREREREREOw0KICAgIGhlaWdodDogMXB4Ow0KfQ0K"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgcGFkZGluZy1ib3R0b206IDBweDsNCn0NCg0KLnByb3BlcnR5LWdyaWQgLnNjcm9sbHZpZXctY29udGVudHMgew0KICAgIHBhZGRpbmc6IDA7DQogICAgd2lkdGg6IDEwMCU7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnByb3BlcnR5LWdyb3VwIHsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRURFREVEOw0KICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXItY29sb3I6ICNBQkFCQUI7DQogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICAgIGJvcmRlci1ib3R0b20tc2l6ZTogMXB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0Y1RjVGNTsNCn0NCg0KLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmV4cGFuZGVkIC5wcm9wZXJ0eS1ncm91cC1oZWFkZXItaWNvbiB7DQogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93X3NxdWFyZS5wbmciOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmNvbGxhcHNlZCAucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gew0KICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfc3F1YXJlLnBuZyI7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cC1oZWFkZXItbGFiZWwgew0KfQ0KDQoucHJvcGVydHktZ3JvdXAtY29udGVudHMgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHNwYWNpbmc6IDE7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0FCQUJBQjsNCiAgICBwYWRkaW5nLWJvdHRvbTogMXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1sYWJlbC1jb250YWluZXIgew0KICAgIHdpZHRoOiA1MCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgaGVpZ2h0OiAxMDAlOw0KICAgIHBhZGRpbmctbGVmdDogNXB4Ow0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3ItY29udGFpbmVyIHsNCiAgICB3aWR0aDogNTAlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KfSAgICAgICAgDQoNCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsIHsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAtaXRlbS1lZGl0b3Igew0KICAgIHdpZHRoOiAxMDAlOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLnRleHRmaWVsZCB7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KfQ0KDQoucHJvcGVydHktZ3JvdXAgLmNoZWNrYm94IHsNCiAgICBwYWRkaW5nOiA1cHg7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDA7DQp9DQoNCi5wcm9wZXJ0eS1ncm91cCAuZHJvcGRvd24gew0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBib3JkZXItcmFkaXVzOiBub25lOw0KfQ0K"},{ name : "haxeui-core/styles/dark/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogUlVMRQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ydWxlIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KfQ0KDQouaG9yaXpvbnRhbC1ydWxlIHsNCiAgICBoZWlnaHQ6IDFweDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsNCn0NCg0KLnZlcnRpY2FsLXJ1bGUgew0KICAgIGhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogMXB4Ow0KICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsNCn0"},{ name : "haxeui-core/styles/dark/steppers.css", data : "Lm51bWJlcnN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDFweDsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQouc3RlcHBlciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uIHsNCiAgICBwYWRkaW5nOiAzcHg7DQogICAgcGFkZGluZy10b3A6IDRweDsNCiAgICBwYWRkaW5nLWJvdHRvbTogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzJmMzA7DQogICAgb3BhY2l0eTogMTsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU0ODRhOw0KfQ0KDQouc3RlcHBlci1idXR0b246ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NDg0YTsNCn0NCg0KLnN0ZXBwZXItYnV0dG9uOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0NDQ0NDQzsNCn0NCg0KLnN0ZXBwZXItaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvdXBfYXJyb3cucG5nIjsNCn0NCg0KLnN0ZXBwZXItZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGFyay9kb3duX2Fycm93LnBuZyI7DQp9DQoNCi5zdGVwcGVyLWluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RhcmsvdXBfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kYXJrL2Rvd25fYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLnN0ZXBwZXItdGV4dGZpZWxkLCAuc3RlcHBlci10ZXh0ZmllbGQ6YWN0aXZlIHsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgd2lkdGg6IDEwMCU7DQogICAgcGFkZGluZzogNHB4Ow0KICAgIHBhZGRpbmctdG9wOiA1cHg7DQogICAgcGFkZGluZy1ib3R0b206IDNweDsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGZpbHRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUyNzI4Ow0KfQ0KDQouc3RlcHBlci1zdGVwIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQp9DQoNCi5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItaW5jLCAuc3RlcHBlci1zdGVwIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBoZWlnaHQ6IDUwJTsNCn0NCg0KLm51bWJlci1zdGVwcGVyIHsNCiAgICBpbml0aWFsLXdpZHRoOiA2MHB4Ow0KfQ"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQ0hFQ0tCT1gNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQouY2hlY2tib3ggew0KICAgIHdpZHRoOiBhdXRvOw0KICAgIGhlaWdodDogYXV0bzsNCiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgY29sb3I6ICMwMDAwMDA7DQp9DQoNCi5jaGVja2JveDpob3ZlciB7DQp9DQoNCi5jaGVja2JveDpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIGNvbG9yOiAjOTA5MDkwOw0KfQ0KDQouY2hlY2tib3gtdmFsdWUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNBQkFCQUI7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjsNCiAgICB3aWR0aDogMTZweDsNCiAgICBoZWlnaHQ6IDE2cHg7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgaWNvbjogbm9uZTsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDIsIDIsIDEsIDMsIHRydWUpOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCn0NCg0KLmNoZWNrYm94LXZhbHVlOmhvdmVyIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6c2VsZWN0ZWQgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9jaGVjay5wbmciOw0KfQ0KDQouY2hlY2tib3gtdmFsdWU6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQ6ICNENEQ0RDQgI0NDQ0NDQyB2ZXJ0aWNhbDsNCiAgICBjdXJzb3I6IGRlZmF1bHQ7DQp9DQoNCi5jaGVja2JveC1sYWJlbCB7DQogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsNCn0NCg0KLmNoZWNrYm94LWljb24gew0KICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsNCiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOw0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouY2hlY2tib3gtaWNvbjpkaXNhYmxlZCB7DQogICAgY3Vyc29yOiBkZWZhdWx0Ow0KICAgIG9wYWNpdHk6IDAuNTsNCn0NCg"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogU0NST0xMDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U5RTlFOTsNCn0NCg0KLnNjcm9sbCAuYnV0dG9uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFOUU5Ow0KICAgIHBhZGRpbmc6IDA7DQogICAgZmlsdGVyOiBub25lOw0KfQ0KDQouc2Nyb2xsIC5idXR0b246aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEN0Q3RDc7DQp9DQoNCi5zY3JvbGwgLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1MjUyOw0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnNjcm9sbCAuZGVpbmMgew0KICAgIGhlaWdodDogMTdweDsNCiAgICB3aWR0aDogMTdweDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0KDQouc2Nyb2xsIGRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQp9DQoNCi5zY3JvbGwgZGVpbmM6ZG93biB7DQp9DQoNCi5zY3JvbGwgLmluYyB7DQogICAgaGVpZ2h0OiAxN3B4Ow0KICAgIHdpZHRoOiAxN3B4Ow0KICAgIG9wYWNpdHk6IDE7DQp9DQoNCi5zY3JvbGwgLmluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0KDQouc2Nyb2xsIC5pbmM6ZG93biB7DQp9DQoNCi5zY3JvbGwgLnRodW1iIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Ow0KfQ0KDQouc2Nyb2xsIC50aHVtYjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0FBQUFBQTsNCn0NCg0KLnNjcm9sbCAudGh1bWI6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTI1MjsNCn0NCg0KLnNjcm9sbCAudGh1bWI6ZGlzYWJsZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNEREREREQ7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIFZFUlRJQ0FMIFNDUk9MTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi52ZXJ0aWNhbC1zY3JvbGwgew0KICAgIHdpZHRoOiAxN3B4Ow0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7DQogICAgd2lkdGg6IDE3cHg7DQogICAgaGVpZ2h0OiAxN3B4Ow0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIC5kZWluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93LnBuZyI7DQp9DQoNCi52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jOmRvd24gew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC91cF9hcnJvd193aGl0ZS5wbmciOw0KfQ0KDQoudmVydGljYWwtc2Nyb2xsIC5pbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93LnBuZyI7DQp9DQoNCi52ZXJ0aWNhbC1zY3JvbGwgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZG93bl9hcnJvd193aGl0ZS5wbmciOw0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBIT1JJWk9OVEFMIFNDUk9MTA0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5ob3Jpem9udGFsLXNjcm9sbCB7DQogICAgaGVpZ2h0OiAxN3B4Ow0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGwgLnRodW1iIHsNCiAgICB3aWR0aDogMTdweDsNCiAgICBoZWlnaHQ6IDE3cHg7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCAuZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93LnBuZyI7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCAuZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLmhvcml6b250YWwtc2Nyb2xsIC5pbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciOw0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGwgLmluYzpkb3duIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTU9CSUxFIFZBUklBTlRTDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLnNjcm9sbDptb2JpbGUgLmluYywgLnNjcm9sbDptb2JpbGUgLmRlaW5jIHsNCiAgICBoaWRkZW46IHRydWU7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgew0KICAgIG9wYWNpdHk6IC41Ow0KICAgIGhlaWdodDogOHB4Ow0KICAgIHBhZGRpbmc6IDJweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KfQ0KDQouaG9yaXpvbnRhbC1zY3JvbGw6bW9iaWxlIC50aHVtYiB7DQogICAgaGVpZ2h0OiA0cHg7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KfQ0KDQoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSB7DQogICAgb3BhY2l0eTogLjU7DQogICAgd2lkdGg6IDhweDsNCiAgICBwYWRkaW5nOiAycHg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbDptb2JpbGUgLnRodW1iIHsNCiAgICB3aWR0aDogNHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCn0NCg"}];
js_Boot.__toStr = ({ }).toString;
haxe_ui_validation_ValidationManager.get_instance().registerEvent("ValidationStop",haxe_ui_backend_html5_HtmlUtils.onValidationStop);
tink_state_internal_Revision.counter = .0;
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
coconut_diffing_Widget._hx_skip_constructor = false;
coconut_diffing_Root.byParent = new haxe_ds_ObjectMap();
coconut_diffing_TypeId.idCounter = 0;
coconut_diffing_internal_VEmpty.TYPE = coconut_diffing_TypeId.idCounter++;
coconut_haxeui__$Renderer_HaxeUiBackend.POOL = [];
coconut_haxeui_Renderer.BACKEND = new coconut_haxeui__$Renderer_HaxeUiBackend();
coconut_haxeui_HaxeUiNodeType.events = (function($this) {
	var $r;
	let _g = new haxe_ds_StringMap();
	_g.h["onAnimationEnd"] = "animationend";
	_g.h["onAnimationStart"] = "animationstart";
	_g.h["onBeforeChange"] = "beforeChange";
	_g.h["onChange"] = "change";
	_g.h["onClick"] = "click";
	_g.h["onDisabled"] = "disabled";
	_g.h["onEnabled"] = "enabled";
	_g.h["onFocusIn"] = "focusin";
	_g.h["onFocusOut"] = "focusout";
	_g.h["onHidden"] = "hidden";
	_g.h["onInitialize"] = "initialize";
	_g.h["onKeyDown"] = "keydown";
	_g.h["onKeyUp"] = "keyup";
	_g.h["onMouseDown"] = "mousedown";
	_g.h["onMouseMove"] = "mousemove";
	_g.h["onMouseOut"] = "mouseout";
	_g.h["onMouseOver"] = "mouseover";
	_g.h["onMouseUp"] = "mouseup";
	_g.h["onMouseWheel"] = "mousewheel";
	_g.h["onMove"] = "move";
	_g.h["onReady"] = "ready";
	_g.h["onRendererCreated"] = "rendererCreated";
	_g.h["onRendererDestroyed"] = "rendererDestroyed";
	_g.h["onResize"] = "resize";
	_g.h["onRightClick"] = "rightclick";
	_g.h["onRightMouseDown"] = "rightmousedown";
	_g.h["onRightMouseUp"] = "rightmouseup";
	_g.h["onScrollStart"] = "scrollstart";
	_g.h["onScrollStop"] = "scrollstop";
	_g.h["onScrollchange"] = "scrollchange";
	_g.h["onShown"] = "shown";
	_g.h["onValidationStart"] = "ValidationStart";
	_g.h["onValidationStop"] = "ValidationStop";
	$r = _g;
	return $r;
}(this));
coconut_ui_internal_ImplicitContext.ORPHAN = new tink_core__$Lazy_LazyConst(null);
tink_state_internal_Invalidator._hx_skip_constructor = false;
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ui_backend_BackendImpl.id = "html5";
haxe_ui_backend_ComponentSurface._hx_skip_constructor = false;
haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_ComponentBounds.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentImpl.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_backend_ComponentImpl._stylesAdded = false;
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_ScreenBase._hx_skip_constructor = false;
haxe_ui_backend_AssetsBase._hx_skip_constructor = false;
haxe_ui_layouts_Layout._hx_skip_constructor = false;
haxe_ui_containers_HBox.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_HBox();
});
haxe_ui_components_Label.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_components_Label();
});
haxe_ui_backend_ImageSurface._hx_skip_constructor = false;
haxe_ui_backend_PlatformImpl._vscrollWidth = -1;
haxe_ui_backend_PlatformImpl._hscrollHeight = -1;
haxe_ui_backend_TextBase._hx_skip_constructor = false;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	let _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["doubleclick"] = "dblclick";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scrollchange"] = "scroll";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	let _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mousedown";
	_g.h["touchend"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["dblclick"] = "doubleclick";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scroll"] = "scrollchange";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH = (function($this) {
	var $r;
	let _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "touchmove";
	_g.h["mousedown"] = "touchstart";
	_g.h["mouseup"] = "touchend";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_behaviours_Behaviour._hx_skip_constructor = false;
haxe_ui_core_CompositeBuilder._hx_skip_constructor = false;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_binding_BindingManager.bindingInfo = new haxe_ds_ObjectMap();
haxe_ui_binding_BindingManager.targets = new haxe_ds_StringMap();
haxe_ui_events_Events._hx_skip_constructor = false;
haxe_ui_events_UIEvent._hx_skip_constructor = false;
haxe_ui_components_DropDownHandler._hx_skip_constructor = false;
haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT = "%d/%m/%Y";
haxe_ui_components_DropDownBuilder.HANDLER_MAP = new haxe_ds_StringMap();
haxe_ui_containers_CalendarView.MONTH_NAMES = ["January","Febuary","March","April","May","June","July","August","September","October","November","December"];
haxe_ui_containers_Header.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_Header();
});
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_containers_menus_MenuBar.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_menus_MenuBar();
});
haxe_ui_containers_menus_MenuItem.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_menus_MenuItem();
});
haxe_ui_containers_menus_MenuCheckBox.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_menus_MenuCheckBox();
});
haxe_ui_containers_menus_MenuOptionBox.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_menus_MenuOptionBox();
});
haxe_ui_containers_properties_Property.COCONUT_NODE_TYPE = new coconut_haxeui_HaxeUiNodeType(function() {
	return new haxe_ui_containers_properties_Property();
});
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_ValueTools.colors = (function($this) {
	var $r;
	let _g = new haxe_ds_StringMap();
	_g.h["black"] = 0;
	_g.h["red"] = 16711680;
	_g.h["lime"] = 65280;
	_g.h["blue"] = 255;
	_g.h["white"] = 16777215;
	_g.h["aqua"] = 65535;
	_g.h["fuchsia"] = 16711935;
	_g.h["yellow"] = 16776960;
	_g.h["maroon"] = 8388608;
	_g.h["green"] = 32768;
	_g.h["navy"] = 128;
	_g.h["olive"] = 8421376;
	_g.h["purple"] = 8388736;
	_g.h["teal"] = 32896;
	_g.h["silver"] = 12632256;
	_g.h["gray"] = 8421504;
	_g.h["grey"] = 8421504;
	$r = _g;
	return $r;
}(this));
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = haxe_ui_styles_EasingFunction.EASE;
haxe_ui_tooltips_ToolTipManager.defaultDelay = 500;
haxe_ui_tooltips_ToolTipManager.fade = true;
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
tink_core_Callback.depth = 0;
tink_core_SimpleDisposable._hx_skip_constructor = false;
tink_state_Scheduler.direct = new tink_state__$Scheduler_DirectScheduler();
tink_state_Observable.MAX_ITERATIONS = 100;
tink_state_Observable.scheduler = tink_state_Scheduler.batched(tink_state_Scheduler.batcher());
tink_state_Observable.isUpdating = false;
tink_state__$Scheduler_JustOnce.pool = [];
Main_main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
